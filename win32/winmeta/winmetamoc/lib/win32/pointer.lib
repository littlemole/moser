{

if( runtime.global("Win32") == nil ) { runtime.global("Win32", {}); }
var Win32 = runtime.global("Win32");

Win32.POINTER_FLAGS = {
    "POINTER_FLAG_NONE" : 0, 
    "POINTER_FLAG_NEW" : 1, 
    "POINTER_FLAG_INRANGE" : 2, 
    "POINTER_FLAG_INCONTACT" : 4, 
    "POINTER_FLAG_FIRSTBUTTON" : 16, 
    "POINTER_FLAG_SECONDBUTTON" : 32, 
    "POINTER_FLAG_THIRDBUTTON" : 64, 
    "POINTER_FLAG_FOURTHBUTTON" : 128, 
    "POINTER_FLAG_FIFTHBUTTON" : 256, 
    "POINTER_FLAG_PRIMARY" : 8192, 
    "POINTER_FLAG_CONFIDENCE" : 16384, 
    "POINTER_FLAG_CANCELED" : 32768, 
    "POINTER_FLAG_DOWN" : 65536, 
    "POINTER_FLAG_UPDATE" : 131072, 
    "POINTER_FLAG_UP" : 262144, 
    "POINTER_FLAG_WHEEL" : 524288, 
    "POINTER_FLAG_HWHEEL" : 1048576, 
    "POINTER_FLAG_CAPTURECHANGED" : 2097152, 
    "POINTER_FLAG_HASTRANSFORM" : 4194304
};


Win32.TOUCH_FEEDBACK_MODE = {
    "TOUCH_FEEDBACK_DEFAULT" : 1, 
    "TOUCH_FEEDBACK_INDIRECT" : 2, 
    "TOUCH_FEEDBACK_NONE" : 3
};


Win32.POINTER_BUTTON_CHANGE_TYPE = {
    "POINTER_CHANGE_NONE" : 0, 
    "POINTER_CHANGE_FIRSTBUTTON_DOWN" : 1, 
    "POINTER_CHANGE_FIRSTBUTTON_UP" : 2, 
    "POINTER_CHANGE_SECONDBUTTON_DOWN" : 3, 
    "POINTER_CHANGE_SECONDBUTTON_UP" : 4, 
    "POINTER_CHANGE_THIRDBUTTON_DOWN" : 5, 
    "POINTER_CHANGE_THIRDBUTTON_UP" : 6, 
    "POINTER_CHANGE_FOURTHBUTTON_DOWN" : 7, 
    "POINTER_CHANGE_FOURTHBUTTON_UP" : 8, 
    "POINTER_CHANGE_FIFTHBUTTON_DOWN" : 9, 
    "POINTER_CHANGE_FIFTHBUTTON_UP" : 10
};


Win32.POINTER_INFO = foreign.named_struct( "Windows.Win32.UI.Input.Pointer.POINTER_INFO", [ 
    "pointerType:int", 
    "pointerId:uint", 
    "frameId:uint", 
    "pointerFlags:uint", 
    "sourceDevice:Windows.Win32.Foundation.HANDLE", 
    "hwndTarget:Windows.Win32.Foundation.HWND", 
    "ptPixelLocation:Windows.Win32.Foundation.POINT", 
    "ptHimetricLocation:Windows.Win32.Foundation.POINT", 
    "ptPixelLocationRaw:Windows.Win32.Foundation.POINT", 
    "ptHimetricLocationRaw:Windows.Win32.Foundation.POINT", 
    "dwTime:uint", 
    "historyCount:uint", 
    "InputData:int", 
    "dwKeyStates:uint", 
    "PerformanceCount:ulong", 
    "ButtonChangeType:int"
]); 


Win32.POINTER_TOUCH_INFO = foreign.named_struct( "Windows.Win32.UI.Input.Pointer.POINTER_TOUCH_INFO", [ 
    "pointerInfo:Windows.Win32.UI.Input.Pointer.POINTER_INFO", 
    "touchFlags:uint", 
    "touchMask:uint", 
    "rcContact:Windows.Win32.Foundation.RECT", 
    "rcContactRaw:Windows.Win32.Foundation.RECT", 
    "orientation:uint", 
    "pressure:uint"
]); 


Win32.POINTER_PEN_INFO = foreign.named_struct( "Windows.Win32.UI.Input.Pointer.POINTER_PEN_INFO", [ 
    "pointerInfo:Windows.Win32.UI.Input.Pointer.POINTER_INFO", 
    "penFlags:uint", 
    "penMask:uint", 
    "pressure:uint", 
    "rotation:uint", 
    "tiltX:int", 
    "tiltY:int"
]); 


Win32.INPUT_INJECTION_VALUE = foreign.named_struct( "Windows.Win32.UI.Input.Pointer.INPUT_INJECTION_VALUE", [ 
    "page:ushort", 
    "usage:ushort", 
    "value:int", 
    "index:ushort"
]); 


Win32.INPUT_TRANSFORM = foreign.named_struct( "Windows.Win32.UI.Input.Pointer.INPUT_TRANSFORM", [ 
    "Anonymous:._Anonymous_e__Union"
]); 

Win32.GetUnpredictedMessagePos = foreign.native( "USER32.dll", "uint", "GetUnpredictedMessagePos", [  ] ); 
Win32.InitializeTouchInjection = foreign.native( "USER32.dll", "int", "InitializeTouchInjection", [ "uint", "uint" ] ); 
Win32.InjectTouchInput = foreign.native( "USER32.dll", "int", "InjectTouchInput", [ "uint", "ptr" ] ); 
Win32.GetPointerType = foreign.native( "USER32.dll", "int", "GetPointerType", [ "uint", "ptr" ] ); 
Win32.GetPointerCursorId = foreign.native( "USER32.dll", "int", "GetPointerCursorId", [ "uint", "ptr" ] ); 
Win32.GetPointerInfo = foreign.native( "USER32.dll", "int", "GetPointerInfo", [ "uint", "ptr" ] ); 
Win32.GetPointerInfoHistory = foreign.native( "USER32.dll", "int", "GetPointerInfoHistory", [ "uint", "ptr", "ptr" ] ); 
Win32.GetPointerFrameInfo = foreign.native( "USER32.dll", "int", "GetPointerFrameInfo", [ "uint", "ptr", "ptr" ] ); 
Win32.GetPointerFrameInfoHistory = foreign.native( "USER32.dll", "int", "GetPointerFrameInfoHistory", [ "uint", "ptr", "ptr", "ptr" ] ); 
Win32.GetPointerTouchInfo = foreign.native( "USER32.dll", "int", "GetPointerTouchInfo", [ "uint", "ptr" ] ); 
Win32.GetPointerTouchInfoHistory = foreign.native( "USER32.dll", "int", "GetPointerTouchInfoHistory", [ "uint", "ptr", "ptr" ] ); 
Win32.GetPointerFrameTouchInfo = foreign.native( "USER32.dll", "int", "GetPointerFrameTouchInfo", [ "uint", "ptr", "ptr" ] ); 
Win32.GetPointerFrameTouchInfoHistory = foreign.native( "USER32.dll", "int", "GetPointerFrameTouchInfoHistory", [ "uint", "ptr", "ptr", "ptr" ] ); 
Win32.GetPointerPenInfo = foreign.native( "USER32.dll", "int", "GetPointerPenInfo", [ "uint", "ptr" ] ); 
Win32.GetPointerPenInfoHistory = foreign.native( "USER32.dll", "int", "GetPointerPenInfoHistory", [ "uint", "ptr", "ptr" ] ); 
Win32.GetPointerFramePenInfo = foreign.native( "USER32.dll", "int", "GetPointerFramePenInfo", [ "uint", "ptr", "ptr" ] ); 
Win32.GetPointerFramePenInfoHistory = foreign.native( "USER32.dll", "int", "GetPointerFramePenInfoHistory", [ "uint", "ptr", "ptr", "ptr" ] ); 
Win32.SkipPointerFrameMessages = foreign.native( "USER32.dll", "int", "SkipPointerFrameMessages", [ "uint" ] ); 
Win32.InjectSyntheticPointerInput = foreign.native( "USER32.dll", "int", "InjectSyntheticPointerInput", [ "ptr", "ptr", "uint" ] ); 
Win32.EnableMouseInPointer = foreign.native( "USER32.dll", "int", "EnableMouseInPointer", [ "int" ] ); 
Win32.IsMouseInPointerEnabled = foreign.native( "USER32.dll", "int", "IsMouseInPointerEnabled", [  ] ); 
Win32.GetPointerInputTransform = foreign.native( "USER32.dll", "int", "GetPointerInputTransform", [ "uint", "uint", "ptr" ] ); 
Win32.GetPointerDevices = foreign.native( "USER32.dll", "int", "GetPointerDevices", [ "ptr", "ptr" ] ); 
Win32.GetPointerDevice = foreign.native( "USER32.dll", "int", "GetPointerDevice", [ "ptr", "ptr" ] ); 
Win32.GetPointerDeviceProperties = foreign.native( "USER32.dll", "int", "GetPointerDeviceProperties", [ "ptr", "ptr", "ptr" ] ); 
Win32.GetPointerDeviceRects = foreign.native( "USER32.dll", "int", "GetPointerDeviceRects", [ "ptr", "ptr", "ptr" ] ); 
Win32.GetPointerDeviceCursors = foreign.native( "USER32.dll", "int", "GetPointerDeviceCursors", [ "ptr", "ptr", "ptr" ] ); 
Win32.GetRawPointerDeviceData = foreign.native( "USER32.dll", "int", "GetRawPointerDeviceData", [ "uint", "uint", "uint", "ptr", "ptr" ] ); 

}

