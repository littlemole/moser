{

if( runtime.global("Win32") == nil ) { runtime.global("Win32", {}); }
var Win32 = runtime.global("Win32");

Win32.URI_CREATE_FLAGS = {
    "Uri_CREATE_ALLOW_RELATIVE" : 1, 
    "Uri_CREATE_ALLOW_IMPLICIT_WILDCARD_SCHEME" : 2, 
    "Uri_CREATE_ALLOW_IMPLICIT_FILE_SCHEME" : 4, 
    "Uri_CREATE_NOFRAG" : 8, 
    "Uri_CREATE_NO_CANONICALIZE" : 16, 
    "Uri_CREATE_CANONICALIZE" : 256, 
    "Uri_CREATE_FILE_USE_DOS_PATH" : 32, 
    "Uri_CREATE_DECODE_EXTRA_INFO" : 64, 
    "Uri_CREATE_NO_DECODE_EXTRA_INFO" : 128, 
    "Uri_CREATE_CRACK_UNKNOWN_SCHEMES" : 512, 
    "Uri_CREATE_NO_CRACK_UNKNOWN_SCHEMES" : 1024, 
    "Uri_CREATE_PRE_PROCESS_HTML_URI" : 2048, 
    "Uri_CREATE_NO_PRE_PROCESS_HTML_URI" : 4096, 
    "Uri_CREATE_IE_SETTINGS" : 8192, 
    "Uri_CREATE_NO_IE_SETTINGS" : 16384, 
    "Uri_CREATE_NO_ENCODE_FORBIDDEN_CHARACTERS" : 32768, 
    "Uri_CREATE_NORMALIZE_INTL_CHARACTERS" : 65536, 
    "Uri_CREATE_CANONICALIZE_ABSOLUTE" : 131072
};


Win32.RPC_C_AUTHN_LEVEL = {
    "RPC_C_AUTHN_LEVEL_DEFAULT" : 0, 
    "RPC_C_AUTHN_LEVEL_NONE" : 1, 
    "RPC_C_AUTHN_LEVEL_CONNECT" : 2, 
    "RPC_C_AUTHN_LEVEL_CALL" : 3, 
    "RPC_C_AUTHN_LEVEL_PKT" : 4, 
    "RPC_C_AUTHN_LEVEL_PKT_INTEGRITY" : 5, 
    "RPC_C_AUTHN_LEVEL_PKT_PRIVACY" : 6
};


Win32.RPC_C_IMP_LEVEL = {
    "RPC_C_IMP_LEVEL_DEFAULT" : 0, 
    "RPC_C_IMP_LEVEL_ANONYMOUS" : 1, 
    "RPC_C_IMP_LEVEL_IDENTIFY" : 2, 
    "RPC_C_IMP_LEVEL_IMPERSONATE" : 3, 
    "RPC_C_IMP_LEVEL_DELEGATE" : 4
};


Win32.ROT_FLAGS = {
    "ROTFLAGS_REGISTRATIONKEEPSALIVE" : 1, 
    "ROTFLAGS_ALLOWANYCLIENT" : 2
};


Win32.ADVANCED_FEATURE_FLAGS = {
    "FADF_AUTO" : 1, 
    "FADF_STATIC" : 2, 
    "FADF_EMBEDDED" : 4, 
    "FADF_FIXEDSIZE" : 16, 
    "FADF_RECORD" : 32, 
    "FADF_HAVEIID" : 64, 
    "FADF_HAVEVARTYPE" : 128, 
    "FADF_BSTR" : 256, 
    "FADF_UNKNOWN" : 512, 
    "FADF_DISPATCH" : 1024, 
    "FADF_VARIANT" : 2048, 
    "FADF_RESERVED" : 61448
};


Win32.IMPLTYPEFLAGS = {
    "IMPLTYPEFLAG_FDEFAULT" : 1, 
    "IMPLTYPEFLAG_FSOURCE" : 2, 
    "IMPLTYPEFLAG_FRESTRICTED" : 4, 
    "IMPLTYPEFLAG_FDEFAULTVTABLE" : 8
};


Win32.IDLFLAGS = {
    "IDLFLAG_NONE" : 0, 
    "IDLFLAG_FIN" : 1, 
    "IDLFLAG_FOUT" : 2, 
    "IDLFLAG_FLCID" : 4, 
    "IDLFLAG_FRETVAL" : 8
};


Win32.DISPATCH_FLAGS = {
    "DISPATCH_METHOD" : 1, 
    "DISPATCH_PROPERTYGET" : 2, 
    "DISPATCH_PROPERTYPUT" : 4, 
    "DISPATCH_PROPERTYPUTREF" : 8
};


Win32.STGM = {
    "STGM_DIRECT" : 0, 
    "STGM_TRANSACTED" : 65536, 
    "STGM_SIMPLE" : 134217728, 
    "STGM_READ" : 0, 
    "STGM_WRITE" : 1, 
    "STGM_READWRITE" : 2, 
    "STGM_SHARE_DENY_NONE" : 64, 
    "STGM_SHARE_DENY_READ" : 48, 
    "STGM_SHARE_DENY_WRITE" : 32, 
    "STGM_SHARE_EXCLUSIVE" : 16, 
    "STGM_PRIORITY" : 262144, 
    "STGM_DELETEONRELEASE" : 67108864, 
    "STGM_NOSCRATCH" : 1048576, 
    "STGM_CREATE" : 4096, 
    "STGM_CONVERT" : 131072, 
    "STGM_FAILIFTHERE" : 0, 
    "STGM_NOSNAPSHOT" : 2097152, 
    "STGM_DIRECT_SWMR" : 4194304
};


Win32.DVASPECT = {
    "DVASPECT_CONTENT" : 1, 
    "DVASPECT_THUMBNAIL" : 2, 
    "DVASPECT_ICON" : 4, 
    "DVASPECT_DOCPRINT" : 8, 
    "DVASPECT_OPAQUE" : 16, 
    "DVASPECT_TRANSPARENT" : 32
};


Win32.STGC = {
    "STGC_DEFAULT" : 0, 
    "STGC_OVERWRITE" : 1, 
    "STGC_ONLYIFCURRENT" : 2, 
    "STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE" : 4, 
    "STGC_CONSOLIDATE" : 8
};


Win32.STATFLAG = {
    "STATFLAG_DEFAULT" : 0, 
    "STATFLAG_NONAME" : 1, 
    "STATFLAG_NOOPEN" : 2
};


Win32.VARENUM = {
    "VT_EMPTY" : 0, 
    "VT_NULL" : 1, 
    "VT_I2" : 2, 
    "VT_I4" : 3, 
    "VT_R4" : 4, 
    "VT_R8" : 5, 
    "VT_CY" : 6, 
    "VT_DATE" : 7, 
    "VT_BSTR" : 8, 
    "VT_DISPATCH" : 9, 
    "VT_ERROR" : 10, 
    "VT_BOOL" : 11, 
    "VT_VARIANT" : 12, 
    "VT_UNKNOWN" : 13, 
    "VT_DECIMAL" : 14, 
    "VT_I1" : 16, 
    "VT_UI1" : 17, 
    "VT_UI2" : 18, 
    "VT_UI4" : 19, 
    "VT_I8" : 20, 
    "VT_UI8" : 21, 
    "VT_INT" : 22, 
    "VT_UINT" : 23, 
    "VT_VOID" : 24, 
    "VT_HRESULT" : 25, 
    "VT_PTR" : 26, 
    "VT_SAFEARRAY" : 27, 
    "VT_CARRAY" : 28, 
    "VT_USERDEFINED" : 29, 
    "VT_LPSTR" : 30, 
    "VT_LPWSTR" : 31, 
    "VT_RECORD" : 36, 
    "VT_INT_PTR" : 37, 
    "VT_UINT_PTR" : 38, 
    "VT_FILETIME" : 64, 
    "VT_BLOB" : 65, 
    "VT_STREAM" : 66, 
    "VT_STORAGE" : 67, 
    "VT_STREAMED_OBJECT" : 68, 
    "VT_STORED_OBJECT" : 69, 
    "VT_BLOB_OBJECT" : 70, 
    "VT_CF" : 71, 
    "VT_CLSID" : 72, 
    "VT_VERSIONED_STREAM" : 73, 
    "VT_BSTR_BLOB" : 4095, 
    "VT_VECTOR" : 4096, 
    "VT_ARRAY" : 8192, 
    "VT_BYREF" : 16384, 
    "VT_RESERVED" : 32768, 
    "VT_ILLEGAL" : 65535, 
    "VT_ILLEGALMASKED" : 4095, 
    "VT_TYPEMASK" : 4095
};


Win32.TYSPEC = {
    "TYSPEC_CLSID" : 0, 
    "TYSPEC_FILEEXT" : 1, 
    "TYSPEC_MIMETYPE" : 2, 
    "TYSPEC_FILENAME" : 3, 
    "TYSPEC_PROGID" : 4, 
    "TYSPEC_PACKAGENAME" : 5, 
    "TYSPEC_OBJECTID" : 6
};


Win32.REGCLS = {
    "REGCLS_SINGLEUSE" : 0, 
    "REGCLS_MULTIPLEUSE" : 1, 
    "REGCLS_MULTI_SEPARATE" : 2, 
    "REGCLS_SUSPENDED" : 4, 
    "REGCLS_SURROGATE" : 8, 
    "REGCLS_AGILE" : 16
};


Win32.COINITBASE = {
    "COINITBASE_MULTITHREADED" : 0
};


Win32.MEMCTX = {
    "MEMCTX_TASK" : 1, 
    "MEMCTX_SHARED" : 2, 
    "MEMCTX_MACSYSTEM" : 3, 
    "MEMCTX_UNKNOWN" : -1, 
    "MEMCTX_SAME" : -2
};


Win32.CLSCTX = {
    "CLSCTX_INPROC_SERVER" : 1, 
    "CLSCTX_INPROC_HANDLER" : 2, 
    "CLSCTX_LOCAL_SERVER" : 4, 
    "CLSCTX_INPROC_SERVER16" : 8, 
    "CLSCTX_REMOTE_SERVER" : 16, 
    "CLSCTX_INPROC_HANDLER16" : 32, 
    "CLSCTX_RESERVED1" : 64, 
    "CLSCTX_RESERVED2" : 128, 
    "CLSCTX_RESERVED3" : 256, 
    "CLSCTX_RESERVED4" : 512, 
    "CLSCTX_NO_CODE_DOWNLOAD" : 1024, 
    "CLSCTX_RESERVED5" : 2048, 
    "CLSCTX_NO_CUSTOM_MARSHAL" : 4096, 
    "CLSCTX_ENABLE_CODE_DOWNLOAD" : 8192, 
    "CLSCTX_NO_FAILURE_LOG" : 16384, 
    "CLSCTX_DISABLE_AAA" : 32768, 
    "CLSCTX_ENABLE_AAA" : 65536, 
    "CLSCTX_FROM_DEFAULT_CONTEXT" : 131072, 
    "CLSCTX_ACTIVATE_X86_SERVER" : 262144, 
    "CLSCTX_ACTIVATE_32_BIT_SERVER" : 262144, 
    "CLSCTX_ACTIVATE_64_BIT_SERVER" : 524288, 
    "CLSCTX_ENABLE_CLOAKING" : 1048576, 
    "CLSCTX_APPCONTAINER" : 4194304, 
    "CLSCTX_ACTIVATE_AAA_AS_IU" : 8388608, 
    "CLSCTX_RESERVED6" : 16777216, 
    "CLSCTX_ACTIVATE_ARM32_SERVER" : 33554432, 
    "CLSCTX_PS_DLL" : 2147483648, 
    "CLSCTX_ALL" : 23, 
    "CLSCTX_SERVER" : 21
};


Win32.MSHLFLAGS = {
    "MSHLFLAGS_NORMAL" : 0, 
    "MSHLFLAGS_TABLESTRONG" : 1, 
    "MSHLFLAGS_TABLEWEAK" : 2, 
    "MSHLFLAGS_NOPING" : 4, 
    "MSHLFLAGS_RESERVED1" : 8, 
    "MSHLFLAGS_RESERVED2" : 16, 
    "MSHLFLAGS_RESERVED3" : 32, 
    "MSHLFLAGS_RESERVED4" : 64
};


Win32.MSHCTX = {
    "MSHCTX_LOCAL" : 0, 
    "MSHCTX_NOSHAREDMEM" : 1, 
    "MSHCTX_DIFFERENTMACHINE" : 2, 
    "MSHCTX_INPROC" : 3, 
    "MSHCTX_CROSSCTX" : 4, 
    "MSHCTX_CONTAINER" : 5
};


Win32.EXTCONN = {
    "EXTCONN_STRONG" : 1, 
    "EXTCONN_WEAK" : 2, 
    "EXTCONN_CALLABLE" : 4
};


Win32.STGTY = {
    "STGTY_STORAGE" : 1, 
    "STGTY_STREAM" : 2, 
    "STGTY_LOCKBYTES" : 3, 
    "STGTY_PROPERTY" : 4
};


Win32.STREAM_SEEK = {
    "STREAM_SEEK_SET" : 0, 
    "STREAM_SEEK_CUR" : 1, 
    "STREAM_SEEK_END" : 2
};


Win32.LOCKTYPE = {
    "LOCK_WRITE" : 1, 
    "LOCK_EXCLUSIVE" : 2, 
    "LOCK_ONLYONCE" : 4
};


Win32.EOLE_AUTHENTICATION_CAPABILITIES = {
    "EOAC_NONE" : 0, 
    "EOAC_MUTUAL_AUTH" : 1, 
    "EOAC_STATIC_CLOAKING" : 32, 
    "EOAC_DYNAMIC_CLOAKING" : 64, 
    "EOAC_ANY_AUTHORITY" : 128, 
    "EOAC_MAKE_FULLSIC" : 256, 
    "EOAC_DEFAULT" : 2048, 
    "EOAC_SECURE_REFS" : 2, 
    "EOAC_ACCESS_CONTROL" : 4, 
    "EOAC_APPID" : 8, 
    "EOAC_DYNAMIC" : 16, 
    "EOAC_REQUIRE_FULLSIC" : 512, 
    "EOAC_AUTO_IMPERSONATE" : 1024, 
    "EOAC_DISABLE_AAA" : 4096, 
    "EOAC_NO_CUSTOM_MARSHAL" : 8192, 
    "EOAC_RESERVED1" : 16384
};


Win32.RPCOPT_PROPERTIES = {
    "COMBND_RPCTIMEOUT" : 1, 
    "COMBND_SERVER_LOCALITY" : 2, 
    "COMBND_RESERVED1" : 4, 
    "COMBND_RESERVED2" : 5, 
    "COMBND_RESERVED3" : 8, 
    "COMBND_RESERVED4" : 16
};


Win32.RPCOPT_SERVER_LOCALITY_VALUES = {
    "SERVER_LOCALITY_PROCESS_LOCAL" : 0, 
    "SERVER_LOCALITY_MACHINE_LOCAL" : 1, 
    "SERVER_LOCALITY_REMOTE" : 2
};


Win32.GLOBALOPT_PROPERTIES = {
    "COMGLB_EXCEPTION_HANDLING" : 1, 
    "COMGLB_APPID" : 2, 
    "COMGLB_RPC_THREADPOOL_SETTING" : 3, 
    "COMGLB_RO_SETTINGS" : 4, 
    "COMGLB_UNMARSHALING_POLICY" : 5, 
    "COMGLB_PROPERTIES_RESERVED1" : 6, 
    "COMGLB_PROPERTIES_RESERVED2" : 7, 
    "COMGLB_PROPERTIES_RESERVED3" : 8
};


Win32.GLOBALOPT_EH_VALUES = {
    "COMGLB_EXCEPTION_HANDLE" : 0, 
    "COMGLB_EXCEPTION_DONOT_HANDLE_FATAL" : 1, 
    "COMGLB_EXCEPTION_DONOT_HANDLE" : 1, 
    "COMGLB_EXCEPTION_DONOT_HANDLE_ANY" : 2
};


Win32.GLOBALOPT_RPCTP_VALUES = {
    "COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL" : 0, 
    "COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL" : 1
};


Win32.GLOBALOPT_RO_FLAGS = {
    "COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES" : 1, 
    "COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES" : 2, 
    "COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES" : 4, 
    "COMGLB_FAST_RUNDOWN" : 8, 
    "COMGLB_RESERVED1" : 16, 
    "COMGLB_RESERVED2" : 32, 
    "COMGLB_RESERVED3" : 64, 
    "COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES" : 128, 
    "COMGLB_RESERVED4" : 256, 
    "COMGLB_RESERVED5" : 512, 
    "COMGLB_RESERVED6" : 1024
};


Win32.GLOBALOPT_UNMARSHALING_POLICY_VALUES = {
    "COMGLB_UNMARSHALING_POLICY_NORMAL" : 0, 
    "COMGLB_UNMARSHALING_POLICY_STRONG" : 1, 
    "COMGLB_UNMARSHALING_POLICY_HYBRID" : 2
};


Win32.DCOM_CALL_STATE = {
    "DCOM_NONE" : 0, 
    "DCOM_CALL_COMPLETE" : 1, 
    "DCOM_CALL_CANCELED" : 2
};


Win32.APTTYPEQUALIFIER = {
    "APTTYPEQUALIFIER_NONE" : 0, 
    "APTTYPEQUALIFIER_IMPLICIT_MTA" : 1, 
    "APTTYPEQUALIFIER_NA_ON_MTA" : 2, 
    "APTTYPEQUALIFIER_NA_ON_STA" : 3, 
    "APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA" : 4, 
    "APTTYPEQUALIFIER_NA_ON_MAINSTA" : 5, 
    "APTTYPEQUALIFIER_APPLICATION_STA" : 6, 
    "APTTYPEQUALIFIER_RESERVED_1" : 7
};


Win32.APTTYPE = {
    "APTTYPE_CURRENT" : -1, 
    "APTTYPE_STA" : 0, 
    "APTTYPE_MTA" : 1, 
    "APTTYPE_NA" : 2, 
    "APTTYPE_MAINSTA" : 3
};


Win32.THDTYPE = {
    "THDTYPE_BLOCKMESSAGES" : 0, 
    "THDTYPE_PROCESSMESSAGES" : 1
};


Win32.CO_MARSHALING_CONTEXT_ATTRIBUTES = {
    "CO_MARSHALING_SOURCE_IS_APP_CONTAINER" : 0, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1" : -2147483648, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2" : -2147483647, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3" : -2147483646, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4" : -2147483645, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5" : -2147483644, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6" : -2147483643, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7" : -2147483642, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8" : -2147483641, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9" : -2147483640, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10" : -2147483639, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11" : -2147483638, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12" : -2147483637, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13" : -2147483636, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14" : -2147483635, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15" : -2147483634, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16" : -2147483633, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17" : -2147483632, 
    "CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_18" : -2147483631
};


Win32.BIND_FLAGS = {
    "BIND_MAYBOTHERUSER" : 1, 
    "BIND_JUSTTESTEXISTENCE" : 2
};


Win32.MKSYS = {
    "MKSYS_NONE" : 0, 
    "MKSYS_GENERICCOMPOSITE" : 1, 
    "MKSYS_FILEMONIKER" : 2, 
    "MKSYS_ANTIMONIKER" : 3, 
    "MKSYS_ITEMMONIKER" : 4, 
    "MKSYS_POINTERMONIKER" : 5, 
    "MKSYS_CLASSMONIKER" : 7, 
    "MKSYS_OBJREFMONIKER" : 8, 
    "MKSYS_SESSIONMONIKER" : 9, 
    "MKSYS_LUAMONIKER" : 10
};


Win32.MKRREDUCE = {
    "MKRREDUCE_ONE" : 196608, 
    "MKRREDUCE_TOUSER" : 131072, 
    "MKRREDUCE_THROUGHUSER" : 65536, 
    "MKRREDUCE_ALL" : 0
};


Win32.ADVF = {
    "ADVF_NODATA" : 1, 
    "ADVF_PRIMEFIRST" : 2, 
    "ADVF_ONLYONCE" : 4, 
    "ADVF_DATAONSTOP" : 64, 
    "ADVFCACHE_NOHANDLER" : 8, 
    "ADVFCACHE_FORCEBUILTIN" : 16, 
    "ADVFCACHE_ONSAVE" : 32
};


Win32.TYMED = {
    "TYMED_HGLOBAL" : 1, 
    "TYMED_FILE" : 2, 
    "TYMED_ISTREAM" : 4, 
    "TYMED_ISTORAGE" : 8, 
    "TYMED_GDI" : 16, 
    "TYMED_MFPICT" : 32, 
    "TYMED_ENHMF" : 64, 
    "TYMED_NULL" : 0
};


Win32.DATADIR = {
    "DATADIR_GET" : 1, 
    "DATADIR_SET" : 2
};


Win32.CALLTYPE = {
    "CALLTYPE_TOPLEVEL" : 1, 
    "CALLTYPE_NESTED" : 2, 
    "CALLTYPE_ASYNC" : 3, 
    "CALLTYPE_TOPLEVEL_CALLPENDING" : 4, 
    "CALLTYPE_ASYNC_CALLPENDING" : 5
};


Win32.SERVERCALL = {
    "SERVERCALL_ISHANDLED" : 0, 
    "SERVERCALL_REJECTED" : 1, 
    "SERVERCALL_RETRYLATER" : 2
};


Win32.PENDINGTYPE = {
    "PENDINGTYPE_TOPLEVEL" : 1, 
    "PENDINGTYPE_NESTED" : 2
};


Win32.PENDINGMSG = {
    "PENDINGMSG_CANCELCALL" : 0, 
    "PENDINGMSG_WAITNOPROCESS" : 1, 
    "PENDINGMSG_WAITDEFPROCESS" : 2
};


Win32.ApplicationType = {
    "ServerApplication" : 0, 
    "LibraryApplication" : 1
};


Win32.ShutdownType = {
    "IdleShutdown" : 0, 
    "ForcedShutdown" : 1
};


Win32.COINIT = {
    "COINIT_APARTMENTTHREADED" : 2, 
    "COINIT_MULTITHREADED" : 0, 
    "COINIT_DISABLE_OLE1DDE" : 4, 
    "COINIT_SPEED_OVER_MEMORY" : 8
};


Win32.COMSD = {
    "SD_LAUNCHPERMISSIONS" : 0, 
    "SD_ACCESSPERMISSIONS" : 1, 
    "SD_LAUNCHRESTRICTIONS" : 2, 
    "SD_ACCESSRESTRICTIONS" : 3
};


Win32.COWAIT_FLAGS = {
    "COWAIT_DEFAULT" : 0, 
    "COWAIT_WAITALL" : 1, 
    "COWAIT_ALERTABLE" : 2, 
    "COWAIT_INPUTAVAILABLE" : 4, 
    "COWAIT_DISPATCH_CALLS" : 8, 
    "COWAIT_DISPATCH_WINDOW_MESSAGES" : 16
};


Win32.CWMO_FLAGS = {
    "CWMO_DEFAULT" : 0, 
    "CWMO_DISPATCH_CALLS" : 1, 
    "CWMO_DISPATCH_WINDOW_MESSAGES" : 2
};


Win32.BINDINFOF = {
    "BINDINFOF_URLENCODESTGMEDDATA" : 1, 
    "BINDINFOF_URLENCODEDEXTRAINFO" : 2
};


Win32.Uri_PROPERTY = {
    "Uri_PROPERTY_ABSOLUTE_URI" : 0, 
    "Uri_PROPERTY_STRING_START" : 0, 
    "Uri_PROPERTY_AUTHORITY" : 1, 
    "Uri_PROPERTY_DISPLAY_URI" : 2, 
    "Uri_PROPERTY_DOMAIN" : 3, 
    "Uri_PROPERTY_EXTENSION" : 4, 
    "Uri_PROPERTY_FRAGMENT" : 5, 
    "Uri_PROPERTY_HOST" : 6, 
    "Uri_PROPERTY_PASSWORD" : 7, 
    "Uri_PROPERTY_PATH" : 8, 
    "Uri_PROPERTY_PATH_AND_QUERY" : 9, 
    "Uri_PROPERTY_QUERY" : 10, 
    "Uri_PROPERTY_RAW_URI" : 11, 
    "Uri_PROPERTY_SCHEME_NAME" : 12, 
    "Uri_PROPERTY_USER_INFO" : 13, 
    "Uri_PROPERTY_USER_NAME" : 14, 
    "Uri_PROPERTY_STRING_LAST" : 14, 
    "Uri_PROPERTY_HOST_TYPE" : 15, 
    "Uri_PROPERTY_DWORD_START" : 15, 
    "Uri_PROPERTY_PORT" : 16, 
    "Uri_PROPERTY_SCHEME" : 17, 
    "Uri_PROPERTY_ZONE" : 18, 
    "Uri_PROPERTY_DWORD_LAST" : 18
};


Win32.TYPEKIND = {
    "TKIND_ENUM" : 0, 
    "TKIND_RECORD" : 1, 
    "TKIND_MODULE" : 2, 
    "TKIND_INTERFACE" : 3, 
    "TKIND_DISPATCH" : 4, 
    "TKIND_COCLASS" : 5, 
    "TKIND_ALIAS" : 6, 
    "TKIND_UNION" : 7, 
    "TKIND_MAX" : 8
};


Win32.CALLCONV = {
    "CC_FASTCALL" : 0, 
    "CC_CDECL" : 1, 
    "CC_MSCPASCAL" : 2, 
    "CC_PASCAL" : 2, 
    "CC_MACPASCAL" : 3, 
    "CC_STDCALL" : 4, 
    "CC_FPFASTCALL" : 5, 
    "CC_SYSCALL" : 6, 
    "CC_MPWCDECL" : 7, 
    "CC_MPWPASCAL" : 8, 
    "CC_MAX" : 9
};


Win32.FUNCKIND = {
    "FUNC_VIRTUAL" : 0, 
    "FUNC_PUREVIRTUAL" : 1, 
    "FUNC_NONVIRTUAL" : 2, 
    "FUNC_STATIC" : 3, 
    "FUNC_DISPATCH" : 4
};


Win32.INVOKEKIND = {
    "INVOKE_FUNC" : 1, 
    "INVOKE_PROPERTYGET" : 2, 
    "INVOKE_PROPERTYPUT" : 4, 
    "INVOKE_PROPERTYPUTREF" : 8
};


Win32.VARKIND = {
    "VAR_PERINSTANCE" : 0, 
    "VAR_STATIC" : 1, 
    "VAR_CONST" : 2, 
    "VAR_DISPATCH" : 3
};


Win32.FUNCFLAGS = {
    "FUNCFLAG_FRESTRICTED" : 1, 
    "FUNCFLAG_FSOURCE" : 2, 
    "FUNCFLAG_FBINDABLE" : 4, 
    "FUNCFLAG_FREQUESTEDIT" : 8, 
    "FUNCFLAG_FDISPLAYBIND" : 16, 
    "FUNCFLAG_FDEFAULTBIND" : 32, 
    "FUNCFLAG_FHIDDEN" : 64, 
    "FUNCFLAG_FUSESGETLASTERROR" : 128, 
    "FUNCFLAG_FDEFAULTCOLLELEM" : 256, 
    "FUNCFLAG_FUIDEFAULT" : 512, 
    "FUNCFLAG_FNONBROWSABLE" : 1024, 
    "FUNCFLAG_FREPLACEABLE" : 2048, 
    "FUNCFLAG_FIMMEDIATEBIND" : 4096
};


Win32.VARFLAGS = {
    "VARFLAG_FREADONLY" : 1, 
    "VARFLAG_FSOURCE" : 2, 
    "VARFLAG_FBINDABLE" : 4, 
    "VARFLAG_FREQUESTEDIT" : 8, 
    "VARFLAG_FDISPLAYBIND" : 16, 
    "VARFLAG_FDEFAULTBIND" : 32, 
    "VARFLAG_FHIDDEN" : 64, 
    "VARFLAG_FRESTRICTED" : 128, 
    "VARFLAG_FDEFAULTCOLLELEM" : 256, 
    "VARFLAG_FUIDEFAULT" : 512, 
    "VARFLAG_FNONBROWSABLE" : 1024, 
    "VARFLAG_FREPLACEABLE" : 2048, 
    "VARFLAG_FIMMEDIATEBIND" : 4096
};


Win32.DESCKIND = {
    "DESCKIND_NONE" : 0, 
    "DESCKIND_FUNCDESC" : 1, 
    "DESCKIND_VARDESC" : 2, 
    "DESCKIND_TYPECOMP" : 3, 
    "DESCKIND_IMPLICITAPPOBJ" : 4, 
    "DESCKIND_MAX" : 5
};


Win32.SYSKIND = {
    "SYS_WIN16" : 0, 
    "SYS_WIN32" : 1, 
    "SYS_MAC" : 2, 
    "SYS_WIN64" : 3
};


Win32.CO_MTA_USAGE_COOKIE = foreign.named_struct( "Windows.Win32.System.Com.CO_MTA_USAGE_COOKIE", [ 
    "Value:ptr"
]); 


Win32.CO_DEVICE_CATALOG_COOKIE = foreign.named_struct( "Windows.Win32.System.Com.CO_DEVICE_CATALOG_COOKIE", [ 
    "Value:ptr"
]); 


Win32.CY = foreign.named_struct( "Windows.Win32.System.Com.CY", [ 
    "Anonymous:._Anonymous_e__Struct", 
    "int64:long"
]); 


Win32.CSPLATFORM = foreign.named_struct( "Windows.Win32.System.Com.CSPLATFORM", [ 
    "dwPlatformId:uint", 
    "dwVersionHi:uint", 
    "dwVersionLo:uint", 
    "dwProcessorArch:uint"
]); 


Win32.QUERYCONTEXT = foreign.named_struct( "Windows.Win32.System.Com.QUERYCONTEXT", [ 
    "dwContext:uint", 
    "Platform:Windows.Win32.System.Com.CSPLATFORM", 
    "Locale:uint", 
    "dwVersionHi:uint", 
    "dwVersionLo:uint"
]); 


Win32.uCLSSPEC = foreign.named_struct( "Windows.Win32.System.Com.uCLSSPEC", [ 
    "tyspec:uint", 
    "tagged_union:._tagged_union_e__Struct"
]); 


Win32.COAUTHIDENTITY = foreign.named_struct( "Windows.Win32.System.Com.COAUTHIDENTITY", [ 
    "User:ptr", 
    "UserLength:uint", 
    "Domain:ptr", 
    "DomainLength:uint", 
    "Password:ptr", 
    "PasswordLength:uint", 
    "Flags:uint"
]); 


Win32.COAUTHINFO = foreign.named_struct( "Windows.Win32.System.Com.COAUTHINFO", [ 
    "dwAuthnSvc:uint", 
    "dwAuthzSvc:uint", 
    "pwszServerPrincName:wstr", 
    "dwAuthnLevel:uint", 
    "dwImpersonationLevel:uint", 
    "pAuthIdentityData:ptr", 
    "dwCapabilities:uint"
]); 


Win32.BYTE_BLOB = foreign.named_struct( "Windows.Win32.System.Com.BYTE_BLOB", [ 
    "clSize:uint", 
    "abData[1]:ubyte"
]); 


Win32.WORD_BLOB = foreign.named_struct( "Windows.Win32.System.Com.WORD_BLOB", [ 
    "clSize:uint", 
    "asData[1]:ushort"
]); 


Win32.DWORD_BLOB = foreign.named_struct( "Windows.Win32.System.Com.DWORD_BLOB", [ 
    "clSize:uint", 
    "alData[1]:uint"
]); 


Win32.FLAGGED_BYTE_BLOB = foreign.named_struct( "Windows.Win32.System.Com.FLAGGED_BYTE_BLOB", [ 
    "fFlags:uint", 
    "clSize:uint", 
    "abData[1]:ubyte"
]); 


Win32.FLAGGED_WORD_BLOB = foreign.named_struct( "Windows.Win32.System.Com.FLAGGED_WORD_BLOB", [ 
    "fFlags:uint", 
    "clSize:uint", 
    "asData[1]:ushort"
]); 


Win32.BYTE_SIZEDARR = foreign.named_struct( "Windows.Win32.System.Com.BYTE_SIZEDARR", [ 
    "clSize:uint", 
    "pData:ptr"
]); 


Win32.WORD_SIZEDARR = foreign.named_struct( "Windows.Win32.System.Com.WORD_SIZEDARR", [ 
    "clSize:uint", 
    "pData:ptr"
]); 


Win32.DWORD_SIZEDARR = foreign.named_struct( "Windows.Win32.System.Com.DWORD_SIZEDARR", [ 
    "clSize:uint", 
    "pData:ptr"
]); 


Win32.HYPER_SIZEDARR = foreign.named_struct( "Windows.Win32.System.Com.HYPER_SIZEDARR", [ 
    "clSize:uint", 
    "pData:ptr"
]); 


Win32.BLOB = foreign.named_struct( "Windows.Win32.System.Com.BLOB", [ 
    "cbSize:uint", 
    "pBlobData:ptr"
]); 


Win32.IEnumContextProps = foreign.named_struct( "Windows.Win32.System.Com.IEnumContextProps", [ 
    
]); 


Win32.IContext = foreign.named_struct( "Windows.Win32.System.Com.IContext", [ 
    
]); 


Win32.COSERVERINFO = foreign.named_struct( "Windows.Win32.System.Com.COSERVERINFO", [ 
    "dwReserved1:uint", 
    "pwszName:wstr", 
    "pAuthInfo:ptr", 
    "dwReserved2:uint"
]); 


Win32.MULTI_QI = foreign.named_struct( "Windows.Win32.System.Com.MULTI_QI", [ 
    "pIID:ptr", 
    "pItf:ptr", 
    "hr:Windows.Win32.Foundation.HRESULT"
]); 


Win32.STATSTG = foreign.named_struct( "Windows.Win32.System.Com.STATSTG", [ 
    "pwcsName:wstr", 
    "type:uint", 
    "cbSize:Windows.Win32.Foundation.ULARGE_INTEGER", 
    "mtime:Windows.Win32.Foundation.FILETIME", 
    "ctime:Windows.Win32.Foundation.FILETIME", 
    "atime:Windows.Win32.Foundation.FILETIME", 
    "grfMode:uint", 
    "grfLocksSupported:int", 
    "clsid:ptr", 
    "grfStateBits:uint", 
    "reserved:uint"
]); 


Win32.RPCOLEMESSAGE = foreign.named_struct( "Windows.Win32.System.Com.RPCOLEMESSAGE", [ 
    "reserved1:ptr", 
    "dataRepresentation:uint", 
    "Buffer:ptr", 
    "cbBuffer:uint", 
    "iMethod:uint", 
    "reserved2[5]:ptr", 
    "rpcFlags:uint"
]); 


Win32.SChannelHookCallInfo = foreign.named_struct( "Windows.Win32.System.Com.SChannelHookCallInfo", [ 
    "iid:ptr", 
    "cbSize:uint", 
    "uCausality:ptr", 
    "dwServerPid:uint", 
    "iMethod:uint", 
    "pObject:ptr"
]); 


Win32.SOLE_AUTHENTICATION_SERVICE = foreign.named_struct( "Windows.Win32.System.Com.SOLE_AUTHENTICATION_SERVICE", [ 
    "dwAuthnSvc:uint", 
    "dwAuthzSvc:uint", 
    "pPrincipalName:wstr", 
    "hr:Windows.Win32.Foundation.HRESULT"
]); 


Win32.SOLE_AUTHENTICATION_INFO = foreign.named_struct( "Windows.Win32.System.Com.SOLE_AUTHENTICATION_INFO", [ 
    "dwAuthnSvc:uint", 
    "dwAuthzSvc:uint", 
    "pAuthInfo:ptr"
]); 


Win32.SOLE_AUTHENTICATION_LIST = foreign.named_struct( "Windows.Win32.System.Com.SOLE_AUTHENTICATION_LIST", [ 
    "cAuthInfo:uint", 
    "aAuthInfo:ptr"
]); 


Win32.MachineGlobalObjectTableRegistrationToken__ = foreign.named_struct( "Windows.Win32.System.Com.MachineGlobalObjectTableRegistrationToken__", [ 
    "unused:int"
]); 


Win32.BIND_OPTS = foreign.named_struct( "Windows.Win32.System.Com.BIND_OPTS", [ 
    "cbStruct:uint", 
    "grfFlags:uint", 
    "grfMode:uint", 
    "dwTickCountDeadline:uint"
]); 


Win32.BIND_OPTS2 = foreign.named_struct( "Windows.Win32.System.Com.BIND_OPTS2", [ 
    "Base:Windows.Win32.System.Com.BIND_OPTS", 
    "dwTrackFlags:uint", 
    "dwClassContext:uint", 
    "locale:uint", 
    "pServerInfo:ptr"
]); 


Win32.BIND_OPTS3 = foreign.named_struct( "Windows.Win32.System.Com.BIND_OPTS3", [ 
    "Base:Windows.Win32.System.Com.BIND_OPTS2", 
    "hwnd:Windows.Win32.Foundation.HWND"
]); 


Win32.DVTARGETDEVICE = foreign.named_struct( "Windows.Win32.System.Com.DVTARGETDEVICE", [ 
    "tdSize:uint", 
    "tdDriverNameOffset:ushort", 
    "tdDeviceNameOffset:ushort", 
    "tdPortNameOffset:ushort", 
    "tdExtDevmodeOffset:ushort", 
    "tdData[1]:ubyte"
]); 


Win32.FORMATETC = foreign.named_struct( "Windows.Win32.System.Com.FORMATETC", [ 
    "cfFormat:ushort", 
    "ptd:ptr", 
    "dwAspect:uint", 
    "lindex:int", 
    "tymed:uint"
]); 


Win32.STATDATA = foreign.named_struct( "Windows.Win32.System.Com.STATDATA", [ 
    "formatetc:Windows.Win32.System.Com.FORMATETC", 
    "advf:uint", 
    "pAdvSink:ptr", 
    "dwConnection:uint"
]); 


Win32.RemSTGMEDIUM = foreign.named_struct( "Windows.Win32.System.Com.RemSTGMEDIUM", [ 
    "tymed:int", 
    "dwHandleType:uint", 
    "pData:uint", 
    "pUnkForRelease:uint", 
    "cbData:uint", 
    "data[1]:ubyte"
]); 


Win32.STGMEDIUM = foreign.named_struct( "Windows.Win32.System.Com.STGMEDIUM", [ 
    "tymed:int", 
    "Anonymous:._Anonymous_e__Union", 
    "pUnkForRelease:ptr"
]); 


Win32.GDI_OBJECT = foreign.named_struct( "Windows.Win32.System.Com.GDI_OBJECT", [ 
    "ObjectType:uint", 
    "u:._u_e__Struct"
]); 


Win32.userSTGMEDIUM = foreign.named_struct( "Windows.Win32.System.Com.userSTGMEDIUM", [ 
    "pUnkForRelease:ptr"
]); 


Win32.userFLAG_STGMEDIUM = foreign.named_struct( "Windows.Win32.System.Com.userFLAG_STGMEDIUM", [ 
    "ContextFlags:int", 
    "fPassOwnership:int", 
    "Stgmed:Windows.Win32.System.Com.userSTGMEDIUM"
]); 


Win32.FLAG_STGMEDIUM = foreign.named_struct( "Windows.Win32.System.Com.FLAG_STGMEDIUM", [ 
    "ContextFlags:int", 
    "fPassOwnership:int", 
    "Stgmed:Windows.Win32.System.Com.STGMEDIUM"
]); 


Win32.INTERFACEINFO = foreign.named_struct( "Windows.Win32.System.Com.INTERFACEINFO", [ 
    "pUnk:ptr", 
    "iid:ptr", 
    "wMethod:ushort"
]); 


Win32.StorageLayout = foreign.named_struct( "Windows.Win32.System.Com.StorageLayout", [ 
    "LayoutType:uint", 
    "pwcsElementName:wstr", 
    "cOffset:Windows.Win32.Foundation.LARGE_INTEGER", 
    "cBytes:Windows.Win32.Foundation.LARGE_INTEGER"
]); 


Win32.CATEGORYINFO = foreign.named_struct( "Windows.Win32.System.Com.CATEGORYINFO", [ 
    "catid:ptr", 
    "lcid:uint", 
    "szDescription[128]:short"
]); 


Win32.ComCallData = foreign.named_struct( "Windows.Win32.System.Com.ComCallData", [ 
    "dwDispid:uint", 
    "dwReserved:uint", 
    "pUserDefined:ptr"
]); 


Win32.BINDINFO = foreign.named_struct( "Windows.Win32.System.Com.BINDINFO", [ 
    "cbSize:uint", 
    "szExtraInfo:wstr", 
    "stgmedData:Windows.Win32.System.Com.STGMEDIUM", 
    "grfBindInfoF:uint", 
    "dwBindVerb:uint", 
    "szCustomVerb:wstr", 
    "cbstgmedData:uint", 
    "dwOptions:uint", 
    "dwOptionsFlags:uint", 
    "dwCodePage:uint", 
    "securityAttributes:Windows.Win32.Security.SECURITY_ATTRIBUTES", 
    "iid:ptr", 
    "pUnk:ptr", 
    "dwReserved:uint"
]); 


Win32.AUTHENTICATEINFO = foreign.named_struct( "Windows.Win32.System.Com.AUTHENTICATEINFO", [ 
    "dwFlags:uint", 
    "dwReserved:uint"
]); 


Win32.SAFEARRAYBOUND = foreign.named_struct( "Windows.Win32.System.Com.SAFEARRAYBOUND", [ 
    "cElements:uint", 
    "lLbound:int"
]); 


Win32.SAFEARRAY = foreign.named_struct( "Windows.Win32.System.Com.SAFEARRAY", [ 
    "cDims:ushort", 
    "fFeatures:ushort", 
    "cbElements:uint", 
    "cLocks:uint", 
    "pvData:ptr", 
    "rgsabound[1]:Windows.Win32.System.Com.SAFEARRAYBOUND"
]); 


Win32.VARIANT = foreign.named_struct( "Windows.Win32.System.Com.VARIANT", [ 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.TYPEDESC = foreign.named_struct( "Windows.Win32.System.Com.TYPEDESC", [ 
    "Anonymous:._Anonymous_e__Union", 
    "vt:ushort"
]); 


Win32.IDLDESC = foreign.named_struct( "Windows.Win32.System.Com.IDLDESC", [ 
    "dwReserved:ptr", 
    "wIDLFlags:ushort"
]); 


Win32.ELEMDESC = foreign.named_struct( "Windows.Win32.System.Com.ELEMDESC", [ 
    "tdesc:Windows.Win32.System.Com.TYPEDESC", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.TYPEATTR = foreign.named_struct( "Windows.Win32.System.Com.TYPEATTR", [ 
    "guid:ptr", 
    "lcid:uint", 
    "dwReserved:uint", 
    "memidConstructor:int", 
    "memidDestructor:int", 
    "lpstrSchema:wstr", 
    "cbSizeInstance:uint", 
    "typekind:int", 
    "cFuncs:ushort", 
    "cVars:ushort", 
    "cImplTypes:ushort", 
    "cbSizeVft:ushort", 
    "cbAlignment:ushort", 
    "wTypeFlags:ushort", 
    "wMajorVerNum:ushort", 
    "wMinorVerNum:ushort", 
    "tdescAlias:Windows.Win32.System.Com.TYPEDESC", 
    "idldescType:Windows.Win32.System.Com.IDLDESC"
]); 


Win32.DISPPARAMS = foreign.named_struct( "Windows.Win32.System.Com.DISPPARAMS", [ 
    "rgvarg:ptr", 
    "rgdispidNamedArgs:ptr", 
    "cArgs:uint", 
    "cNamedArgs:uint"
]); 


Win32.EXCEPINFO = foreign.named_struct( "Windows.Win32.System.Com.EXCEPINFO", [ 
    "wCode:ushort", 
    "wReserved:ushort", 
    "bstrSource:Windows.Win32.Foundation.BSTR", 
    "bstrDescription:Windows.Win32.Foundation.BSTR", 
    "bstrHelpFile:Windows.Win32.Foundation.BSTR", 
    "dwHelpContext:uint", 
    "pvReserved:ptr", 
    "pfnDeferredFillIn:ptr", 
    "scode:int"
]); 


Win32.FUNCDESC = foreign.named_struct( "Windows.Win32.System.Com.FUNCDESC", [ 
    "memid:int", 
    "lprgscode:ptr", 
    "lprgelemdescParam:ptr", 
    "funckind:int", 
    "invkind:int", 
    "callconv:int", 
    "cParams:short", 
    "cParamsOpt:short", 
    "oVft:short", 
    "cScodes:short", 
    "elemdescFunc:Windows.Win32.System.Com.ELEMDESC", 
    "wFuncFlags:ushort"
]); 


Win32.VARDESC = foreign.named_struct( "Windows.Win32.System.Com.VARDESC", [ 
    "memid:int", 
    "lpstrSchema:wstr", 
    "Anonymous:._Anonymous_e__Union", 
    "elemdescVar:Windows.Win32.System.Com.ELEMDESC", 
    "wVarFlags:ushort", 
    "varkind:int"
]); 


Win32.CUSTDATAITEM = foreign.named_struct( "Windows.Win32.System.Com.CUSTDATAITEM", [ 
    "guid:ptr", 
    "varValue:Windows.Win32.System.Com.VARIANT"
]); 


Win32.CUSTDATA = foreign.named_struct( "Windows.Win32.System.Com.CUSTDATA", [ 
    "cCustData:uint", 
    "prgCustData:ptr"
]); 


Win32.BINDPTR = foreign.named_struct( "Windows.Win32.System.Com.BINDPTR", [ 
    "lpfuncdesc:ptr", 
    "lpvardesc:ptr", 
    "lptcomp:ptr"
]); 


Win32.TLIBATTR = foreign.named_struct( "Windows.Win32.System.Com.TLIBATTR", [ 
    "guid:ptr", 
    "lcid:uint", 
    "syskind:int", 
    "wMajorVerNum:ushort", 
    "wMinorVerNum:ushort", 
    "wLibFlags:ushort"
]); 


Win32.CONNECTDATA = foreign.named_struct( "Windows.Win32.System.Com.CONNECTDATA", [ 
    "pUnk:ptr", 
    "dwCookie:uint"
]); 

Win32.MARSHALINTERFACE_MIN = 500;
Win32.ASYNC_MODE_COMPATIBILITY = 1;
Win32.ASYNC_MODE_DEFAULT = 0;
Win32.STGTY_REPEAT = 256;
Win32.STG_TOEND = -1;
Win32.STG_LAYOUT_SEQUENTIAL = 0;
Win32.STG_LAYOUT_INTERLEAVED = 1;
Win32.COM_RIGHTS_EXECUTE = 1;
Win32.COM_RIGHTS_EXECUTE_LOCAL = 2;
Win32.COM_RIGHTS_EXECUTE_REMOTE = 4;
Win32.COM_RIGHTS_ACTIVATE_LOCAL = 8;
Win32.COM_RIGHTS_ACTIVATE_REMOTE = 16;
Win32.COM_RIGHTS_RESERVED1 = 32;
Win32.COM_RIGHTS_RESERVED2 = 64;
Win32.CWMO_MAX_HANDLES = 56;
Win32.ROTREGFLAGS_ALLOWANYCLIENT = 1;
Win32.APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP = 1;
Win32.APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND = 2;
Win32.APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY = 4;
Win32.APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN = 8;
Win32.APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION = 16;
Win32.APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY = 32;
Win32.APPIDREGFLAGS_RESERVED1 = 64;
Win32.APPIDREGFLAGS_RESERVED2 = 128;
Win32.APPIDREGFLAGS_RESERVED3 = 256;
Win32.APPIDREGFLAGS_RESERVED4 = 512;
Win32.APPIDREGFLAGS_RESERVED5 = 1024;
Win32.APPIDREGFLAGS_AAA_NO_IMPLICIT_ACTIVATE_AS_IU = 2048;
Win32.APPIDREGFLAGS_RESERVED7 = 4096;
Win32.APPIDREGFLAGS_RESERVED8 = 8192;
Win32.APPIDREGFLAGS_RESERVED9 = 16384;
Win32.DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES = 1;
Win32.DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL = 2;
Win32.DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES = 4;
Win32.DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL = 8;
Win32.DCOMSCM_PING_USE_MID_AUTHNSERVICE = 16;
Win32.DCOMSCM_PING_DISALLOW_UNSECURE_CALL = 32;
Win32.MAXLSN = 9223372036854775807;
Win32.DMUS_ERRBASE = 4096;
Win32.CoBuildVersion = foreign.native( "ole32.dll", "uint", "CoBuildVersion", [  ] ); 
Win32.CoInitialize = foreign.native( "OLE32.dll", "int", "CoInitialize", [ "ptr" ] ); 
Win32.CoRegisterMallocSpy = foreign.native( "OLE32.dll", "int", "CoRegisterMallocSpy", [ "ptr" ] ); 
Win32.CoRevokeMallocSpy = foreign.native( "OLE32.dll", "int", "CoRevokeMallocSpy", [  ] ); 
Win32.CoRegisterInitializeSpy = foreign.native( "OLE32.dll", "int", "CoRegisterInitializeSpy", [ "ptr", "ptr" ] ); 
Win32.CoRevokeInitializeSpy = foreign.native( "OLE32.dll", "int", "CoRevokeInitializeSpy", [ "ptr" ] ); 
Win32.CoGetSystemSecurityPermissions = foreign.native( "OLE32.dll", "int", "CoGetSystemSecurityPermissions", [ "int", "ptr" ] ); 
Win32.CoLoadLibrary = foreign.native( "OLE32.dll", "ptr", "CoLoadLibrary", [ "wstr", "int" ] ); 
Win32.CoFreeLibrary = foreign.native( "OLE32.dll", "void", "CoFreeLibrary", [ "ptr" ] ); 
Win32.CoFreeAllLibraries = foreign.native( "OLE32.dll", "void", "CoFreeAllLibraries", [  ] ); 
Win32.CoAllowSetForegroundWindow = foreign.native( "OLE32.dll", "int", "CoAllowSetForegroundWindow", [ "ptr", "ptr" ] ); 
Win32.DcomChannelSetHResult = foreign.native( "ole32.dll", "int", "DcomChannelSetHResult", [ "ptr", "ptr", "int" ] ); 
Win32.CoIsOle1Class = foreign.native( "ole32.dll", "int", "CoIsOle1Class", [ "ptr" ] ); 
Win32.CLSIDFromProgIDEx = foreign.native( "OLE32.dll", "int", "CLSIDFromProgIDEx", [ "wstr", "ptr" ] ); 
Win32.CoFileTimeToDosDateTime = foreign.native( "OLE32.dll", "int", "CoFileTimeToDosDateTime", [ "ptr", "ptr", "ptr" ] ); 
Win32.CoDosDateTimeToFileTime = foreign.native( "OLE32.dll", "int", "CoDosDateTimeToFileTime", [ "ushort", "ushort", "ptr" ] ); 
Win32.CoFileTimeNow = foreign.native( "OLE32.dll", "int", "CoFileTimeNow", [ "ptr" ] ); 
Win32.CoRegisterChannelHook = foreign.native( "ole32.dll", "int", "CoRegisterChannelHook", [ "ptr", "ptr" ] ); 
Win32.CoTreatAsClass = foreign.native( "OLE32.dll", "int", "CoTreatAsClass", [ "ptr", "ptr" ] ); 
Win32.CreateDataAdviseHolder = foreign.native( "OLE32.dll", "int", "CreateDataAdviseHolder", [ "ptr" ] ); 
Win32.CreateDataCache = foreign.native( "OLE32.dll", "int", "CreateDataCache", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CoInstall = foreign.native( "ole32.dll", "int", "CoInstall", [ "ptr", "uint", "ptr", "ptr", "wstr" ] ); 
Win32.BindMoniker = foreign.native( "OLE32.dll", "int", "BindMoniker", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CoGetObject = foreign.native( "OLE32.dll", "int", "CoGetObject", [ "wstr", "ptr", "ptr", "ptr" ] ); 
Win32.MkParseDisplayName = foreign.native( "OLE32.dll", "int", "MkParseDisplayName", [ "ptr", "wstr", "ptr", "ptr" ] ); 
Win32.MonikerRelativePathTo = foreign.native( "ole32.dll", "int", "MonikerRelativePathTo", [ "ptr", "ptr", "ptr", "int" ] ); 
Win32.MonikerCommonPrefixWith = foreign.native( "ole32.dll", "int", "MonikerCommonPrefixWith", [ "ptr", "ptr", "ptr" ] ); 
Win32.CreateBindCtx = foreign.native( "OLE32.dll", "int", "CreateBindCtx", [ "uint", "ptr" ] ); 
Win32.CreateGenericComposite = foreign.native( "OLE32.dll", "int", "CreateGenericComposite", [ "ptr", "ptr", "ptr" ] ); 
Win32.GetClassFile = foreign.native( "OLE32.dll", "int", "GetClassFile", [ "wstr", "ptr" ] ); 
Win32.CreateClassMoniker = foreign.native( "OLE32.dll", "int", "CreateClassMoniker", [ "ptr", "ptr" ] ); 
Win32.CreateFileMoniker = foreign.native( "OLE32.dll", "int", "CreateFileMoniker", [ "wstr", "ptr" ] ); 
Win32.CreateItemMoniker = foreign.native( "OLE32.dll", "int", "CreateItemMoniker", [ "wstr", "wstr", "ptr" ] ); 
Win32.CreateAntiMoniker = foreign.native( "OLE32.dll", "int", "CreateAntiMoniker", [ "ptr" ] ); 
Win32.CreatePointerMoniker = foreign.native( "OLE32.dll", "int", "CreatePointerMoniker", [ "ptr", "ptr" ] ); 
Win32.CreateObjrefMoniker = foreign.native( "OLE32.dll", "int", "CreateObjrefMoniker", [ "ptr", "ptr" ] ); 
Win32.GetRunningObjectTable = foreign.native( "OLE32.dll", "int", "GetRunningObjectTable", [ "uint", "ptr" ] ); 
Win32.CreateStdProgressIndicator = foreign.native( "ole32.dll", "int", "CreateStdProgressIndicator", [ "ptr", "wstr", "ptr", "ptr" ] ); 
Win32.CoGetMalloc = foreign.native( "OLE32.dll", "int", "CoGetMalloc", [ "uint", "ptr" ] ); 
Win32.CoUninitialize = foreign.native( "OLE32.dll", "void", "CoUninitialize", [  ] ); 
Win32.CoGetCurrentProcess = foreign.native( "OLE32.dll", "uint", "CoGetCurrentProcess", [  ] ); 
Win32.CoInitializeEx = foreign.native( "OLE32.dll", "int", "CoInitializeEx", [ "ptr", "uint" ] ); 
Win32.CoGetCallerTID = foreign.native( "OLE32.dll", "int", "CoGetCallerTID", [ "ptr" ] ); 
Win32.CoGetCurrentLogicalThreadId = foreign.native( "OLE32.dll", "int", "CoGetCurrentLogicalThreadId", [ "ptr" ] ); 
Win32.CoGetContextToken = foreign.native( "OLE32.dll", "int", "CoGetContextToken", [ "ptr" ] ); 
Win32.CoGetApartmentType = foreign.native( "OLE32.dll", "int", "CoGetApartmentType", [ "ptr", "ptr" ] ); 
Win32.CoIncrementMTAUsage = foreign.native( "OLE32.dll", "int", "CoIncrementMTAUsage", [ "ptr" ] ); 
Win32.CoDecrementMTAUsage = foreign.native( "OLE32.dll", "int", "CoDecrementMTAUsage", [ "ptr" ] ); 
Win32.CoAllowUnmarshalerCLSID = foreign.native( "OLE32.dll", "int", "CoAllowUnmarshalerCLSID", [ "ptr" ] ); 
Win32.CoGetObjectContext = foreign.native( "OLE32.dll", "int", "CoGetObjectContext", [ "ptr", "ptr" ] ); 
Win32.CoGetClassObject = foreign.native( "OLE32.dll", "int", "CoGetClassObject", [ "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CoRegisterClassObject = foreign.native( "OLE32.dll", "int", "CoRegisterClassObject", [ "ptr", "ptr", "uint", "int", "ptr" ] ); 
Win32.CoRevokeClassObject = foreign.native( "OLE32.dll", "int", "CoRevokeClassObject", [ "uint" ] ); 
Win32.CoResumeClassObjects = foreign.native( "OLE32.dll", "int", "CoResumeClassObjects", [  ] ); 
Win32.CoSuspendClassObjects = foreign.native( "OLE32.dll", "int", "CoSuspendClassObjects", [  ] ); 
Win32.CoAddRefServerProcess = foreign.native( "OLE32.dll", "uint", "CoAddRefServerProcess", [  ] ); 
Win32.CoReleaseServerProcess = foreign.native( "OLE32.dll", "uint", "CoReleaseServerProcess", [  ] ); 
Win32.CoGetPSClsid = foreign.native( "OLE32.dll", "int", "CoGetPSClsid", [ "ptr", "ptr" ] ); 
Win32.CoRegisterPSClsid = foreign.native( "OLE32.dll", "int", "CoRegisterPSClsid", [ "ptr", "ptr" ] ); 
Win32.CoRegisterSurrogate = foreign.native( "OLE32.dll", "int", "CoRegisterSurrogate", [ "ptr" ] ); 
Win32.CoDisconnectObject = foreign.native( "OLE32.dll", "int", "CoDisconnectObject", [ "ptr", "uint" ] ); 
Win32.CoLockObjectExternal = foreign.native( "OLE32.dll", "int", "CoLockObjectExternal", [ "ptr", "int", "int" ] ); 
Win32.CoIsHandlerConnected = foreign.native( "OLE32.dll", "int", "CoIsHandlerConnected", [ "ptr" ] ); 
Win32.CoCreateFreeThreadedMarshaler = foreign.native( "OLE32.dll", "int", "CoCreateFreeThreadedMarshaler", [ "ptr", "ptr" ] ); 
Win32.CoFreeUnusedLibraries = foreign.native( "OLE32.dll", "void", "CoFreeUnusedLibraries", [  ] ); 
Win32.CoFreeUnusedLibrariesEx = foreign.native( "OLE32.dll", "void", "CoFreeUnusedLibrariesEx", [ "uint", "uint" ] ); 
Win32.CoDisconnectContext = foreign.native( "OLE32.dll", "int", "CoDisconnectContext", [ "uint" ] ); 
Win32.CoInitializeSecurity = foreign.native( "OLE32.dll", "int", "CoInitializeSecurity", [ "ptr", "int", "ptr", "ptr", "uint", "uint", "ptr", "int", "ptr" ] ); 
Win32.CoGetCallContext = foreign.native( "OLE32.dll", "int", "CoGetCallContext", [ "ptr", "ptr" ] ); 
Win32.CoQueryProxyBlanket = foreign.native( "OLE32.dll", "int", "CoQueryProxyBlanket", [ "ptr", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CoSetProxyBlanket = foreign.native( "OLE32.dll", "int", "CoSetProxyBlanket", [ "ptr", "uint", "uint", "wstr", "uint", "uint", "ptr", "int" ] ); 
Win32.CoCopyProxy = foreign.native( "OLE32.dll", "int", "CoCopyProxy", [ "ptr", "ptr" ] ); 
Win32.CoQueryClientBlanket = foreign.native( "OLE32.dll", "int", "CoQueryClientBlanket", [ "ptr", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CoImpersonateClient = foreign.native( "OLE32.dll", "int", "CoImpersonateClient", [  ] ); 
Win32.CoRevertToSelf = foreign.native( "OLE32.dll", "int", "CoRevertToSelf", [  ] ); 
Win32.CoQueryAuthenticationServices = foreign.native( "OLE32.dll", "int", "CoQueryAuthenticationServices", [ "ptr", "ptr" ] ); 
Win32.CoSwitchCallContext = foreign.native( "OLE32.dll", "int", "CoSwitchCallContext", [ "ptr", "ptr" ] ); 
Win32.CoCreateInstance = foreign.native( "OLE32.dll", "int", "CoCreateInstance", [ "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CoCreateInstanceEx = foreign.native( "OLE32.dll", "int", "CoCreateInstanceEx", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CoCreateInstanceFromApp = foreign.native( "OLE32.dll", "int", "CoCreateInstanceFromApp", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CoRegisterActivationFilter = foreign.native( "OLE32.dll", "int", "CoRegisterActivationFilter", [ "ptr" ] ); 
Win32.CoGetCancelObject = foreign.native( "OLE32.dll", "int", "CoGetCancelObject", [ "uint", "ptr", "ptr" ] ); 
Win32.CoSetCancelObject = foreign.native( "OLE32.dll", "int", "CoSetCancelObject", [ "ptr" ] ); 
Win32.CoCancelCall = foreign.native( "OLE32.dll", "int", "CoCancelCall", [ "uint", "uint" ] ); 
Win32.CoTestCancel = foreign.native( "OLE32.dll", "int", "CoTestCancel", [  ] ); 
Win32.CoEnableCallCancellation = foreign.native( "OLE32.dll", "int", "CoEnableCallCancellation", [ "ptr" ] ); 
Win32.CoDisableCallCancellation = foreign.native( "OLE32.dll", "int", "CoDisableCallCancellation", [ "ptr" ] ); 
Win32.StringFromCLSID = foreign.native( "OLE32.dll", "int", "StringFromCLSID", [ "ptr", "ptr" ] ); 
Win32.CLSIDFromString = foreign.native( "OLE32.dll", "int", "CLSIDFromString", [ "wstr", "ptr" ] ); 
Win32.StringFromIID = foreign.native( "OLE32.dll", "int", "StringFromIID", [ "ptr", "ptr" ] ); 
Win32.IIDFromString = foreign.native( "OLE32.dll", "int", "IIDFromString", [ "wstr", "ptr" ] ); 
Win32.ProgIDFromCLSID = foreign.native( "OLE32.dll", "int", "ProgIDFromCLSID", [ "ptr", "ptr" ] ); 
Win32.CLSIDFromProgID = foreign.native( "OLE32.dll", "int", "CLSIDFromProgID", [ "wstr", "ptr" ] ); 
Win32.StringFromGUID2 = foreign.native( "OLE32.dll", "int", "StringFromGUID2", [ "ptr", "wstr", "int" ] ); 
Win32.CoCreateGuid = foreign.native( "OLE32.dll", "int", "CoCreateGuid", [ "ptr" ] ); 
Win32.CoWaitForMultipleHandles = foreign.native( "OLE32.dll", "int", "CoWaitForMultipleHandles", [ "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CoWaitForMultipleObjects = foreign.native( "OLE32.dll", "int", "CoWaitForMultipleObjects", [ "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CoGetTreatAsClass = foreign.native( "OLE32.dll", "int", "CoGetTreatAsClass", [ "ptr", "ptr" ] ); 
Win32.CoInvalidateRemoteMachineBindings = foreign.native( "OLE32.dll", "int", "CoInvalidateRemoteMachineBindings", [ "wstr" ] ); 
Win32.CoTaskMemAlloc = foreign.native( "OLE32.dll", "ptr", "CoTaskMemAlloc", [ "ptr" ] ); 
Win32.CoTaskMemRealloc = foreign.native( "OLE32.dll", "ptr", "CoTaskMemRealloc", [ "ptr", "ptr" ] ); 
Win32.CoTaskMemFree = foreign.native( "OLE32.dll", "void", "CoTaskMemFree", [ "ptr" ] ); 
Win32.CoRegisterDeviceCatalog = foreign.native( "OLE32.dll", "int", "CoRegisterDeviceCatalog", [ "wstr", "ptr" ] ); 
Win32.CoRevokeDeviceCatalog = foreign.native( "OLE32.dll", "int", "CoRevokeDeviceCatalog", [ "ptr" ] ); 
Win32.CreateUri = foreign.native( "URLMON.dll", "int", "CreateUri", [ "wstr", "uint", "ptr", "ptr" ] ); 
Win32.CreateUriWithFragment = foreign.native( "URLMON.dll", "int", "CreateUriWithFragment", [ "wstr", "wstr", "uint", "ptr", "ptr" ] ); 
Win32.CreateUriFromMultiByteString = foreign.native( "urlmon.dll", "int", "CreateUriFromMultiByteString", [ "ptr", "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CreateIUriBuilder = foreign.native( "URLMON.dll", "int", "CreateIUriBuilder", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.SetErrorInfo = foreign.native( "OLEAUT32.dll", "int", "SetErrorInfo", [ "uint", "ptr" ] ); 
Win32.GetErrorInfo = foreign.native( "OLEAUT32.dll", "int", "GetErrorInfo", [ "uint", "ptr" ] ); 
Win32.LPEXCEPFINO_DEFERRED_FILLIN = foreign.callback( "int", [ "ptr"] );
Win32.LPFNGETCLASSOBJECT = foreign.callback( "int", [ "ptr", "ptr", "ptr"] );
Win32.LPFNCANUNLOADNOW = foreign.callback( "int", [ ] );
Win32.PFNCONTEXTCALL = foreign.callback( "int", [ "ptr"] );

}

