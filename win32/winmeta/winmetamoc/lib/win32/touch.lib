{

if( runtime.global("Win32") == nil ) { runtime.global("Win32", {}); }
var Win32 = runtime.global("Win32");

Win32.GESTURECONFIG_ID = {
    "GID_BEGIN" : 1, 
    "GID_END" : 2, 
    "GID_ZOOM" : 3, 
    "GID_PAN" : 4, 
    "GID_ROTATE" : 5, 
    "GID_TWOFINGERTAP" : 6, 
    "GID_PRESSANDTAP" : 7, 
    "GID_ROLLOVER" : 7
};


Win32.TOUCHEVENTF_FLAGS = {
    "TOUCHEVENTF_MOVE" : 1, 
    "TOUCHEVENTF_DOWN" : 2, 
    "TOUCHEVENTF_UP" : 4, 
    "TOUCHEVENTF_INRANGE" : 8, 
    "TOUCHEVENTF_PRIMARY" : 16, 
    "TOUCHEVENTF_NOCOALESCE" : 32, 
    "TOUCHEVENTF_PEN" : 64, 
    "TOUCHEVENTF_PALM" : 128
};


Win32.TOUCHINPUTMASKF_MASK = {
    "TOUCHINPUTMASKF_TIMEFROMSYSTEM" : 1, 
    "TOUCHINPUTMASKF_EXTRAINFO" : 2, 
    "TOUCHINPUTMASKF_CONTACTAREA" : 4
};


Win32.REGISTER_TOUCH_WINDOW_FLAGS = {
    "TWF_FINETOUCH" : 1, 
    "TWF_WANTPALM" : 2
};


Win32.MANIPULATION_PROCESSOR_MANIPULATIONS = {
    "MANIPULATION_NONE" : 0, 
    "MANIPULATION_TRANSLATE_X" : 1, 
    "MANIPULATION_TRANSLATE_Y" : 2, 
    "MANIPULATION_SCALE" : 4, 
    "MANIPULATION_ROTATE" : 8, 
    "MANIPULATION_ALL" : 15
};


Win32.HGESTUREINFO = foreign.named_struct( "Windows.Win32.UI.Input.Touch.HGESTUREINFO", [ 
    "Value:ptr"
]); 


Win32.HTOUCHINPUT = foreign.named_struct( "Windows.Win32.UI.Input.Touch.HTOUCHINPUT", [ 
    "Value:ptr"
]); 


Win32.InertiaProcessor = foreign.named_struct( "Windows.Win32.UI.Input.Touch.InertiaProcessor", [ 
    
]); 


Win32.ManipulationProcessor = foreign.named_struct( "Windows.Win32.UI.Input.Touch.ManipulationProcessor", [ 
    
]); 


Win32.TOUCHINPUT = foreign.named_struct( "Windows.Win32.UI.Input.Touch.TOUCHINPUT", [ 
    "x:int", 
    "y:int", 
    "hSource:Windows.Win32.Foundation.HANDLE", 
    "dwID:uint", 
    "dwFlags:uint", 
    "dwMask:uint", 
    "dwTime:uint", 
    "dwExtraInfo:ptr", 
    "cxContact:uint", 
    "cyContact:uint"
]); 


Win32.GESTUREINFO = foreign.named_struct( "Windows.Win32.UI.Input.Touch.GESTUREINFO", [ 
    "cbSize:uint", 
    "dwFlags:uint", 
    "dwID:uint", 
    "hwndTarget:Windows.Win32.Foundation.HWND", 
    "ptsLocation:Windows.Win32.Foundation.POINTS", 
    "dwInstanceID:uint", 
    "dwSequenceID:uint", 
    "ullArguments:ulong", 
    "cbExtraArgs:uint"
]); 


Win32.GESTURENOTIFYSTRUCT = foreign.named_struct( "Windows.Win32.UI.Input.Touch.GESTURENOTIFYSTRUCT", [ 
    "cbSize:uint", 
    "dwFlags:uint", 
    "hwndTarget:Windows.Win32.Foundation.HWND", 
    "ptsLocation:Windows.Win32.Foundation.POINTS", 
    "dwInstanceID:uint"
]); 


Win32.GESTURECONFIG = foreign.named_struct( "Windows.Win32.UI.Input.Touch.GESTURECONFIG", [ 
    "dwID:uint", 
    "dwWant:uint", 
    "dwBlock:uint"
]); 

Win32.GetTouchInputInfo = foreign.native( "USER32.dll", "int", "GetTouchInputInfo", [ "ptr", "uint", "ptr", "int" ] ); 
Win32.CloseTouchInputHandle = foreign.native( "USER32.dll", "int", "CloseTouchInputHandle", [ "ptr" ] ); 
Win32.RegisterTouchWindow = foreign.native( "USER32.dll", "int", "RegisterTouchWindow", [ "ptr", "uint" ] ); 
Win32.UnregisterTouchWindow = foreign.native( "USER32.dll", "int", "UnregisterTouchWindow", [ "ptr" ] ); 
Win32.IsTouchWindow = foreign.native( "USER32.dll", "int", "IsTouchWindow", [ "ptr", "ptr" ] ); 
Win32.GetGestureInfo = foreign.native( "USER32.dll", "int", "GetGestureInfo", [ "ptr", "ptr" ] ); 
Win32.GetGestureExtraArgs = foreign.native( "USER32.dll", "int", "GetGestureExtraArgs", [ "ptr", "uint", "ptr" ] ); 
Win32.CloseGestureInfoHandle = foreign.native( "USER32.dll", "int", "CloseGestureInfoHandle", [ "ptr" ] ); 
Win32.SetGestureConfig = foreign.native( "USER32.dll", "int", "SetGestureConfig", [ "ptr", "uint", "uint", "ptr", "uint" ] ); 
Win32.GetGestureConfig = foreign.native( "USER32.dll", "int", "GetGestureConfig", [ "ptr", "uint", "uint", "ptr", "ptr", "uint" ] ); 

}

