{

if( runtime.global("Win32") == nil ) { runtime.global("Win32", {}); }
var Win32 = runtime.global("Win32");

Win32.VER_FLAGS = {
    "VER_MINORVERSION" : 1, 
    "VER_MAJORVERSION" : 2, 
    "VER_BUILDNUMBER" : 4, 
    "VER_PLATFORMID" : 8, 
    "VER_SERVICEPACKMINOR" : 16, 
    "VER_SERVICEPACKMAJOR" : 32, 
    "VER_SUITENAME" : 64, 
    "VER_PRODUCT_TYPE" : 128
};


Win32.IMAGE_FILE_MACHINE = {
    "IMAGE_FILE_MACHINE_AXP64" : 644, 
    "IMAGE_FILE_MACHINE_I386" : 332, 
    "IMAGE_FILE_MACHINE_IA64" : 512, 
    "IMAGE_FILE_MACHINE_AMD64" : 34404, 
    "IMAGE_FILE_MACHINE_UNKNOWN" : 0, 
    "IMAGE_FILE_MACHINE_TARGET_HOST" : 1, 
    "IMAGE_FILE_MACHINE_R3000" : 354, 
    "IMAGE_FILE_MACHINE_R4000" : 358, 
    "IMAGE_FILE_MACHINE_R10000" : 360, 
    "IMAGE_FILE_MACHINE_WCEMIPSV2" : 361, 
    "IMAGE_FILE_MACHINE_ALPHA" : 388, 
    "IMAGE_FILE_MACHINE_SH3" : 418, 
    "IMAGE_FILE_MACHINE_SH3DSP" : 419, 
    "IMAGE_FILE_MACHINE_SH3E" : 420, 
    "IMAGE_FILE_MACHINE_SH4" : 422, 
    "IMAGE_FILE_MACHINE_SH5" : 424, 
    "IMAGE_FILE_MACHINE_ARM" : 448, 
    "IMAGE_FILE_MACHINE_THUMB" : 450, 
    "IMAGE_FILE_MACHINE_ARMNT" : 452, 
    "IMAGE_FILE_MACHINE_AM33" : 467, 
    "IMAGE_FILE_MACHINE_POWERPC" : 496, 
    "IMAGE_FILE_MACHINE_POWERPCFP" : 497, 
    "IMAGE_FILE_MACHINE_MIPS16" : 614, 
    "IMAGE_FILE_MACHINE_ALPHA64" : 644, 
    "IMAGE_FILE_MACHINE_MIPSFPU" : 870, 
    "IMAGE_FILE_MACHINE_MIPSFPU16" : 1126, 
    "IMAGE_FILE_MACHINE_TRICORE" : 1312, 
    "IMAGE_FILE_MACHINE_CEF" : 3311, 
    "IMAGE_FILE_MACHINE_EBC" : 3772, 
    "IMAGE_FILE_MACHINE_M32R" : 36929, 
    "IMAGE_FILE_MACHINE_ARM64" : 43620, 
    "IMAGE_FILE_MACHINE_CEE" : 49390
};


Win32.FIRMWARE_TABLE_PROVIDER = {
    "ACPI" : 1094930505, 
    "FIRM" : 1179210317, 
    "RSMB" : 1381190978
};


Win32.USER_CET_ENVIRONMENT = {
    "USER_CET_ENVIRONMENT_WIN32_PROCESS" : 0, 
    "USER_CET_ENVIRONMENT_SGX2_ENCLAVE" : 2, 
    "USER_CET_ENVIRONMENT_VBS_ENCLAVE" : 16, 
    "USER_CET_ENVIRONMENT_VBS_BASIC_ENCLAVE" : 17
};


Win32.OS_PRODUCT_TYPE = {
    "PRODUCT_BUSINESS" : 6, 
    "PRODUCT_BUSINESS_N" : 16, 
    "PRODUCT_CLUSTER_SERVER" : 18, 
    "PRODUCT_CLUSTER_SERVER_V" : 64, 
    "PRODUCT_CORE" : 101, 
    "PRODUCT_CORE_COUNTRYSPECIFIC" : 99, 
    "PRODUCT_CORE_N" : 98, 
    "PRODUCT_CORE_SINGLELANGUAGE" : 100, 
    "PRODUCT_DATACENTER_EVALUATION_SERVER" : 80, 
    "PRODUCT_DATACENTER_A_SERVER_CORE" : 145, 
    "PRODUCT_STANDARD_A_SERVER_CORE" : 146, 
    "PRODUCT_DATACENTER_SERVER" : 8, 
    "PRODUCT_DATACENTER_SERVER_CORE" : 12, 
    "PRODUCT_DATACENTER_SERVER_CORE_V" : 39, 
    "PRODUCT_DATACENTER_SERVER_V" : 37, 
    "PRODUCT_EDUCATION" : 121, 
    "PRODUCT_EDUCATION_N" : 122, 
    "PRODUCT_ENTERPRISE" : 4, 
    "PRODUCT_ENTERPRISE_E" : 70, 
    "PRODUCT_ENTERPRISE_EVALUATION" : 72, 
    "PRODUCT_ENTERPRISE_N" : 27, 
    "PRODUCT_ENTERPRISE_N_EVALUATION" : 84, 
    "PRODUCT_ENTERPRISE_S" : 125, 
    "PRODUCT_ENTERPRISE_S_EVALUATION" : 129, 
    "PRODUCT_ENTERPRISE_S_N" : 126, 
    "PRODUCT_ENTERPRISE_S_N_EVALUATION" : 130, 
    "PRODUCT_ENTERPRISE_SERVER" : 10, 
    "PRODUCT_ENTERPRISE_SERVER_CORE" : 14, 
    "PRODUCT_ENTERPRISE_SERVER_CORE_V" : 41, 
    "PRODUCT_ENTERPRISE_SERVER_IA64" : 15, 
    "PRODUCT_ENTERPRISE_SERVER_V" : 38, 
    "PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL" : 60, 
    "PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC" : 62, 
    "PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT" : 59, 
    "PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC" : 61, 
    "PRODUCT_HOME_BASIC" : 2, 
    "PRODUCT_HOME_BASIC_E" : 67, 
    "PRODUCT_HOME_BASIC_N" : 5, 
    "PRODUCT_HOME_PREMIUM" : 3, 
    "PRODUCT_HOME_PREMIUM_E" : 68, 
    "PRODUCT_HOME_PREMIUM_N" : 26, 
    "PRODUCT_HOME_PREMIUM_SERVER" : 34, 
    "PRODUCT_HOME_SERVER" : 19, 
    "PRODUCT_HYPERV" : 42, 
    "PRODUCT_IOTUAP" : 123, 
    "PRODUCT_IOTUAPCOMMERCIAL" : 131, 
    "PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT" : 30, 
    "PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING" : 32, 
    "PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY" : 31, 
    "PRODUCT_MOBILE_CORE" : 104, 
    "PRODUCT_MOBILE_ENTERPRISE" : 133, 
    "PRODUCT_MULTIPOINT_PREMIUM_SERVER" : 77, 
    "PRODUCT_MULTIPOINT_STANDARD_SERVER" : 76, 
    "PRODUCT_PRO_WORKSTATION" : 161, 
    "PRODUCT_PRO_WORKSTATION_N" : 162, 
    "PRODUCT_PROFESSIONAL" : 48, 
    "PRODUCT_PROFESSIONAL_E" : 69, 
    "PRODUCT_PROFESSIONAL_N" : 49, 
    "PRODUCT_PROFESSIONAL_WMC" : 103, 
    "PRODUCT_SB_SOLUTION_SERVER" : 50, 
    "PRODUCT_SB_SOLUTION_SERVER_EM" : 54, 
    "PRODUCT_SERVER_FOR_SB_SOLUTIONS" : 51, 
    "PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM" : 55, 
    "PRODUCT_SERVER_FOR_SMALLBUSINESS" : 24, 
    "PRODUCT_SERVER_FOR_SMALLBUSINESS_V" : 35, 
    "PRODUCT_SERVER_FOUNDATION" : 33, 
    "PRODUCT_SMALLBUSINESS_SERVER" : 9, 
    "PRODUCT_SMALLBUSINESS_SERVER_PREMIUM" : 25, 
    "PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE" : 63, 
    "PRODUCT_SOLUTION_EMBEDDEDSERVER" : 56, 
    "PRODUCT_STANDARD_EVALUATION_SERVER" : 79, 
    "PRODUCT_STANDARD_SERVER" : 7, 
    "PRODUCT_STANDARD_SERVER_CORE_" : 13, 
    "PRODUCT_STANDARD_SERVER_CORE_V" : 40, 
    "PRODUCT_STANDARD_SERVER_V" : 36, 
    "PRODUCT_STANDARD_SERVER_SOLUTIONS" : 52, 
    "PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE" : 53, 
    "PRODUCT_STARTER" : 11, 
    "PRODUCT_STARTER_E" : 66, 
    "PRODUCT_STARTER_N" : 47, 
    "PRODUCT_STORAGE_ENTERPRISE_SERVER" : 23, 
    "PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE" : 46, 
    "PRODUCT_STORAGE_EXPRESS_SERVER" : 20, 
    "PRODUCT_STORAGE_EXPRESS_SERVER_CORE" : 43, 
    "PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER" : 96, 
    "PRODUCT_STORAGE_STANDARD_SERVER" : 21, 
    "PRODUCT_STORAGE_STANDARD_SERVER_CORE" : 44, 
    "PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER" : 95, 
    "PRODUCT_STORAGE_WORKGROUP_SERVER" : 22, 
    "PRODUCT_STORAGE_WORKGROUP_SERVER_CORE" : 45, 
    "PRODUCT_ULTIMATE" : 1, 
    "PRODUCT_ULTIMATE_E" : 71, 
    "PRODUCT_ULTIMATE_N" : 28, 
    "PRODUCT_UNDEFINED" : 0, 
    "PRODUCT_WEB_SERVER" : 17, 
    "PRODUCT_WEB_SERVER_CORE" : 29
};


Win32.DEVICEFAMILYINFOENUM = {
    "DEVICEFAMILYINFOENUM_UAP" : 0, 
    "DEVICEFAMILYINFOENUM_WINDOWS_8X" : 1, 
    "DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X" : 2, 
    "DEVICEFAMILYINFOENUM_DESKTOP" : 3, 
    "DEVICEFAMILYINFOENUM_MOBILE" : 4, 
    "DEVICEFAMILYINFOENUM_XBOX" : 5, 
    "DEVICEFAMILYINFOENUM_TEAM" : 6, 
    "DEVICEFAMILYINFOENUM_IOT" : 7, 
    "DEVICEFAMILYINFOENUM_IOT_HEADLESS" : 8, 
    "DEVICEFAMILYINFOENUM_SERVER" : 9, 
    "DEVICEFAMILYINFOENUM_HOLOGRAPHIC" : 10, 
    "DEVICEFAMILYINFOENUM_XBOXSRA" : 11, 
    "DEVICEFAMILYINFOENUM_XBOXERA" : 12, 
    "DEVICEFAMILYINFOENUM_SERVER_NANO" : 13, 
    "DEVICEFAMILYINFOENUM_8828080" : 14, 
    "DEVICEFAMILYINFOENUM_7067329" : 15, 
    "DEVICEFAMILYINFOENUM_WINDOWS_CORE" : 16, 
    "DEVICEFAMILYINFOENUM_WINDOWS_CORE_HEADLESS" : 17, 
    "DEVICEFAMILYINFOENUM_MAX" : 17
};


Win32.DEVICEFAMILYDEVICEFORM = {
    "DEVICEFAMILYDEVICEFORM_UNKNOWN" : 0, 
    "DEVICEFAMILYDEVICEFORM_PHONE" : 1, 
    "DEVICEFAMILYDEVICEFORM_TABLET" : 2, 
    "DEVICEFAMILYDEVICEFORM_DESKTOP" : 3, 
    "DEVICEFAMILYDEVICEFORM_NOTEBOOK" : 4, 
    "DEVICEFAMILYDEVICEFORM_CONVERTIBLE" : 5, 
    "DEVICEFAMILYDEVICEFORM_DETACHABLE" : 6, 
    "DEVICEFAMILYDEVICEFORM_ALLINONE" : 7, 
    "DEVICEFAMILYDEVICEFORM_STICKPC" : 8, 
    "DEVICEFAMILYDEVICEFORM_PUCK" : 9, 
    "DEVICEFAMILYDEVICEFORM_LARGESCREEN" : 10, 
    "DEVICEFAMILYDEVICEFORM_HMD" : 11, 
    "DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD" : 12, 
    "DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET" : 13, 
    "DEVICEFAMILYDEVICEFORM_BANKING" : 14, 
    "DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION" : 15, 
    "DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE" : 16, 
    "DEVICEFAMILYDEVICEFORM_GAMING" : 17, 
    "DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION" : 18, 
    "DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION" : 19, 
    "DEVICEFAMILYDEVICEFORM_KIOSK" : 20, 
    "DEVICEFAMILYDEVICEFORM_MAKER_BOARD" : 21, 
    "DEVICEFAMILYDEVICEFORM_MEDICAL" : 22, 
    "DEVICEFAMILYDEVICEFORM_NETWORKING" : 23, 
    "DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE" : 24, 
    "DEVICEFAMILYDEVICEFORM_PRINTING" : 25, 
    "DEVICEFAMILYDEVICEFORM_THIN_CLIENT" : 26, 
    "DEVICEFAMILYDEVICEFORM_TOY" : 27, 
    "DEVICEFAMILYDEVICEFORM_VENDING" : 28, 
    "DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER" : 29, 
    "DEVICEFAMILYDEVICEFORM_XBOX_ONE" : 30, 
    "DEVICEFAMILYDEVICEFORM_XBOX_ONE_S" : 31, 
    "DEVICEFAMILYDEVICEFORM_XBOX_ONE_X" : 32, 
    "DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT" : 33, 
    "DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X" : 34, 
    "DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X_DEVKIT" : 35, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_00" : 36, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_01" : 37, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_02" : 38, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_03" : 39, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_04" : 40, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_05" : 41, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_06" : 42, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_07" : 43, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_08" : 44, 
    "DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_09" : 45, 
    "DEVICEFAMILYDEVICEFORM_MAX" : 45
};


Win32.COMPUTER_NAME_FORMAT = {
    "ComputerNameNetBIOS" : 0, 
    "ComputerNameDnsHostname" : 1, 
    "ComputerNameDnsDomain" : 2, 
    "ComputerNameDnsFullyQualified" : 3, 
    "ComputerNamePhysicalNetBIOS" : 4, 
    "ComputerNamePhysicalDnsHostname" : 5, 
    "ComputerNamePhysicalDnsDomain" : 6, 
    "ComputerNamePhysicalDnsFullyQualified" : 7, 
    "ComputerNameMax" : 8
};


Win32.FIRMWARE_TYPE = {
    "FirmwareTypeUnknown" : 0, 
    "FirmwareTypeBios" : 1, 
    "FirmwareTypeUefi" : 2, 
    "FirmwareTypeMax" : 3
};


Win32.LOGICAL_PROCESSOR_RELATIONSHIP = {
    "RelationProcessorCore" : 0, 
    "RelationNumaNode" : 1, 
    "RelationCache" : 2, 
    "RelationProcessorPackage" : 3, 
    "RelationGroup" : 4, 
    "RelationProcessorDie" : 5, 
    "RelationNumaNodeEx" : 6, 
    "RelationProcessorModule" : 7, 
    "RelationAll" : 65535
};


Win32.PROCESSOR_CACHE_TYPE = {
    "CacheUnified" : 0, 
    "CacheInstruction" : 1, 
    "CacheData" : 2, 
    "CacheTrace" : 3
};


Win32.CPU_SET_INFORMATION_TYPE = {
    "CpuSetInformation" : 0
};


Win32.OS_DEPLOYEMENT_STATE_VALUES = {
    "OS_DEPLOYMENT_STANDARD" : 1, 
    "OS_DEPLOYMENT_COMPACT" : 2
};


Win32.RTL_SYSTEM_GLOBAL_DATA_ID = {
    "GlobalDataIdUnknown" : 0, 
    "GlobalDataIdRngSeedVersion" : 1, 
    "GlobalDataIdInterruptTime" : 2, 
    "GlobalDataIdTimeZoneBias" : 3, 
    "GlobalDataIdImageNumberLow" : 4, 
    "GlobalDataIdImageNumberHigh" : 5, 
    "GlobalDataIdTimeZoneId" : 6, 
    "GlobalDataIdNtMajorVersion" : 7, 
    "GlobalDataIdNtMinorVersion" : 8, 
    "GlobalDataIdSystemExpirationDate" : 9, 
    "GlobalDataIdKdDebuggerEnabled" : 10, 
    "GlobalDataIdCyclesPerYield" : 11, 
    "GlobalDataIdSafeBootMode" : 12, 
    "GlobalDataIdLastSystemRITEventTickCount" : 13
};


Win32.DEP_SYSTEM_POLICY_TYPE = {
    "DEPPolicyAlwaysOff" : 0, 
    "DEPPolicyAlwaysOn" : 1, 
    "DEPPolicyOptIn" : 2, 
    "DEPPolicyOptOut" : 3, 
    "DEPTotalPolicyCount" : 4
};


Win32.FIRMWARE_TABLE_ID = foreign.named_struct( "Windows.Win32.System.SystemInformation.FIRMWARE_TABLE_ID", [ 
    "Value:uint"
]); 


Win32.GROUP_AFFINITY = foreign.named_struct( "Windows.Win32.System.SystemInformation.GROUP_AFFINITY", [ 
    "Mask:ptr", 
    "Group:ushort", 
    "Reserved[3]:ushort"
]); 


Win32.SYSTEM_INFO = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_INFO", [ 
    "Anonymous:._Anonymous_e__Union", 
    "dwPageSize:uint", 
    "lpMinimumApplicationAddress:ptr", 
    "lpMaximumApplicationAddress:ptr", 
    "dwActiveProcessorMask:ptr", 
    "dwNumberOfProcessors:uint", 
    "dwProcessorType:uint", 
    "dwAllocationGranularity:uint", 
    "wProcessorLevel:ushort", 
    "wProcessorRevision:ushort"
]); 


Win32.MEMORYSTATUSEX = foreign.named_struct( "Windows.Win32.System.SystemInformation.MEMORYSTATUSEX", [ 
    "dwLength:uint", 
    "dwMemoryLoad:uint", 
    "ullTotalPhys:ulong", 
    "ullAvailPhys:ulong", 
    "ullTotalPageFile:ulong", 
    "ullAvailPageFile:ulong", 
    "ullTotalVirtual:ulong", 
    "ullAvailVirtual:ulong", 
    "ullAvailExtendedVirtual:ulong"
]); 


Win32.CACHE_DESCRIPTOR = foreign.named_struct( "Windows.Win32.System.SystemInformation.CACHE_DESCRIPTOR", [ 
    "Level:ubyte", 
    "Associativity:ubyte", 
    "LineSize:ushort", 
    "Size:uint", 
    "Type:int"
]); 


Win32.SYSTEM_LOGICAL_PROCESSOR_INFORMATION = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_LOGICAL_PROCESSOR_INFORMATION", [ 
    "ProcessorMask:ptr", 
    "Relationship:int", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.PROCESSOR_RELATIONSHIP = foreign.named_struct( "Windows.Win32.System.SystemInformation.PROCESSOR_RELATIONSHIP", [ 
    "Flags:ubyte", 
    "EfficiencyClass:ubyte", 
    "Reserved[20]:ubyte", 
    "GroupCount:ushort", 
    "GroupMask[1]:Windows.Win32.System.SystemInformation.GROUP_AFFINITY"
]); 


Win32.NUMA_NODE_RELATIONSHIP = foreign.named_struct( "Windows.Win32.System.SystemInformation.NUMA_NODE_RELATIONSHIP", [ 
    "NodeNumber:uint", 
    "Reserved[18]:ubyte", 
    "GroupCount:ushort", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CACHE_RELATIONSHIP = foreign.named_struct( "Windows.Win32.System.SystemInformation.CACHE_RELATIONSHIP", [ 
    "Level:ubyte", 
    "Associativity:ubyte", 
    "LineSize:ushort", 
    "CacheSize:uint", 
    "Type:int", 
    "Reserved[18]:ubyte", 
    "GroupCount:ushort", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.PROCESSOR_GROUP_INFO = foreign.named_struct( "Windows.Win32.System.SystemInformation.PROCESSOR_GROUP_INFO", [ 
    "MaximumProcessorCount:ubyte", 
    "ActiveProcessorCount:ubyte", 
    "Reserved[38]:ubyte", 
    "ActiveProcessorMask:ptr"
]); 


Win32.GROUP_RELATIONSHIP = foreign.named_struct( "Windows.Win32.System.SystemInformation.GROUP_RELATIONSHIP", [ 
    "MaximumGroupCount:ushort", 
    "ActiveGroupCount:ushort", 
    "Reserved[20]:ubyte", 
    "GroupInfo[1]:Windows.Win32.System.SystemInformation.PROCESSOR_GROUP_INFO"
]); 


Win32.SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX", [ 
    "Relationship:int", 
    "Size:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.SYSTEM_CPU_SET_INFORMATION = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_CPU_SET_INFORMATION", [ 
    "Size:uint", 
    "Type:int", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.SYSTEM_POOL_ZEROING_INFORMATION = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_POOL_ZEROING_INFORMATION", [ 
    "PoolZeroingSupportPresent:Windows.Win32.Foundation.BOOLEAN"
]); 


Win32.SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION", [ 
    "CycleTime:ulong"
]); 


Win32.SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION = foreign.named_struct( "Windows.Win32.System.SystemInformation.SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION", [ 
    "_bitfield:uint"
]); 


Win32.OSVERSIONINFOA = foreign.named_struct( "Windows.Win32.System.SystemInformation.OSVERSIONINFOA", [ 
    "dwOSVersionInfoSize:uint", 
    "dwMajorVersion:uint", 
    "dwMinorVersion:uint", 
    "dwBuildNumber:uint", 
    "dwPlatformId:uint", 
    "szCSDVersion[128]:Windows.Win32.Foundation.CHAR"
]); 


Win32.OSVERSIONINFOW = foreign.named_struct( "Windows.Win32.System.SystemInformation.OSVERSIONINFOW", [ 
    "dwOSVersionInfoSize:uint", 
    "dwMajorVersion:uint", 
    "dwMinorVersion:uint", 
    "dwBuildNumber:uint", 
    "dwPlatformId:uint", 
    "szCSDVersion[128]:short"
]); 


Win32.OSVERSIONINFOEXA = foreign.named_struct( "Windows.Win32.System.SystemInformation.OSVERSIONINFOEXA", [ 
    "dwOSVersionInfoSize:uint", 
    "dwMajorVersion:uint", 
    "dwMinorVersion:uint", 
    "dwBuildNumber:uint", 
    "dwPlatformId:uint", 
    "szCSDVersion[128]:Windows.Win32.Foundation.CHAR", 
    "wServicePackMajor:ushort", 
    "wServicePackMinor:ushort", 
    "wSuiteMask:ushort", 
    "wProductType:ubyte", 
    "wReserved:ubyte"
]); 


Win32.OSVERSIONINFOEXW = foreign.named_struct( "Windows.Win32.System.SystemInformation.OSVERSIONINFOEXW", [ 
    "dwOSVersionInfoSize:uint", 
    "dwMajorVersion:uint", 
    "dwMinorVersion:uint", 
    "dwBuildNumber:uint", 
    "dwPlatformId:uint", 
    "szCSDVersion[128]:short", 
    "wServicePackMajor:ushort", 
    "wServicePackMinor:ushort", 
    "wSuiteMask:ushort", 
    "wProductType:ubyte", 
    "wReserved:ubyte"
]); 


Win32.MEMORYSTATUS = foreign.named_struct( "Windows.Win32.System.SystemInformation.MEMORYSTATUS", [ 
    "dwLength:uint", 
    "dwMemoryLoad:uint", 
    "dwTotalPhys:ptr", 
    "dwAvailPhys:ptr", 
    "dwTotalPageFile:ptr", 
    "dwAvailPageFile:ptr", 
    "dwTotalVirtual:ptr", 
    "dwAvailVirtual:ptr"
]); 

Win32.NTDDI_WIN2K = 83886080;
Win32.NTDDI_WINXP = 83951616;
Win32.NTDDI_WINXPSP2 = 83952128;
Win32.NTDDI_WS03SP1 = 84017408;
Win32.NTDDI_VISTA = 100663296;
Win32.NTDDI_VISTASP1 = 100663552;
Win32.NTDDI_WIN7 = 100728832;
Win32.NTDDI_WIN8 = 100794368;
Win32.NTDDI_WINBLUE = 100859904;
Win32.NTDDI_WINTHRESHOLD = 167772160;
Win32.SYSTEM_CPU_SET_INFORMATION_PARKED = 1;
Win32.SYSTEM_CPU_SET_INFORMATION_ALLOCATED = 2;
Win32.SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS = 4;
Win32.SYSTEM_CPU_SET_INFORMATION_REALTIME = 8;
Win32.NTDDI_WIN4 = 67108864;
Win32.NTDDI_WIN2KSP1 = 83886336;
Win32.NTDDI_WIN2KSP2 = 83886592;
Win32.NTDDI_WIN2KSP3 = 83886848;
Win32.NTDDI_WIN2KSP4 = 83887104;
Win32.NTDDI_WINXPSP1 = 83951872;
Win32.NTDDI_WINXPSP3 = 83952384;
Win32.NTDDI_WINXPSP4 = 83952640;
Win32.NTDDI_WS03 = 84017152;
Win32.NTDDI_WS03SP2 = 84017664;
Win32.NTDDI_WS03SP3 = 84017920;
Win32.NTDDI_WS03SP4 = 84018176;
Win32.NTDDI_WIN6 = 100663296;
Win32.NTDDI_WIN6SP1 = 100663552;
Win32.NTDDI_WIN6SP2 = 100663808;
Win32.NTDDI_WIN6SP3 = 100664064;
Win32.NTDDI_WIN6SP4 = 100664320;
Win32.NTDDI_VISTASP2 = 100663808;
Win32.NTDDI_VISTASP3 = 100664064;
Win32.NTDDI_VISTASP4 = 100664320;
Win32.NTDDI_LONGHORN = 100663296;
Win32.NTDDI_WS08 = 100663552;
Win32.NTDDI_WS08SP2 = 100663808;
Win32.NTDDI_WS08SP3 = 100664064;
Win32.NTDDI_WS08SP4 = 100664320;
Win32.NTDDI_WIN10 = 167772160;
Win32.NTDDI_WIN10_TH2 = 167772161;
Win32.NTDDI_WIN10_RS1 = 167772162;
Win32.NTDDI_WIN10_RS2 = 167772163;
Win32.NTDDI_WIN10_RS3 = 167772164;
Win32.NTDDI_WIN10_RS4 = 167772165;
Win32.NTDDI_WIN10_RS5 = 167772166;
Win32.NTDDI_WIN10_19H1 = 167772167;
Win32.NTDDI_WIN10_VB = 167772168;
Win32.NTDDI_WIN10_MN = 167772169;
Win32.NTDDI_WIN10_FE = 167772170;
Win32.NTDDI_WIN10_CO = 167772171;
Win32.WDK_NTDDI_VERSION = 167772171;
Win32.OSVERSION_MASK = 4294901760;
Win32.SPVERSION_MASK = 65280;
Win32.SUBVERSION_MASK = 255;
Win32.NTDDI_VERSION = 167772171;
Win32.SCEX2_ALT_NETBIOS_NAME = 1;
Win32.GlobalMemoryStatusEx = foreign.native( "KERNEL32.dll", "int", "GlobalMemoryStatusEx", [ "ptr" ] ); 
Win32.GetSystemInfo = foreign.native( "KERNEL32.dll", "void", "GetSystemInfo", [ "ptr" ] ); 
Win32.GetSystemTime = foreign.native( "KERNEL32.dll", "void", "GetSystemTime", [ "ptr" ] ); 
Win32.GetSystemTimeAsFileTime = foreign.native( "KERNEL32.dll", "void", "GetSystemTimeAsFileTime", [ "ptr" ] ); 
Win32.GetLocalTime = foreign.native( "KERNEL32.dll", "void", "GetLocalTime", [ "ptr" ] ); 
Win32.IsUserCetAvailableInEnvironment = foreign.native( "KERNEL32.dll", "int", "IsUserCetAvailableInEnvironment", [ "uint" ] ); 
Win32.GetSystemLeapSecondInformation = foreign.native( "KERNEL32.dll", "int", "GetSystemLeapSecondInformation", [ "ptr", "ptr" ] ); 
Win32.GetVersion = foreign.native( "KERNEL32.dll", "uint", "GetVersion", [  ] ); 
Win32.SetLocalTime = foreign.native( "KERNEL32.dll", "int", "SetLocalTime", [ "ptr" ] ); 
Win32.GetTickCount = foreign.native( "KERNEL32.dll", "uint", "GetTickCount", [  ] ); 
Win32.GetTickCount64 = foreign.native( "KERNEL32.dll", "ulong", "GetTickCount64", [  ] ); 
Win32.GetSystemTimeAdjustment = foreign.native( "KERNEL32.dll", "int", "GetSystemTimeAdjustment", [ "ptr", "ptr", "ptr" ] ); 
Win32.GetSystemTimeAdjustmentPrecise = foreign.native( "api-ms-win-core-sysinfo-l1-2-4.dll", "int", "GetSystemTimeAdjustmentPrecise", [ "ptr", "ptr", "ptr" ] ); 
Win32.GetSystemDirectoryA = foreign.native( "KERNEL32.dll", "uint", "GetSystemDirectoryA", [ "ptr", "uint" ] ); 
Win32.GetSystemDirectoryW = foreign.native( "KERNEL32.dll", "uint", "GetSystemDirectoryW", [ "wstr", "uint" ] ); 
Win32.GetWindowsDirectoryA = foreign.native( "KERNEL32.dll", "uint", "GetWindowsDirectoryA", [ "ptr", "uint" ] ); 
Win32.GetWindowsDirectoryW = foreign.native( "KERNEL32.dll", "uint", "GetWindowsDirectoryW", [ "wstr", "uint" ] ); 
Win32.GetSystemWindowsDirectoryA = foreign.native( "KERNEL32.dll", "uint", "GetSystemWindowsDirectoryA", [ "ptr", "uint" ] ); 
Win32.GetSystemWindowsDirectoryW = foreign.native( "KERNEL32.dll", "uint", "GetSystemWindowsDirectoryW", [ "wstr", "uint" ] ); 
Win32.GetComputerNameExA = foreign.native( "KERNEL32.dll", "int", "GetComputerNameExA", [ "int", "ptr", "ptr" ] ); 
Win32.GetComputerNameExW = foreign.native( "KERNEL32.dll", "int", "GetComputerNameExW", [ "int", "wstr", "ptr" ] ); 
Win32.SetComputerNameExW = foreign.native( "KERNEL32.dll", "int", "SetComputerNameExW", [ "int", "wstr" ] ); 
Win32.SetSystemTime = foreign.native( "KERNEL32.dll", "int", "SetSystemTime", [ "ptr" ] ); 
Win32.GetVersionExA = foreign.native( "KERNEL32.dll", "int", "GetVersionExA", [ "ptr" ] ); 
Win32.GetVersionExW = foreign.native( "KERNEL32.dll", "int", "GetVersionExW", [ "ptr" ] ); 
Win32.GetLogicalProcessorInformation = foreign.native( "KERNEL32.dll", "int", "GetLogicalProcessorInformation", [ "ptr", "ptr" ] ); 
Win32.GetLogicalProcessorInformationEx = foreign.native( "KERNEL32.dll", "int", "GetLogicalProcessorInformationEx", [ "int", "ptr", "ptr" ] ); 
Win32.GetNativeSystemInfo = foreign.native( "KERNEL32.dll", "void", "GetNativeSystemInfo", [ "ptr" ] ); 
Win32.GetSystemTimePreciseAsFileTime = foreign.native( "KERNEL32.dll", "void", "GetSystemTimePreciseAsFileTime", [ "ptr" ] ); 
Win32.GetProductInfo = foreign.native( "KERNEL32.dll", "int", "GetProductInfo", [ "uint", "uint", "uint", "uint", "ptr" ] ); 
Win32.VerSetConditionMask = foreign.native( "KERNEL32.dll", "ulong", "VerSetConditionMask", [ "ulong", "uint", "ubyte" ] ); 
Win32.GetOsSafeBootMode = foreign.native( "api-ms-win-core-sysinfo-l1-2-0.dll", "int", "GetOsSafeBootMode", [ "ptr" ] ); 
Win32.EnumSystemFirmwareTables = foreign.native( "KERNEL32.dll", "uint", "EnumSystemFirmwareTables", [ "uint", "ptr", "uint" ] ); 
Win32.GetSystemFirmwareTable = foreign.native( "KERNEL32.dll", "uint", "GetSystemFirmwareTable", [ "uint", "uint", "ptr", "uint" ] ); 
Win32.DnsHostnameToComputerNameExW = foreign.native( "KERNEL32.dll", "int", "DnsHostnameToComputerNameExW", [ "wstr", "wstr", "ptr" ] ); 
Win32.GetPhysicallyInstalledSystemMemory = foreign.native( "KERNEL32.dll", "int", "GetPhysicallyInstalledSystemMemory", [ "ptr" ] ); 
Win32.SetComputerNameEx2W = foreign.native( "KERNEL32.dll", "int", "SetComputerNameEx2W", [ "int", "uint", "wstr" ] ); 
Win32.SetSystemTimeAdjustment = foreign.native( "KERNEL32.dll", "int", "SetSystemTimeAdjustment", [ "uint", "int" ] ); 
Win32.SetSystemTimeAdjustmentPrecise = foreign.native( "api-ms-win-core-sysinfo-l1-2-4.dll", "int", "SetSystemTimeAdjustmentPrecise", [ "ulong", "int" ] ); 
Win32.GetProcessorSystemCycleTime = foreign.native( "KERNEL32.dll", "int", "GetProcessorSystemCycleTime", [ "ushort", "ptr", "ptr" ] ); 
Win32.GetOsManufacturingMode = foreign.native( "api-ms-win-core-sysinfo-l1-2-3.dll", "int", "GetOsManufacturingMode", [ "ptr" ] ); 
Win32.GetIntegratedDisplaySize = foreign.native( "api-ms-win-core-sysinfo-l1-2-3.dll", "int", "GetIntegratedDisplaySize", [ "ptr" ] ); 
Win32.SetComputerNameA = foreign.native( "KERNEL32.dll", "int", "SetComputerNameA", [ "ptr" ] ); 
Win32.SetComputerNameW = foreign.native( "KERNEL32.dll", "int", "SetComputerNameW", [ "wstr" ] ); 
Win32.SetComputerNameExA = foreign.native( "KERNEL32.dll", "int", "SetComputerNameExA", [ "int", "ptr" ] ); 
Win32.GetSystemCpuSetInformation = foreign.native( "KERNEL32.dll", "int", "GetSystemCpuSetInformation", [ "ptr", "uint", "ptr", "ptr", "uint" ] ); 
Win32.GetSystemWow64DirectoryA = foreign.native( "KERNEL32.dll", "uint", "GetSystemWow64DirectoryA", [ "ptr", "uint" ] ); 
Win32.GetSystemWow64DirectoryW = foreign.native( "KERNEL32.dll", "uint", "GetSystemWow64DirectoryW", [ "wstr", "uint" ] ); 
Win32.GetSystemWow64Directory2A = foreign.native( "api-ms-win-core-wow64-l1-1-1.dll", "uint", "GetSystemWow64Directory2A", [ "ptr", "uint", "ushort" ] ); 
Win32.GetSystemWow64Directory2W = foreign.native( "api-ms-win-core-wow64-l1-1-1.dll", "uint", "GetSystemWow64Directory2W", [ "wstr", "uint", "ushort" ] ); 
Win32.IsWow64GuestMachineSupported = foreign.native( "KERNEL32.dll", "int", "IsWow64GuestMachineSupported", [ "ushort", "ptr" ] ); 
Win32.RtlGetProductInfo = foreign.native( "ntdll.dll", "ubyte", "RtlGetProductInfo", [ "uint", "uint", "uint", "uint", "ptr" ] ); 
Win32.RtlOsDeploymentState = foreign.native( "ntdll.dll", "int", "RtlOsDeploymentState", [ "uint" ] ); 
Win32.RtlGetSystemGlobalData = foreign.native( "ntdllk.dll", "uint", "RtlGetSystemGlobalData", [ "int", "ptr", "uint" ] ); 
Win32.RtlGetDeviceFamilyInfoEnum = foreign.native( "ntdll.dll", "void", "RtlGetDeviceFamilyInfoEnum", [ "ptr", "ptr", "ptr" ] ); 
Win32.RtlConvertDeviceFamilyInfoToString = foreign.native( "ntdll.dll", "uint", "RtlConvertDeviceFamilyInfoToString", [ "ptr", "ptr", "wstr", "wstr" ] ); 
Win32.RtlSwitchedVVI = foreign.native( "ntdll.dll", "uint", "RtlSwitchedVVI", [ "ptr", "uint", "ulong" ] ); 
Win32.GlobalMemoryStatus = foreign.native( "KERNEL32.dll", "void", "GlobalMemoryStatus", [ "ptr" ] ); 
Win32.GetSystemDEPPolicy = foreign.native( "KERNEL32.dll", "int", "GetSystemDEPPolicy", [  ] ); 
Win32.GetFirmwareType = foreign.native( "KERNEL32.dll", "int", "GetFirmwareType", [ "ptr" ] ); 
Win32.VerifyVersionInfoA = foreign.native( "KERNEL32.dll", "int", "VerifyVersionInfoA", [ "ptr", "uint", "ulong" ] ); 
Win32.VerifyVersionInfoW = foreign.native( "KERNEL32.dll", "int", "VerifyVersionInfoW", [ "ptr", "uint", "ulong" ] ); 
Win32.PGET_SYSTEM_WOW64_DIRECTORY_A = foreign.callback( "uint", [ "ptr", "uint"] );
Win32.PGET_SYSTEM_WOW64_DIRECTORY_W = foreign.callback( "uint", [ "wstr", "uint"] );

}

