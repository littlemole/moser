{
class WinRtInterface { 
    queryInterface(iid) { return this.comPtr.queryInterface(iid); }
    release() { this.comPtr.release(); this.comPtr = nil; }
    valid() { return this.comPtr != nil && int(this.comPtr) != 0; }
}

if( runtime.global("Microsoft") == nil ) { runtime.global("Microsoft", {}); }
var Microsoft = runtime.global("Microsoft");
if ( Microsoft.UI == nil ) { Microsoft.UI = {}; }
if ( Microsoft.UI.Windowing == nil ) { Microsoft.UI.Windowing = {}; }

Microsoft.UI.Windowing.AppWindowPresenterKind = {
    "Default" : 0, 
    "CompactOverlay" : 1, 
    "FullScreen" : 2, 
    "Overlapped" : 3
};


Microsoft.UI.Windowing.CompactOverlaySize = {
    "Small" : 0, 
    "Medium" : 1, 
    "Large" : 2
};


Microsoft.UI.Windowing.DisplayAreaFallback = {
    "None" : 0, 
    "Primary" : 1, 
    "Nearest" : 2
};


Microsoft.UI.Windowing.DisplayAreaWatcherStatus = {
    "Created" : 0, 
    "Started" : 1, 
    "EnumerationCompleted" : 2, 
    "Stopping" : 3, 
    "Stopped" : 4, 
    "Aborted" : 5
};


Microsoft.UI.Windowing.IconShowOptions = {
    "ShowIconAndSystemMenu" : 0, 
    "HideIconAndSystemMenu" : 1
};


Microsoft.UI.Windowing.OverlappedPresenterState = {
    "Maximized" : 0, 
    "Minimized" : 1, 
    "Restored" : 2
};


Microsoft.UI.Windowing.TitleBarHeightOption = {
    "Standard" : 0, 
    "Tall" : 1, 
    "Collapsed" : 2
};

//@Interface("Microsoft.UI.Windowing.IAppWindow")
//@IID("{CFA788B3-643B-5C5E-AD4E-321D48A82ACD}")
class Microsoft_UI_Windowing_IAppWindow : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindow( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{CFA788B3-643B-5C5E-AD4E-321D48A82ACD}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.WindowId")
    get_Id()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Microsoft.UI.WindowId", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Boolean")
    get_IsShownInSwitchers()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsShownInSwitchers(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 8, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Boolean")
    get_IsVisible()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 9, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Microsoft.UI.WindowId")
    get_OwnerWindowId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 10, "Microsoft.UI.WindowId", [], [] );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Windows.Graphics.PointInt32")
    get_Position()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 11, "Windows.Graphics.PointInt32", [], [] );
        return _r;
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindowPresenter")
    get_Presenter()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.AppWindowPresenter(
            this.comPtr.invoke( 12, "Microsoft.UI.Windowing.AppWindowPresenter", [], [] )
        );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("Windows.Graphics.SizeInt32")
    get_Size()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 13, "Windows.Graphics.SizeInt32", [], [] );
        return _r;
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("String")
    get_Title()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 14, "String", [], [] );
        return _r;
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    put_Title(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 15, "void", ["String"], [p1] );
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindowTitleBar")
    get_TitleBar()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.AppWindowTitleBar(
            this.comPtr.invoke( 16, "Microsoft.UI.Windowing.AppWindowTitleBar", [], [] )
        );
        return _r;
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("void")
    Destroy()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 17, "void", [], [] );
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("void")
    Hide()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 18, "void", [], [] );
    }

    //@VtableIndex(19)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Graphics.PointInt32")
    Move(position)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = position;
        this.comPtr.invoke( 19, "void", ["Windows.Graphics.PointInt32"], [p1] );
    }

    //@VtableIndex(20)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Graphics.RectInt32")
    MoveAndResize(rect)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = rect;
        this.comPtr.invoke( 20, "void", ["Windows.Graphics.RectInt32"], [p1] );
    }

    //@VtableIndex(21)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Graphics.RectInt32","Microsoft.UI.Windowing.DisplayArea")
    MoveAndResizeRelativeToDisplayArea(rect,displayarea)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = rect;
        var p2 = Microsoft.UI.Windowing.DisplayArea( displayarea); 
        this.comPtr.invoke( 21, "void", ["Windows.Graphics.RectInt32", "Microsoft.UI.Windowing.DisplayArea"], [p1, p2] );
    }

    //@VtableIndex(22)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Graphics.SizeInt32")
    Resize(size)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = size;
        this.comPtr.invoke( 22, "void", ["Windows.Graphics.SizeInt32"], [p1] );
    }

    //@VtableIndex(23)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    SetIcon(iconPath)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = iconPath;
        this.comPtr.invoke( 23, "void", ["String"], [p1] );
    }

    //@VtableIndex(24)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.IconId")
    SetIconWithIconId(iconId)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = iconId;
        this.comPtr.invoke( 24, "void", ["Microsoft.UI.IconId"], [p1] );
    }

    //@VtableIndex(25)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter")
    SetPresenter(appWindowPresenter)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Microsoft.UI.Windowing.AppWindowPresenter( appWindowPresenter); 
        this.comPtr.invoke( 25, "void", ["Microsoft.UI.Windowing.AppWindowPresenter"], [p1] );
    }

    //@VtableIndex(26)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenterKind")
    SetPresenterByKind(appWindowPresenterKind)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = appWindowPresenterKind;
        this.comPtr.invoke( 26, "void", ["UInt32"], [p1] );
    }

    //@VtableIndex(27)
    //@Async(0)
    //@Returns("void")
    Show()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 27, "void", [], [] );
    }

    //@VtableIndex(28)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    ShowWithActivation(activateWindow)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = activateWindow;
        this.comPtr.invoke( 28, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(29)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowChangedEventArgs>")
    add_Changed(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowChangedEventArgs_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 29, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowChangedEventArgs>"], [p1] );
        return _r;
    }

    //@VtableIndex(30)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Changed(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 30, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }

    //@VtableIndex(31)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowClosingEventArgs>")
    add_Closing(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowClosingEventArgs_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 31, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowClosingEventArgs>"], [p1] );
        return _r;
    }

    //@VtableIndex(32)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Closing(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 32, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }

    //@VtableIndex(33)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Object>")
    add_Destroying(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Object_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 33, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Object>"], [p1] );
        return _r;
    }

    //@VtableIndex(34)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Destroying(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 34, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }


}
Microsoft_UI_Windowing_IAppWindow.iid = "{CFA788B3-643B-5C5E-AD4E-321D48A82ACD}";
Microsoft.UI.Windowing.IAppWindow = Microsoft_UI_Windowing_IAppWindow;


//@Interface("Microsoft.UI.Windowing.IAppWindow2")
//@IID("{6CD41292-794C-5CAC-8961-210D012C6EBC}")
class Microsoft_UI_Windowing_IAppWindow2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindow2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{6CD41292-794C-5CAC-8961-210D012C6EBC}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Windows.Graphics.SizeInt32")
    get_ClientSize()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Windows.Graphics.SizeInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    MoveInZOrderAtBottom()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 7, "void", [], [] );
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("void")
    MoveInZOrderAtTop()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 8, "void", [], [] );
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.WindowId")
    MoveInZOrderBelow(windowId)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = windowId;
        this.comPtr.invoke( 9, "void", ["Microsoft.UI.WindowId"], [p1] );
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Graphics.SizeInt32")
    ResizeClient(size)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = size;
        this.comPtr.invoke( 10, "void", ["Windows.Graphics.SizeInt32"], [p1] );
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("void")
    ShowOnceWithRequestedStartupState()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 11, "void", [], [] );
    }


}
Microsoft_UI_Windowing_IAppWindow2.iid = "{6CD41292-794C-5CAC-8961-210D012C6EBC}";
Microsoft.UI.Windowing.IAppWindow2 = Microsoft_UI_Windowing_IAppWindow2;


//@Interface("Microsoft.UI.Windowing.IAppWindow3")
//@IID("{2F260CEA-193D-5DD6-A904-D7649A608D2F}")
class Microsoft_UI_Windowing_IAppWindow3 : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindow3( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{2F260CEA-193D-5DD6-A904-D7649A608D2F}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.Dispatching.DispatcherQueue")
    AssociateWithDispatcherQueue(dispatcherQueue)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Microsoft.UI.Dispatching.DispatcherQueue( dispatcherQueue); 
        this.comPtr.invoke( 6, "void", ["Microsoft.UI.Dispatching.DispatcherQueue"], [p1] );
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Microsoft.UI.Dispatching.DispatcherQueue")
    get_DispatcherQueue()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Dispatching.DispatcherQueue(
            this.comPtr.invoke( 7, "Microsoft.UI.Dispatching.DispatcherQueue", [], [] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindow3.iid = "{2F260CEA-193D-5DD6-A904-D7649A608D2F}";
Microsoft.UI.Windowing.IAppWindow3 = Microsoft_UI_Windowing_IAppWindow3;


//@Interface("Microsoft.UI.Windowing.IAppWindowChangedEventArgs")
//@IID("{2182BC5D-FDAC-5C3E-BF37-7D8D684E9D1D}")
class Microsoft_UI_Windowing_IAppWindowChangedEventArgs : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowChangedEventArgs( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{2182BC5D-FDAC-5C3E-BF37-7D8D684E9D1D}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Boolean")
    get_DidPositionChange()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Boolean")
    get_DidPresenterChange()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Boolean")
    get_DidSizeChange()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 8, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Boolean")
    get_DidVisibilityChange()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 9, "Boolean", [], [] );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindowChangedEventArgs.iid = "{2182BC5D-FDAC-5C3E-BF37-7D8D684E9D1D}";
Microsoft.UI.Windowing.IAppWindowChangedEventArgs = Microsoft_UI_Windowing_IAppWindowChangedEventArgs;


//@Interface("Microsoft.UI.Windowing.IAppWindowChangedEventArgs2")
//@IID("{A773AB4C-A5EC-50E8-98AC-247FE6CD4227}")
class Microsoft_UI_Windowing_IAppWindowChangedEventArgs2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowChangedEventArgs2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{A773AB4C-A5EC-50E8-98AC-247FE6CD4227}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Boolean")
    get_DidZOrderChange()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Boolean")
    get_IsZOrderAtBottom()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Boolean")
    get_IsZOrderAtTop()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 8, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Microsoft.UI.WindowId")
    get_ZOrderBelowWindowId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 9, "Microsoft.UI.WindowId", [], [] );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindowChangedEventArgs2.iid = "{A773AB4C-A5EC-50E8-98AC-247FE6CD4227}";
Microsoft.UI.Windowing.IAppWindowChangedEventArgs2 = Microsoft_UI_Windowing_IAppWindowChangedEventArgs2;


//@Interface("Microsoft.UI.Windowing.IAppWindowClosingEventArgs")
//@IID("{0E09D90B-2261-590B-9AD1-8504991D8754}")
class Microsoft_UI_Windowing_IAppWindowClosingEventArgs : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowClosingEventArgs( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{0E09D90B-2261-590B-9AD1-8504991D8754}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Boolean")
    get_Cancel()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_Cancel(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 7, "void", ["Boolean"], [p1] );
    }


}
Microsoft_UI_Windowing_IAppWindowClosingEventArgs.iid = "{0E09D90B-2261-590B-9AD1-8504991D8754}";
Microsoft.UI.Windowing.IAppWindowClosingEventArgs = Microsoft_UI_Windowing_IAppWindowClosingEventArgs;


//@Interface("Microsoft.UI.Windowing.IAppWindowPresenter")
//@IID("{BC3042C2-C6C6-5632-8989-FF0EC6D3B40D}")
class Microsoft_UI_Windowing_IAppWindowPresenter : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{BC3042C2-C6C6-5632-8989-FF0EC6D3B40D}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindowPresenterKind")
    get_Kind()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindowPresenter.iid = "{BC3042C2-C6C6-5632-8989-FF0EC6D3B40D}";
Microsoft.UI.Windowing.IAppWindowPresenter = Microsoft_UI_Windowing_IAppWindowPresenter;


//@Interface("Microsoft.UI.Windowing.IAppWindowPresenterFactory")
//@IID("{62082E3C-1368-5238-90D1-E932DC718A82}")
class Microsoft_UI_Windowing_IAppWindowPresenterFactory : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowPresenterFactory( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{62082E3C-1368-5238-90D1-E932DC718A82}");
    }


}
Microsoft_UI_Windowing_IAppWindowPresenterFactory.iid = "{62082E3C-1368-5238-90D1-E932DC718A82}";
Microsoft.UI.Windowing.IAppWindowPresenterFactory = Microsoft_UI_Windowing_IAppWindowPresenterFactory;


//@Interface("Microsoft.UI.Windowing.IAppWindowStatics")
//@IID("{3C315C24-D540-5D72-B518-B226B83627CB}")
class Microsoft_UI_Windowing_IAppWindowStatics : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowStatics( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{3C315C24-D540-5D72-B518-B226B83627CB}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    Create()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.AppWindow(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.AppWindow", [], [] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter")
    CreateWithPresenter(appWindowPresenter)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Microsoft.UI.Windowing.AppWindowPresenter( appWindowPresenter); 
        var _r = Microsoft.UI.Windowing.AppWindow(
            this.comPtr.invoke( 7, "Microsoft.UI.Windowing.AppWindow", ["Microsoft.UI.Windowing.AppWindowPresenter"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter","Microsoft.UI.WindowId")
    CreateWithPresenterAndOwner(appWindowPresenter,ownerWindowId)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Microsoft.UI.Windowing.AppWindowPresenter( appWindowPresenter); 
        var p2 = ownerWindowId;
        var _r = Microsoft.UI.Windowing.AppWindow(
            this.comPtr.invoke( 8, "Microsoft.UI.Windowing.AppWindow", ["Microsoft.UI.Windowing.AppWindowPresenter", "Microsoft.UI.WindowId"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.WindowId")
    GetFromWindowId(windowId)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = windowId;
        var _r = Microsoft.UI.Windowing.AppWindow(
            this.comPtr.invoke( 9, "Microsoft.UI.Windowing.AppWindow", ["Microsoft.UI.WindowId"], [p1] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindowStatics.iid = "{3C315C24-D540-5D72-B518-B226B83627CB}";
Microsoft.UI.Windowing.IAppWindowStatics = Microsoft_UI_Windowing_IAppWindowStatics;


//@Interface("Microsoft.UI.Windowing.IAppWindowStatics2")
//@IID("{CABC23DB-4606-5D6E-89A5-06DE1D8BD3E2}")
class Microsoft_UI_Windowing_IAppWindowStatics2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowStatics2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{CABC23DB-4606-5D6E-89A5-06DE1D8BD3E2}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter","Microsoft.UI.WindowId","Microsoft.UI.Dispatching.DispatcherQueue")
    CreateWithDispatcherQueue(appWindowPresenter,ownerWindowId,DispatcherQueue)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Microsoft.UI.Windowing.AppWindowPresenter( appWindowPresenter); 
        var p2 = ownerWindowId;
        var p3 = Microsoft.UI.Dispatching.DispatcherQueue( DispatcherQueue); 
        var _r = Microsoft.UI.Windowing.AppWindow(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.AppWindow", ["Microsoft.UI.Windowing.AppWindowPresenter", "Microsoft.UI.WindowId", "Microsoft.UI.Dispatching.DispatcherQueue"], [p1, p2, p3] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindowStatics2.iid = "{CABC23DB-4606-5D6E-89A5-06DE1D8BD3E2}";
Microsoft.UI.Windowing.IAppWindowStatics2 = Microsoft_UI_Windowing_IAppWindowStatics2;


//@Interface("Microsoft.UI.Windowing.IAppWindowTitleBar")
//@IID("{5574EFA2-C91C-5700-A363-539C71A7AAF4}")
class Microsoft_UI_Windowing_IAppWindowTitleBar : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowTitleBar( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{5574EFA2-C91C-5700-A363-539C71A7AAF4}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_BackgroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 6, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_BackgroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 7, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonBackgroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 8, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonBackgroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 9, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonForegroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 10, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonForegroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 11, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonHoverBackgroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 12, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonHoverBackgroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 13, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonHoverForegroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 14, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonHoverForegroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 15, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonInactiveBackgroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 16, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonInactiveBackgroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 17, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonInactiveForegroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 18, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(19)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonInactiveForegroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 19, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(20)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonPressedBackgroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 20, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(21)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonPressedBackgroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 21, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(22)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonPressedForegroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 22, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(23)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonPressedForegroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 23, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(24)
    //@Async(0)
    //@Returns("Boolean")
    get_ExtendsContentIntoTitleBar()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 24, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(25)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_ExtendsContentIntoTitleBar(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 25, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(26)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ForegroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 26, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(27)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ForegroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 27, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(28)
    //@Async(0)
    //@Returns("Int32")
    get_Height()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 28, "Int32", [], [] );
        return _r;
    }

    //@VtableIndex(29)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.IconShowOptions")
    get_IconShowOptions()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 29, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(30)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.IconShowOptions")
    put_IconShowOptions(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 30, "void", ["UInt32"], [p1] );
    }

    //@VtableIndex(31)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_InactiveBackgroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 31, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(32)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_InactiveBackgroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 32, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(33)
    //@Async(0)
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_InactiveForegroundColor()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.IReference_1_Windows_UI_Color_(
            this.comPtr.invoke( 33, "Windows.Foundation.IReference`1<Windows.UI.Color>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(34)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_InactiveForegroundColor(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = Windows.Foundation.IReference_1_Windows_UI_Color_( value); 
        this.comPtr.invoke( 34, "void", ["Windows.Foundation.IReference`1<Windows.UI.Color>"], [p1] );
    }

    //@VtableIndex(35)
    //@Async(0)
    //@Returns("Int32")
    get_LeftInset()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 35, "Int32", [], [] );
        return _r;
    }

    //@VtableIndex(36)
    //@Async(0)
    //@Returns("Int32")
    get_RightInset()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 36, "Int32", [], [] );
        return _r;
    }

    //@VtableIndex(37)
    //@Async(0)
    //@Returns("void")
    ResetToDefault()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 37, "void", [], [] );
    }


}
Microsoft_UI_Windowing_IAppWindowTitleBar.iid = "{5574EFA2-C91C-5700-A363-539C71A7AAF4}";
Microsoft.UI.Windowing.IAppWindowTitleBar = Microsoft_UI_Windowing_IAppWindowTitleBar;


//@Interface("Microsoft.UI.Windowing.IAppWindowTitleBar2")
//@IID("{86FAED38-748A-5B4B-9CCF-3BA0496C9041}")
class Microsoft_UI_Windowing_IAppWindowTitleBar2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowTitleBar2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{86FAED38-748A-5B4B-9CCF-3BA0496C9041}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.TitleBarHeightOption")
    get_PreferredHeightOption()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.TitleBarHeightOption")
    put_PreferredHeightOption(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 7, "void", ["UInt32"], [p1] );
    }


}
Microsoft_UI_Windowing_IAppWindowTitleBar2.iid = "{86FAED38-748A-5B4B-9CCF-3BA0496C9041}";
Microsoft.UI.Windowing.IAppWindowTitleBar2 = Microsoft_UI_Windowing_IAppWindowTitleBar2;


//@Interface("Microsoft.UI.Windowing.IAppWindowTitleBarStatics")
//@IID("{9E1DA52E-8B15-54D6-A886-F7B9F9D930B2}")
class Microsoft_UI_Windowing_IAppWindowTitleBarStatics : WinRtInterface 
{
    Microsoft_UI_Windowing_IAppWindowTitleBarStatics( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{9E1DA52E-8B15-54D6-A886-F7B9F9D930B2}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Boolean")
    IsCustomizationSupported()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Boolean", [], [] );
        return _r;
    }


}
Microsoft_UI_Windowing_IAppWindowTitleBarStatics.iid = "{9E1DA52E-8B15-54D6-A886-F7B9F9D930B2}";
Microsoft.UI.Windowing.IAppWindowTitleBarStatics = Microsoft_UI_Windowing_IAppWindowTitleBarStatics;


//@Interface("Microsoft.UI.Windowing.ICompactOverlayPresenter")
//@IID("{EFEB0812-6FC7-5B7D-BD92-CC8F9A6454C9}")
class Microsoft_UI_Windowing_ICompactOverlayPresenter : WinRtInterface 
{
    Microsoft_UI_Windowing_ICompactOverlayPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{EFEB0812-6FC7-5B7D-BD92-CC8F9A6454C9}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.CompactOverlaySize")
    get_InitialSize()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.CompactOverlaySize")
    put_InitialSize(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 7, "void", ["UInt32"], [p1] );
    }


}
Microsoft_UI_Windowing_ICompactOverlayPresenter.iid = "{EFEB0812-6FC7-5B7D-BD92-CC8F9A6454C9}";
Microsoft.UI.Windowing.ICompactOverlayPresenter = Microsoft_UI_Windowing_ICompactOverlayPresenter;


//@Interface("Microsoft.UI.Windowing.ICompactOverlayPresenterStatics")
//@IID("{EAB93186-4F6A-52F9-8C03-DA57A1522F6E}")
class Microsoft_UI_Windowing_ICompactOverlayPresenterStatics : WinRtInterface 
{
    Microsoft_UI_Windowing_ICompactOverlayPresenterStatics( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{EAB93186-4F6A-52F9-8C03-DA57A1522F6E}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.CompactOverlayPresenter")
    Create()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.CompactOverlayPresenter(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.CompactOverlayPresenter", [], [] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_ICompactOverlayPresenterStatics.iid = "{EAB93186-4F6A-52F9-8C03-DA57A1522F6E}";
Microsoft.UI.Windowing.ICompactOverlayPresenterStatics = Microsoft_UI_Windowing_ICompactOverlayPresenterStatics;


//@Interface("Microsoft.UI.Windowing.IDisplayArea")
//@IID("{5C7E0537-B621-5579-BCAE-A84AA8746167}")
class Microsoft_UI_Windowing_IDisplayArea : WinRtInterface 
{
    Microsoft_UI_Windowing_IDisplayArea( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{5C7E0537-B621-5579-BCAE-A84AA8746167}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.DisplayId")
    get_DisplayId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Microsoft.UI.DisplayId", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Boolean")
    get_IsPrimary()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Graphics.RectInt32")
    get_OuterBounds()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 8, "Windows.Graphics.RectInt32", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Windows.Graphics.RectInt32")
    get_WorkArea()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 9, "Windows.Graphics.RectInt32", [], [] );
        return _r;
    }


}
Microsoft_UI_Windowing_IDisplayArea.iid = "{5C7E0537-B621-5579-BCAE-A84AA8746167}";
Microsoft.UI.Windowing.IDisplayArea = Microsoft_UI_Windowing_IDisplayArea;


//@Interface("Microsoft.UI.Windowing.IDisplayAreaStatics")
//@IID("{02AB4926-211E-5D49-8E4B-2AF193DAED09}")
class Microsoft_UI_Windowing_IDisplayAreaStatics : WinRtInterface 
{
    Microsoft_UI_Windowing_IDisplayAreaStatics( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{02AB4926-211E-5D49-8E4B-2AF193DAED09}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    get_Primary()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.DisplayArea(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.DisplayArea", [], [] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayAreaWatcher")
    CreateWatcher()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.DisplayAreaWatcher(
            this.comPtr.invoke( 7, "Microsoft.UI.Windowing.DisplayAreaWatcher", [], [] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Windowing.DisplayArea>")
    FindAll()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Windows.Foundation.Collections.IVectorView_1_Microsoft_UI_Windowing_DisplayArea_(
            this.comPtr.invoke( 8, "Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Windowing.DisplayArea>", [], [] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Microsoft.UI.WindowId","Microsoft.UI.Windowing.DisplayAreaFallback")
    GetFromWindowId(windowId,displayAreaFallback)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = windowId;
        var p2 = displayAreaFallback;
        var _r = Microsoft.UI.Windowing.DisplayArea(
            this.comPtr.invoke( 9, "Microsoft.UI.Windowing.DisplayArea", ["Microsoft.UI.WindowId", "UInt32"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Windows.Graphics.PointInt32","Microsoft.UI.Windowing.DisplayAreaFallback")
    GetFromPoint(point,displayAreaFallback)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = point;
        var p2 = displayAreaFallback;
        var _r = Microsoft.UI.Windowing.DisplayArea(
            this.comPtr.invoke( 10, "Microsoft.UI.Windowing.DisplayArea", ["Windows.Graphics.PointInt32", "UInt32"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Windows.Graphics.RectInt32","Microsoft.UI.Windowing.DisplayAreaFallback")
    GetFromRect(rect,displayAreaFallback)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = rect;
        var p2 = displayAreaFallback;
        var _r = Microsoft.UI.Windowing.DisplayArea(
            this.comPtr.invoke( 11, "Microsoft.UI.Windowing.DisplayArea", ["Windows.Graphics.RectInt32", "UInt32"], [p1, p2] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IDisplayAreaStatics.iid = "{02AB4926-211E-5D49-8E4B-2AF193DAED09}";
Microsoft.UI.Windowing.IDisplayAreaStatics = Microsoft_UI_Windowing_IDisplayAreaStatics;


//@Interface("Microsoft.UI.Windowing.IDisplayAreaStatics2")
//@IID("{7207AD4B-890D-5DD7-BC18-78FFD9544D8F}")
class Microsoft_UI_Windowing_IDisplayAreaStatics2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IDisplayAreaStatics2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{7207AD4B-890D-5DD7-BC18-78FFD9544D8F}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Microsoft.UI.DisplayId")
    GetFromDisplayId(displayId)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = displayId;
        var _r = Microsoft.UI.Windowing.DisplayArea(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.DisplayArea", ["Microsoft.UI.DisplayId"], [p1] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IDisplayAreaStatics2.iid = "{7207AD4B-890D-5DD7-BC18-78FFD9544D8F}";
Microsoft.UI.Windowing.IDisplayAreaStatics2 = Microsoft_UI_Windowing_IDisplayAreaStatics2;


//@Interface("Microsoft.UI.Windowing.IDisplayAreaWatcher")
//@IID("{83F6562F-D3A0-548B-8E4F-A99BE3D95C9C}")
class Microsoft_UI_Windowing_IDisplayAreaWatcher : WinRtInterface 
{
    Microsoft_UI_Windowing_IDisplayAreaWatcher( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{83F6562F-D3A0-548B-8E4F-A99BE3D95C9C}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayAreaWatcherStatus")
    get_Status()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    Start()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 7, "void", [], [] );
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("void")
    Stop()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 8, "void", [], [] );
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    add_Added(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 9, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>"], [p1] );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Added(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 10, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
    add_EnumerationCompleted(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Object_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 11, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>"], [p1] );
        return _r;
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_EnumerationCompleted(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 12, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    add_Removed(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 13, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>"], [p1] );
        return _r;
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Removed(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 14, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
    add_Stopped(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Object_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 15, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>"], [p1] );
        return _r;
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Stopped(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 16, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    add_Updated(handler)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = nil; 
        if( typeof(handler) == "comptr" ) { 
            p1 = handler;
        } else {
            p1 = Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_.Create( handler); 
        }
        var _r = this.comPtr.invoke( 17, "Windows.Foundation.EventRegistrationToken", ["Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>"], [p1] );
        return _r;
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Updated(token)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = token;
        this.comPtr.invoke( 18, "void", ["Windows.Foundation.EventRegistrationToken"], [p1] );
    }


}
Microsoft_UI_Windowing_IDisplayAreaWatcher.iid = "{83F6562F-D3A0-548B-8E4F-A99BE3D95C9C}";
Microsoft.UI.Windowing.IDisplayAreaWatcher = Microsoft_UI_Windowing_IDisplayAreaWatcher;


//@Interface("Microsoft.UI.Windowing.IFullScreenPresenter")
//@IID("{FA9141FD-B8DD-5DA1-8B2B-7CDADB76F593}")
class Microsoft_UI_Windowing_IFullScreenPresenter : WinRtInterface 
{
    Microsoft_UI_Windowing_IFullScreenPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{FA9141FD-B8DD-5DA1-8B2B-7CDADB76F593}");
    }


}
Microsoft_UI_Windowing_IFullScreenPresenter.iid = "{FA9141FD-B8DD-5DA1-8B2B-7CDADB76F593}";
Microsoft.UI.Windowing.IFullScreenPresenter = Microsoft_UI_Windowing_IFullScreenPresenter;


//@Interface("Microsoft.UI.Windowing.IFullScreenPresenterStatics")
//@IID("{2EC0D2C1-E086-55BB-A3B2-44942E231C67}")
class Microsoft_UI_Windowing_IFullScreenPresenterStatics : WinRtInterface 
{
    Microsoft_UI_Windowing_IFullScreenPresenterStatics( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{2EC0D2C1-E086-55BB-A3B2-44942E231C67}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.FullScreenPresenter")
    Create()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.FullScreenPresenter(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.FullScreenPresenter", [], [] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IFullScreenPresenterStatics.iid = "{2EC0D2C1-E086-55BB-A3B2-44942E231C67}";
Microsoft.UI.Windowing.IFullScreenPresenterStatics = Microsoft_UI_Windowing_IFullScreenPresenterStatics;


//@Interface("Microsoft.UI.Windowing.IOverlappedPresenter")
//@IID("{21693970-4F4C-5172-9E9D-682A2D174884}")
class Microsoft_UI_Windowing_IOverlappedPresenter : WinRtInterface 
{
    Microsoft_UI_Windowing_IOverlappedPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{21693970-4F4C-5172-9E9D-682A2D174884}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Boolean")
    get_HasBorder()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Boolean")
    get_HasTitleBar()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Boolean")
    get_IsAlwaysOnTop()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 8, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsAlwaysOnTop(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 9, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Boolean")
    get_IsMaximizable()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 10, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsMaximizable(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 11, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Boolean")
    get_IsMinimizable()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 12, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsMinimizable(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 13, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("Boolean")
    get_IsModal()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 14, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsModal(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 15, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("Boolean")
    get_IsResizable()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 16, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsResizable(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = value;
        this.comPtr.invoke( 17, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenterState")
    get_State()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 18, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(19)
    //@Async(0)
    //@Returns("void")
    Maximize()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 19, "void", [], [] );
    }

    //@VtableIndex(20)
    //@Async(0)
    //@Returns("void")
    Minimize()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 20, "void", [], [] );
    }

    //@VtableIndex(21)
    //@Async(0)
    //@Returns("void")
    Restore()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        this.comPtr.invoke( 21, "void", [], [] );
    }

    //@VtableIndex(22)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean","Boolean")
    SetBorderAndTitleBar(hasBorder,hasTitleBar)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = hasBorder;
        var p2 = hasTitleBar;
        this.comPtr.invoke( 22, "void", ["Boolean", "Boolean"], [p1, p2] );
    }


}
Microsoft_UI_Windowing_IOverlappedPresenter.iid = "{21693970-4F4C-5172-9E9D-682A2D174884}";
Microsoft.UI.Windowing.IOverlappedPresenter = Microsoft_UI_Windowing_IOverlappedPresenter;


//@Interface("Microsoft.UI.Windowing.IOverlappedPresenter2")
//@IID("{5C6CCD93-4244-5CD2-B355-ED5EA34DF730}")
class Microsoft_UI_Windowing_IOverlappedPresenter2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IOverlappedPresenter2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{5C6CCD93-4244-5CD2-B355-ED5EA34DF730}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    MinimizeWithActivation(activateWindow)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = activateWindow;
        this.comPtr.invoke( 6, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    RestoreWithActivation(activateWindow)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var p1 = activateWindow;
        this.comPtr.invoke( 7, "void", ["Boolean"], [p1] );
    }


}
Microsoft_UI_Windowing_IOverlappedPresenter2.iid = "{5C6CCD93-4244-5CD2-B355-ED5EA34DF730}";
Microsoft.UI.Windowing.IOverlappedPresenter2 = Microsoft_UI_Windowing_IOverlappedPresenter2;


//@Interface("Microsoft.UI.Windowing.IOverlappedPresenterStatics")
//@IID("{997225E4-7B00-5AEE-A4BE-D4068D1999E2}")
class Microsoft_UI_Windowing_IOverlappedPresenterStatics : WinRtInterface 
{
    Microsoft_UI_Windowing_IOverlappedPresenterStatics( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{997225E4-7B00-5AEE-A4BE-D4068D1999E2}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    Create()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.OverlappedPresenter(
            this.comPtr.invoke( 6, "Microsoft.UI.Windowing.OverlappedPresenter", [], [] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    CreateForContextMenu()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.OverlappedPresenter(
            this.comPtr.invoke( 7, "Microsoft.UI.Windowing.OverlappedPresenter", [], [] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    CreateForDialog()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.OverlappedPresenter(
            this.comPtr.invoke( 8, "Microsoft.UI.Windowing.OverlappedPresenter", [], [] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    CreateForToolWindow()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = Microsoft.UI.Windowing.OverlappedPresenter(
            this.comPtr.invoke( 9, "Microsoft.UI.Windowing.OverlappedPresenter", [], [] )
        );
        return _r;
    }


}
Microsoft_UI_Windowing_IOverlappedPresenterStatics.iid = "{997225E4-7B00-5AEE-A4BE-D4068D1999E2}";
Microsoft.UI.Windowing.IOverlappedPresenterStatics = Microsoft_UI_Windowing_IOverlappedPresenterStatics;


//@Interface("Microsoft.UI.Windowing.IOverlappedPresenterStatics2")
//@IID("{ED5C4F92-32F4-5D15-80D0-B2A5EFA04D39}")
class Microsoft_UI_Windowing_IOverlappedPresenterStatics2 : WinRtInterface 
{
    Microsoft_UI_Windowing_IOverlappedPresenterStatics2( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{ED5C4F92-32F4-5D15-80D0-B2A5EFA04D39}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenterState")
    get_RequestedStartupState()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }


}
Microsoft_UI_Windowing_IOverlappedPresenterStatics2.iid = "{ED5C4F92-32F4-5D15-80D0-B2A5EFA04D39}";
Microsoft.UI.Windowing.IOverlappedPresenterStatics2 = Microsoft_UI_Windowing_IOverlappedPresenterStatics2;


//@RuntimeClass("Microsoft.UI.Windowing.AppWindow")
//@Implements("Microsoft.UI.Windowing.IAppWindow","Microsoft.UI.Windowing.IAppWindow2","Microsoft.UI.Windowing.IAppWindow3")
//@DefaultInterface("Microsoft.UI.Windowing.IAppWindow")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_AppWindow : WinRtInterface
{
    Microsoft_UI_Windowing_AppWindow( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IAppWindow.iid );
    }

    // s Microsoft.UI.Windowing.IAppWindowStatics
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    static Create( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.AppWindow" );
        var iface = Microsoft.UI.Windowing.IAppWindowStatics( factory );
        var _r = iface.Create( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter")
    static CreateWithPresenter( appWindowPresenter)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.AppWindow" );
        var iface = Microsoft.UI.Windowing.IAppWindowStatics( factory );
        var _r = iface.CreateWithPresenter( appWindowPresenter);
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter","Microsoft.UI.WindowId")
    static CreateWithPresenterAndOwner( appWindowPresenter, ownerWindowId)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.AppWindow" );
        var iface = Microsoft.UI.Windowing.IAppWindowStatics( factory );
        var _r = iface.CreateWithPresenterAndOwner( appWindowPresenter, ownerWindowId);
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.WindowId")
    static GetFromWindowId( windowId)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.AppWindow" );
        var iface = Microsoft.UI.Windowing.IAppWindowStatics( factory );
        var _r = iface.GetFromWindowId( windowId);
        iface.release();
        factory.release();
        return _r;
    }


    // s Microsoft.UI.Windowing.IAppWindowStatics2
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.AppWindow")
    //@Parameters("Microsoft.UI.Windowing.AppWindowPresenter","Microsoft.UI.WindowId","Microsoft.UI.Dispatching.DispatcherQueue")
    static CreateWithDispatcherQueue( appWindowPresenter, ownerWindowId, DispatcherQueue)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.AppWindow" );
        var iface = Microsoft.UI.Windowing.IAppWindowStatics2( factory );
        var _r = iface.CreateWithDispatcherQueue( appWindowPresenter, ownerWindowId, DispatcherQueue);
        iface.release();
        factory.release();
        return _r;
    }


    static Create()
    {
        return Microsoft.UI.Windowing.AppWindow(
            winrt.activate("Microsoft.UI.Windowing.AppWindow")
        );
    }
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowClosingEventArgs>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowClosingEventArgs>")
    add_Closing(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.add_Closing( handler );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_IsShownInSwitchers()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_IsShownInSwitchers(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsShownInSwitchers(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.put_IsShownInSwitchers( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_IsVisible()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_IsVisible(  );
        iface.release();
        return _r;
    }

    //@Returns("Microsoft.UI.WindowId")
    get_OwnerWindowId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_OwnerWindowId(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Graphics.PointInt32")
    get_Position()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_Position(  );
        iface.release();
        return _r;
    }

    //@Returns("Microsoft.UI.Windowing.AppWindowPresenter")
    get_Presenter()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_Presenter(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Graphics.SizeInt32")
    get_Size()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_Size(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_Title()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_Title(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_Title(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.put_Title( value );
        iface.release();
    }

    //@Returns("Microsoft.UI.WindowId")
    get_Id()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_Id(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Destroy()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.Destroy(  );
        iface.release();
    }

    //@Returns("void")
    Hide()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.Hide(  );
        iface.release();
    }

    //@Parameters("Windows.Graphics.PointInt32")
    //@Returns("void")
    //@Parameters("Windows.Graphics.PointInt32")
    Move(position)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.Move( position );
        iface.release();
    }

    //@Parameters("Windows.Graphics.SizeInt32")
    //@Returns("void")
    //@Parameters("Windows.Graphics.SizeInt32")
    Resize(size)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.Resize( size );
        iface.release();
    }

    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowChangedEventArgs>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowChangedEventArgs>")
    add_Changed(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.add_Changed( handler );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Changed(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.remove_Changed( token );
        iface.release();
    }

    //@Returns("Microsoft.UI.Windowing.AppWindowTitleBar")
    get_TitleBar()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.get_TitleBar(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Closing(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.remove_Closing( token );
        iface.release();
    }

    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Object>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Object>")
    add_Destroying(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        var _r = iface.add_Destroying( handler );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Destroying(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow( this.comPtr );
        iface.remove_Destroying( token );
        iface.release();
    }

    //@Returns("Windows.Graphics.SizeInt32")
    get_ClientSize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow2( this.comPtr );
        var _r = iface.get_ClientSize(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    MoveInZOrderAtBottom()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow2( this.comPtr );
        iface.MoveInZOrderAtBottom(  );
        iface.release();
    }

    //@Returns("void")
    MoveInZOrderAtTop()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow2( this.comPtr );
        iface.MoveInZOrderAtTop(  );
        iface.release();
    }

    //@Parameters("Microsoft.UI.WindowId")
    //@Returns("void")
    //@Parameters("Microsoft.UI.WindowId")
    MoveInZOrderBelow(windowId)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow2( this.comPtr );
        iface.MoveInZOrderBelow( windowId );
        iface.release();
    }

    //@Parameters("Windows.Graphics.SizeInt32")
    //@Returns("void")
    //@Parameters("Windows.Graphics.SizeInt32")
    ResizeClient(size)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow2( this.comPtr );
        iface.ResizeClient( size );
        iface.release();
    }

    //@Returns("void")
    ShowOnceWithRequestedStartupState()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow2( this.comPtr );
        iface.ShowOnceWithRequestedStartupState(  );
        iface.release();
    }

    //@Parameters("Microsoft.UI.Dispatching.DispatcherQueue")
    //@Returns("void")
    //@Parameters("Microsoft.UI.Dispatching.DispatcherQueue")
    AssociateWithDispatcherQueue(dispatcherQueue)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow3( this.comPtr );
        iface.AssociateWithDispatcherQueue( dispatcherQueue );
        iface.release();
    }

    //@Returns("Microsoft.UI.Dispatching.DispatcherQueue")
    get_DispatcherQueue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindow3( this.comPtr );
        var _r = iface.get_DispatcherQueue(  );
        iface.release();
        return _r;
    }


}
Microsoft.UI.Windowing.AppWindow = Microsoft_UI_Windowing_AppWindow;

//@RuntimeClass("Microsoft.UI.Windowing.AppWindowChangedEventArgs")
//@Implements("Microsoft.UI.Windowing.IAppWindowChangedEventArgs","Microsoft.UI.Windowing.IAppWindowChangedEventArgs2")
//@DefaultInterface("Microsoft.UI.Windowing.IAppWindowChangedEventArgs")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_AppWindowChangedEventArgs : WinRtInterface
{
    Microsoft_UI_Windowing_AppWindowChangedEventArgs( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IAppWindowChangedEventArgs.iid );
    }

    static Create()
    {
        return Microsoft.UI.Windowing.AppWindowChangedEventArgs(
            winrt.activate("Microsoft.UI.Windowing.AppWindowChangedEventArgs")
        );
    }
    //@Returns("Boolean")
    get_DidPositionChange()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs( this.comPtr );
        var _r = iface.get_DidPositionChange(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_DidPresenterChange()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs( this.comPtr );
        var _r = iface.get_DidPresenterChange(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_DidSizeChange()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs( this.comPtr );
        var _r = iface.get_DidSizeChange(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_DidVisibilityChange()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs( this.comPtr );
        var _r = iface.get_DidVisibilityChange(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_DidZOrderChange()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs2( this.comPtr );
        var _r = iface.get_DidZOrderChange(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_IsZOrderAtBottom()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs2( this.comPtr );
        var _r = iface.get_IsZOrderAtBottom(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_IsZOrderAtTop()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs2( this.comPtr );
        var _r = iface.get_IsZOrderAtTop(  );
        iface.release();
        return _r;
    }

    //@Returns("Microsoft.UI.WindowId")
    get_ZOrderBelowWindowId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowChangedEventArgs2( this.comPtr );
        var _r = iface.get_ZOrderBelowWindowId(  );
        iface.release();
        return _r;
    }


}
Microsoft.UI.Windowing.AppWindowChangedEventArgs = Microsoft_UI_Windowing_AppWindowChangedEventArgs;

//@RuntimeClass("Microsoft.UI.Windowing.AppWindowClosingEventArgs")
//@Implements("Microsoft.UI.Windowing.IAppWindowClosingEventArgs")
//@DefaultInterface("Microsoft.UI.Windowing.IAppWindowClosingEventArgs")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_AppWindowClosingEventArgs : WinRtInterface
{
    Microsoft_UI_Windowing_AppWindowClosingEventArgs( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IAppWindowClosingEventArgs.iid );
    }

    static Create()
    {
        return Microsoft.UI.Windowing.AppWindowClosingEventArgs(
            winrt.activate("Microsoft.UI.Windowing.AppWindowClosingEventArgs")
        );
    }
    //@Returns("Boolean")
    get_Cancel()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowClosingEventArgs( this.comPtr );
        var _r = iface.get_Cancel(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_Cancel(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowClosingEventArgs( this.comPtr );
        iface.put_Cancel( value );
        iface.release();
    }


}
Microsoft.UI.Windowing.AppWindowClosingEventArgs = Microsoft_UI_Windowing_AppWindowClosingEventArgs;

//@RuntimeClass("Microsoft.UI.Windowing.AppWindowPresenter")
//@Implements("Microsoft.UI.Windowing.IAppWindowPresenter")
//@DefaultInterface("Microsoft.UI.Windowing.IAppWindowPresenter")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_AppWindowPresenter : WinRtInterface
{
    Microsoft_UI_Windowing_AppWindowPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IAppWindowPresenter.iid );
    }

    static Create()
    {
        return Microsoft.UI.Windowing.AppWindowPresenter(
            winrt.activate("Microsoft.UI.Windowing.AppWindowPresenter")
        );
    }
    //@Returns("Microsoft.UI.Windowing.AppWindowPresenterKind")
    get_Kind()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowPresenter( this.comPtr );
        var _r = iface.get_Kind(  );
        iface.release();
        return _r;
    }


}
Microsoft.UI.Windowing.AppWindowPresenter = Microsoft_UI_Windowing_AppWindowPresenter;

//@RuntimeClass("Microsoft.UI.Windowing.AppWindowTitleBar")
//@Implements("Microsoft.UI.Windowing.IAppWindowTitleBar","Microsoft.UI.Windowing.IAppWindowTitleBar2")
//@DefaultInterface("Microsoft.UI.Windowing.IAppWindowTitleBar")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_AppWindowTitleBar : WinRtInterface
{
    Microsoft_UI_Windowing_AppWindowTitleBar( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IAppWindowTitleBar.iid );
    }

    // s Microsoft.UI.Windowing.IAppWindowTitleBarStatics
    //@Async(0)
    //@Returns("Boolean")
    static IsCustomizationSupported( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.AppWindowTitleBar" );
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBarStatics( factory );
        var _r = iface.IsCustomizationSupported( );
        iface.release();
        factory.release();
        return _r;
    }


    static Create()
    {
        return Microsoft.UI.Windowing.AppWindowTitleBar(
            winrt.activate("Microsoft.UI.Windowing.AppWindowTitleBar")
        );
    }
    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonInactiveForegroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonInactiveForegroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_BackgroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_BackgroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonBackgroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonBackgroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonBackgroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonBackgroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonForegroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonForegroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonForegroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonForegroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonHoverBackgroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonHoverBackgroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonHoverBackgroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonHoverBackgroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonHoverForegroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonHoverForegroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonHoverForegroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonHoverForegroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonInactiveBackgroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonInactiveBackgroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonInactiveBackgroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonInactiveBackgroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonPressedBackgroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonPressedBackgroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonInactiveForegroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonInactiveForegroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_BackgroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_BackgroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonPressedBackgroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonPressedBackgroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ButtonPressedForegroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ButtonPressedForegroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ButtonPressedForegroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ButtonPressedForegroundColor( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_ExtendsContentIntoTitleBar()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ExtendsContentIntoTitleBar(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_ExtendsContentIntoTitleBar(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ExtendsContentIntoTitleBar( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_ForegroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_ForegroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_ForegroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_ForegroundColor( value );
        iface.release();
    }

    //@Returns("Int32")
    get_Height()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_Height(  );
        iface.release();
        return _r;
    }

    //@Returns("Microsoft.UI.Windowing.IconShowOptions")
    get_IconShowOptions()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_IconShowOptions(  );
        iface.release();
        return _r;
    }

    //@Parameters("Microsoft.UI.Windowing.IconShowOptions")
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.IconShowOptions")
    put_IconShowOptions(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_IconShowOptions( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_InactiveBackgroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_InactiveBackgroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_InactiveBackgroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_InactiveBackgroundColor( value );
        iface.release();
    }

    //@Returns("Windows.Foundation.IReference`1<Windows.UI.Color>")
    get_InactiveForegroundColor()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_InactiveForegroundColor(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    //@Returns("void")
    //@Parameters("Windows.Foundation.IReference`1<Windows.UI.Color>")
    put_InactiveForegroundColor(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.put_InactiveForegroundColor( value );
        iface.release();
    }

    //@Returns("Int32")
    get_LeftInset()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_LeftInset(  );
        iface.release();
        return _r;
    }

    //@Returns("Int32")
    get_RightInset()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        var _r = iface.get_RightInset(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    ResetToDefault()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar( this.comPtr );
        iface.ResetToDefault(  );
        iface.release();
    }

    //@Returns("Microsoft.UI.Windowing.TitleBarHeightOption")
    get_PreferredHeightOption()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar2( this.comPtr );
        var _r = iface.get_PreferredHeightOption(  );
        iface.release();
        return _r;
    }

    //@Parameters("Microsoft.UI.Windowing.TitleBarHeightOption")
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.TitleBarHeightOption")
    put_PreferredHeightOption(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IAppWindowTitleBar2( this.comPtr );
        iface.put_PreferredHeightOption( value );
        iface.release();
    }


}
Microsoft.UI.Windowing.AppWindowTitleBar = Microsoft_UI_Windowing_AppWindowTitleBar;

//@RuntimeClass("Microsoft.UI.Windowing.CompactOverlayPresenter")
//@Implements("Microsoft.UI.Windowing.ICompactOverlayPresenter")
//@DefaultInterface("Microsoft.UI.Windowing.ICompactOverlayPresenter")
@Proxy("WinRtProxy")
@Extends("Microsoft.UI.Windowing.AppWindowPresenter")
class Microsoft_UI_Windowing_CompactOverlayPresenter : WinRtInterface
{
    Microsoft_UI_Windowing_CompactOverlayPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.ICompactOverlayPresenter.iid );
    }

    // s Microsoft.UI.Windowing.ICompactOverlayPresenterStatics
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.CompactOverlayPresenter")
    static Create( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.CompactOverlayPresenter" );
        var iface = Microsoft.UI.Windowing.ICompactOverlayPresenterStatics( factory );
        var _r = iface.Create( );
        iface.release();
        factory.release();
        return _r;
    }


    static Create()
    {
        return Microsoft.UI.Windowing.CompactOverlayPresenter(
            winrt.activate("Microsoft.UI.Windowing.CompactOverlayPresenter")
        );
    }
    //@Parameters("Microsoft.UI.Windowing.CompactOverlaySize")
    //@Returns("void")
    //@Parameters("Microsoft.UI.Windowing.CompactOverlaySize")
    put_InitialSize(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.ICompactOverlayPresenter( this.comPtr );
        iface.put_InitialSize( value );
        iface.release();
    }

    //@Returns("Microsoft.UI.Windowing.CompactOverlaySize")
    get_InitialSize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.ICompactOverlayPresenter( this.comPtr );
        var _r = iface.get_InitialSize(  );
        iface.release();
        return _r;
    }


}
Microsoft.UI.Windowing.CompactOverlayPresenter = Microsoft_UI_Windowing_CompactOverlayPresenter;

//@RuntimeClass("Microsoft.UI.Windowing.DisplayArea")
//@Implements("Microsoft.UI.Windowing.IDisplayArea")
//@DefaultInterface("Microsoft.UI.Windowing.IDisplayArea")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_DisplayArea : WinRtInterface
{
    Microsoft_UI_Windowing_DisplayArea( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IDisplayArea.iid );
    }

    // s Microsoft.UI.Windowing.IDisplayAreaStatics
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    static get_Primary( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics( factory );
        var _r = iface.get_Primary( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayAreaWatcher")
    static CreateWatcher( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics( factory );
        var _r = iface.CreateWatcher( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Windowing.DisplayArea>")
    static FindAll( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics( factory );
        var _r = iface.FindAll( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Microsoft.UI.WindowId","Microsoft.UI.Windowing.DisplayAreaFallback")
    static GetFromWindowId( windowId, displayAreaFallback)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics( factory );
        var _r = iface.GetFromWindowId( windowId, displayAreaFallback);
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Windows.Graphics.PointInt32","Microsoft.UI.Windowing.DisplayAreaFallback")
    static GetFromPoint( point, displayAreaFallback)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics( factory );
        var _r = iface.GetFromPoint( point, displayAreaFallback);
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Windows.Graphics.RectInt32","Microsoft.UI.Windowing.DisplayAreaFallback")
    static GetFromRect( rect, displayAreaFallback)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics( factory );
        var _r = iface.GetFromRect( rect, displayAreaFallback);
        iface.release();
        factory.release();
        return _r;
    }


    // s Microsoft.UI.Windowing.IDisplayAreaStatics2
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.DisplayArea")
    //@Parameters("Microsoft.UI.DisplayId")
    static GetFromDisplayId( displayId)
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.DisplayArea" );
        var iface = Microsoft.UI.Windowing.IDisplayAreaStatics2( factory );
        var _r = iface.GetFromDisplayId( displayId);
        iface.release();
        factory.release();
        return _r;
    }


    static Create()
    {
        return Microsoft.UI.Windowing.DisplayArea(
            winrt.activate("Microsoft.UI.Windowing.DisplayArea")
        );
    }
    //@Returns("Boolean")
    get_IsPrimary()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayArea( this.comPtr );
        var _r = iface.get_IsPrimary(  );
        iface.release();
        return _r;
    }

    //@Returns("Microsoft.UI.DisplayId")
    get_DisplayId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayArea( this.comPtr );
        var _r = iface.get_DisplayId(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Graphics.RectInt32")
    get_OuterBounds()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayArea( this.comPtr );
        var _r = iface.get_OuterBounds(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Graphics.RectInt32")
    get_WorkArea()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayArea( this.comPtr );
        var _r = iface.get_WorkArea(  );
        iface.release();
        return _r;
    }


}
Microsoft.UI.Windowing.DisplayArea = Microsoft_UI_Windowing_DisplayArea;

//@RuntimeClass("Microsoft.UI.Windowing.DisplayAreaWatcher")
//@Implements("Microsoft.UI.Windowing.IDisplayAreaWatcher")
//@DefaultInterface("Microsoft.UI.Windowing.IDisplayAreaWatcher")
@Proxy("WinRtProxy")
class Microsoft_UI_Windowing_DisplayAreaWatcher : WinRtInterface
{
    Microsoft_UI_Windowing_DisplayAreaWatcher( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IDisplayAreaWatcher.iid );
    }

    static Create()
    {
        return Microsoft.UI.Windowing.DisplayAreaWatcher(
            winrt.activate("Microsoft.UI.Windowing.DisplayAreaWatcher")
        );
    }
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    add_Added(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        var _r = iface.add_Added( handler );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Start()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.Start(  );
        iface.release();
    }

    //@Returns("void")
    Stop()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.Stop(  );
        iface.release();
    }

    //@Returns("Microsoft.UI.Windowing.DisplayAreaWatcherStatus")
    get_Status()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        var _r = iface.get_Status(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Added(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.remove_Added( token );
        iface.release();
    }

    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
    add_EnumerationCompleted(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        var _r = iface.add_EnumerationCompleted( handler );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_EnumerationCompleted(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.remove_EnumerationCompleted( token );
        iface.release();
    }

    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    add_Removed(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        var _r = iface.add_Removed( handler );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Removed(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.remove_Removed( token );
        iface.release();
    }

    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
    add_Stopped(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        var _r = iface.add_Stopped( handler );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Stopped(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.remove_Stopped( token );
        iface.release();
    }

    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    //@Returns("Windows.Foundation.EventRegistrationToken")
    //@Parameters("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
    add_Updated(handler)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        var _r = iface.add_Updated( handler );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Foundation.EventRegistrationToken")
    //@Returns("void")
    //@Parameters("Windows.Foundation.EventRegistrationToken")
    remove_Updated(token)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IDisplayAreaWatcher( this.comPtr );
        iface.remove_Updated( token );
        iface.release();
    }


}
Microsoft.UI.Windowing.DisplayAreaWatcher = Microsoft_UI_Windowing_DisplayAreaWatcher;

//@RuntimeClass("Microsoft.UI.Windowing.FullScreenPresenter")
//@Implements("Microsoft.UI.Windowing.IFullScreenPresenter")
//@DefaultInterface("Microsoft.UI.Windowing.IFullScreenPresenter")
@Proxy("WinRtProxy")
@Extends("Microsoft.UI.Windowing.AppWindowPresenter")
class Microsoft_UI_Windowing_FullScreenPresenter : WinRtInterface
{
    Microsoft_UI_Windowing_FullScreenPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IFullScreenPresenter.iid );
    }

    // s Microsoft.UI.Windowing.IFullScreenPresenterStatics
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.FullScreenPresenter")
    static Create( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.FullScreenPresenter" );
        var iface = Microsoft.UI.Windowing.IFullScreenPresenterStatics( factory );
        var _r = iface.Create( );
        iface.release();
        factory.release();
        return _r;
    }


    static Create()
    {
        return Microsoft.UI.Windowing.FullScreenPresenter(
            winrt.activate("Microsoft.UI.Windowing.FullScreenPresenter")
        );
    }

}
Microsoft.UI.Windowing.FullScreenPresenter = Microsoft_UI_Windowing_FullScreenPresenter;

//@RuntimeClass("Microsoft.UI.Windowing.OverlappedPresenter")
//@Implements("Microsoft.UI.Windowing.IOverlappedPresenter","Microsoft.UI.Windowing.IOverlappedPresenter2")
//@DefaultInterface("Microsoft.UI.Windowing.IOverlappedPresenter")
@Proxy("WinRtProxy")
@Extends("Microsoft.UI.Windowing.AppWindowPresenter")
class Microsoft_UI_Windowing_OverlappedPresenter : WinRtInterface
{
    Microsoft_UI_Windowing_OverlappedPresenter( comPtr )
    {
        var Microsoft = runtime.global("Microsoft");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Microsoft.UI.Windowing.IOverlappedPresenter.iid );
    }

    // s Microsoft.UI.Windowing.IOverlappedPresenterStatics2
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenterState")
    static get_RequestedStartupState( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.OverlappedPresenter" );
        var iface = Microsoft.UI.Windowing.IOverlappedPresenterStatics2( factory );
        var _r = iface.get_RequestedStartupState( );
        iface.release();
        factory.release();
        return _r;
    }


    // s Microsoft.UI.Windowing.IOverlappedPresenterStatics
    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    static Create( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.OverlappedPresenter" );
        var iface = Microsoft.UI.Windowing.IOverlappedPresenterStatics( factory );
        var _r = iface.Create( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    static CreateForContextMenu( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.OverlappedPresenter" );
        var iface = Microsoft.UI.Windowing.IOverlappedPresenterStatics( factory );
        var _r = iface.CreateForContextMenu( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    static CreateForDialog( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.OverlappedPresenter" );
        var iface = Microsoft.UI.Windowing.IOverlappedPresenterStatics( factory );
        var _r = iface.CreateForDialog( );
        iface.release();
        factory.release();
        return _r;
    }


    //@Async(0)
    //@Returns("Microsoft.UI.Windowing.OverlappedPresenter")
    static CreateForToolWindow( )
    {
        var Microsoft = runtime.global("Microsoft");
        var factory = winrt.activationFactory( "Microsoft.UI.Windowing.OverlappedPresenter" );
        var iface = Microsoft.UI.Windowing.IOverlappedPresenterStatics( factory );
        var _r = iface.CreateForToolWindow( );
        iface.release();
        factory.release();
        return _r;
    }


    static Create()
    {
        return Microsoft.UI.Windowing.OverlappedPresenter(
            winrt.activate("Microsoft.UI.Windowing.OverlappedPresenter")
        );
    }
    //@Returns("void")
    Restore()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.Restore(  );
        iface.release();
    }

    //@Returns("Boolean")
    get_HasTitleBar()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_HasTitleBar(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_IsAlwaysOnTop()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_IsAlwaysOnTop(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsAlwaysOnTop(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.put_IsAlwaysOnTop( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_IsMaximizable()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_IsMaximizable(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsMaximizable(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.put_IsMaximizable( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_IsMinimizable()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_IsMinimizable(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsMinimizable(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.put_IsMinimizable( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_IsModal()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_IsModal(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsModal(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.put_IsModal( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_IsResizable()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_IsResizable(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_IsResizable(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.put_IsResizable( value );
        iface.release();
    }

    //@Returns("Microsoft.UI.Windowing.OverlappedPresenterState")
    get_State()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_State(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Maximize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.Maximize(  );
        iface.release();
    }

    //@Returns("void")
    Minimize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.Minimize(  );
        iface.release();
    }

    //@Returns("Boolean")
    get_HasBorder()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        var _r = iface.get_HasBorder(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean", "Boolean")
    //@Returns("void")
    //@Parameters("Boolean","Boolean")
    SetBorderAndTitleBar(hasBorder,hasTitleBar)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.SetBorderAndTitleBar( hasBorder, hasTitleBar );
        iface.release();
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    MinimizeWithActivation(activateWindow)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.MinimizeWithActivation( activateWindow );
        iface.release();
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    RestoreWithActivation(activateWindow)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Microsoft = runtime.global("Microsoft");
        var iface = Microsoft.UI.Windowing.IOverlappedPresenter( this.comPtr );
        iface.RestoreWithActivation( activateWindow );
        iface.release();
    }


}
Microsoft.UI.Windowing.OverlappedPresenter = Microsoft_UI_Windowing_OverlappedPresenter;

if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Interface("Windows.Foundation.IReference`1<Windows.UI.Color>")
//@IID("{AB8E5D11-B0C1-5A21-95AE-F16BF3A37624}")
class Windows_Foundation_IReference_1_Windows_UI_Color_ : WinRtInterface 
{
    Windows_Foundation_IReference_1_Windows_UI_Color_( comPtr )
    {
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{AB8E5D11-B0C1-5A21-95AE-F16BF3A37624}");
    }

    //@VtableIndex(6)
    //@Returns("T0")
    get_Value()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke(6, "Windows.UI.Color", [], [] );
        return _r;
    }


}
Windows_Foundation_IReference_1_Windows_UI_Color_.iid = "{AB8E5D11-B0C1-5A21-95AE-F16BF3A37624}";
Windows.Foundation.IReference_1_Windows_UI_Color_ = Windows_Foundation_IReference_1_Windows_UI_Color_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
if ( Windows.Foundation.Collections == nil ) { Windows.Foundation.Collections = {}; }
//@Interface("Windows.Foundation.Collections.IVectorView`1<Microsoft.UI.Windowing.DisplayArea>")
//@IID("{63490E13-D075-5FE2-B6A4-86A44095215F}")
class Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Windowing_DisplayArea_ : WinRtInterface 
{
    Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Windowing_DisplayArea_( comPtr )
    {
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{63490E13-D075-5FE2-B6A4-86A44095215F}");
    }

    //@VtableIndex(6)
    //@Returns("T0")
    //@Parameters("UInt32")
    GetAt(index)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = index;
        var _r = Microsoft.UI.Windowing.DisplayArea(
            this.comPtr.invoke(6, "Microsoft.UI.Windowing.DisplayArea", ["UInt32"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Returns("UInt32")
    get_Size()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke(7, "UInt32", [], [] );
        return _r;
    }


}
Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Windowing_DisplayArea_.iid = "{63490E13-D075-5FE2-B6A4-86A44095215F}";
Windows.Foundation.Collections.IVectorView_1_Microsoft_UI_Windowing_DisplayArea_ = Windows_Foundation_Collections_IVectorView_1_Microsoft_UI_Windowing_DisplayArea_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Delegate("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Object>")
//@IID("{2DDB3359-9837-5BA8-803E-EB5AB1CCB67F}")
class Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Object_{
    static Create( cb ) 
    {
        var callback = cb;
        return winrt.Delegate(["Microsoft.UI.Windowing.DisplayAreaWatcher", "Object"], "{2DDB3359-9837-5BA8-803E-EB5AB1CCB67F}", callback );
    }
}
Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Object_.iid = "{2DDB3359-9837-5BA8-803E-EB5AB1CCB67F}";
Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Object_ = Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Object_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Delegate("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.DisplayAreaWatcher,Microsoft.UI.Windowing.DisplayArea>")
//@IID("{1AB60859-CAAF-5B34-BAB0-3D9035EB80CB}")
class Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_{
    static Create( cb ) 
    {
        var callback = fun( s, arg ) {
            cb( s, Microsoft.UI.Windowing.DisplayArea(arg) );
        };
        return winrt.Delegate(["Microsoft.UI.Windowing.DisplayAreaWatcher", "Microsoft.UI.Windowing.DisplayArea"], "{1AB60859-CAAF-5B34-BAB0-3D9035EB80CB}", callback );
    }
}
Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_.iid = "{1AB60859-CAAF-5B34-BAB0-3D9035EB80CB}";
Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_ = Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_DisplayAreaWatcher_Microsoft_UI_Windowing_DisplayArea_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Delegate("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Object>")
//@IID("{EDDD665F-7D53-5B2D-901D-9C12010816E7}")
class Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Object_{
    static Create( cb ) 
    {
        var callback = cb;
        return winrt.Delegate(["Microsoft.UI.Windowing.AppWindow", "Object"], "{EDDD665F-7D53-5B2D-901D-9C12010816E7}", callback );
    }
}
Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Object_.iid = "{EDDD665F-7D53-5B2D-901D-9C12010816E7}";
Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Object_ = Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Object_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Delegate("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowClosingEventArgs>")
//@IID("{FD0E72C8-8DAA-50A2-959F-4D41446F1FC7}")
class Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowClosingEventArgs_{
    static Create( cb ) 
    {
        var callback = fun( s, arg ) {
            cb( s, Microsoft.UI.Windowing.AppWindowClosingEventArgs(arg) );
        };
        return winrt.Delegate(["Microsoft.UI.Windowing.AppWindow", "Microsoft.UI.Windowing.AppWindowClosingEventArgs"], "{FD0E72C8-8DAA-50A2-959F-4D41446F1FC7}", callback );
    }
}
Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowClosingEventArgs_.iid = "{FD0E72C8-8DAA-50A2-959F-4D41446F1FC7}";
Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowClosingEventArgs_ = Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowClosingEventArgs_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Delegate("Windows.Foundation.TypedEventHandler`2<Microsoft.UI.Windowing.AppWindow,Microsoft.UI.Windowing.AppWindowChangedEventArgs>")
//@IID("{CDA07756-1584-5049-9AD1-CCA782242D34}")
class Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowChangedEventArgs_{
    static Create( cb ) 
    {
        var callback = fun( s, arg ) {
            cb( s, Microsoft.UI.Windowing.AppWindowChangedEventArgs(arg) );
        };
        return winrt.Delegate(["Microsoft.UI.Windowing.AppWindow", "Microsoft.UI.Windowing.AppWindowChangedEventArgs"], "{CDA07756-1584-5049-9AD1-CCA782242D34}", callback );
    }
}
Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowChangedEventArgs_.iid = "{CDA07756-1584-5049-9AD1-CCA782242D34}";
Windows.Foundation.TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowChangedEventArgs_ = Windows_Foundation_TypedEventHandler_2_Microsoft_UI_Windowing_AppWindow_Microsoft_UI_Windowing_AppWindowChangedEventArgs_;



}
