import("win32/base");
import("win32/lib");
import("win32/gdi");
import("win32/user");
import("win32/ctrl");
import("win32/dlg");
import("win32/sysinfo");

import("promise");

import("rt/Windows.Foundation");
import("rt/Windows.Foundation.Collections");
import("rt/Windows.Graphics");
import("rt/Windows.Storage");
import("rt/Windows.Storage.Streams");
import("rt/Windows.Storage.Pickers");

import("rt/Microsoft.UI");
import("rt/Microsoft.UI.Content");
import("rt/Microsoft.UI.Dispatching");
import("rt/Microsoft.UI.Windowing");
import("rt/Microsoft.UI.Xaml");
import("rt/Microsoft.UI.Xaml.Hosting");
import("rt/Microsoft.UI.Xaml.Markup");
import("rt/Microsoft.UI.Xaml.Interop");
import("rt/Microsoft.UI.Xaml.Data");
import("rt/Microsoft.UI.Xaml.Input");
import("rt/Microsoft.UI.Xaml.Controls");
import("rt/Microsoft.UI.Xaml.Controls.Primitives");

import("rt/moxaml");

import("winrt");
import("windows2");
import("xam2l");


//Win32.MessageBoxA(0,"hu","ha",0);


var ID_FILE_EXIT  = 1001;
var ID_FILE_OPEN  = 1002;
var ID_EDIT       = 5001;

var content_xaml = "

<Page Name='thePage' xmlns='http://schemas.microsoft.com/winfx/2006/xaml/presentation' 
    xmlns:x='http://schemas.microsoft.com/winfx/2006/xaml'>
    <Grid Name='theGrid'>
     <Image Name='theImage' Source='https://littlemole.neocities.org/uioo.jpg' />
    </Grid>
</Page>
";



var my_xaml = io.slurp("test3.xaml");


class MyWindow : Window 
{
    MyWindow()
    {
	this.hIcon = Win32.LoadImageW(
	    0,
	    wstring(io.dirname(io.self()) + "\\mole.ico"),
	    Win32.GDI_IMAGE_TYPE.IMAGE_ICON,
	    0,0,
	    Win32.IMAGE_FLAGS.LR_DEFAULTSIZE | Win32.IMAGE_FLAGS.LR_LOADFROMFILE
	);

        super.Window();

        this.menu = [
            [ "File",  
                [ "Open", ID_FILE_OPEN ],
                [ "Exit", ID_FILE_EXIT ]
            ]
        ];

        this.dataContext = DataContext( 
        {
            "name"      : "THE STRING"
        });

    }

    theButt_Click( sender, args )
    {
    	print "CLICK THE BUTT!";
	var value = this.dataContext.fetch("name");
	print value;
	this.dataContext.put( "name", "little" );	
    }

    @Xaml(Element=MenuGo)//,Event=Click)
    menuGo() {
	print "GO";

	var root = Microsoft.UI.Xaml.FrameworkElement( this.xaml.root() );
	var i = root.FindName("MenuGo");
        print i + " " + int(i);
	var mfi = Microsoft.UI.Xaml.Controls.MenuFlyoutItem(i);
	print mfi.Text;
    }
        
    @msg(WM_CREATE)
    onCreate(wParam,lParam)
    {

	this.xaml = XamlWindow( this, my_xaml );
//	Xaml.expand(this.hwnd,100);

	var menuOpen = this.xaml.find("OpenGo");

	menuOpen.add_Click( fun(src,args) {
		print "OPEN";

		this.xaml.FileOpenPicker(
            	    { 
                        "FileTypeFilter" : [ "*" ],
            	    }
        	)
        	.then( fun(file) 
            	{
                    if( file.valid()  )
                    {
			print file.Path;
			print file.FileType;

		        var content = io.slurp(file.Path);

			this.xaml.load(content);

		    }
                });
	});

	var menuSave = this.xaml.find("SaveGo");
	menuSave.add_Click( fun(src,args) {
		print "Save";

		this.xaml.FileSavePicker(
            	    { 
//	                "FileName" : "C:\\Users\\mike\\Documents\\newDoc.txt",
        	        "FileTypeChoices" : { "file" : [ ".txt" ] }
            	    }
        	)
        	.then( fun(file) 
            	{
                    if( file.valid()  )
                    {
			print file.Path;
			print file.FileType;
		    }
                });
	});

	var menuFolder = this.xaml.find("FolderGo");
	menuFolder.add_Click( fun(src,args) {
		print "Folder";

		this.xaml.FolderPicker()
        	.then( fun(folder) 
            	{
		    print folder.Path;
                });
	});

	var menuDlg = this.xaml.find("DialogGo");
	menuDlg.add_Click( fun(src,args) {
		print "Dialog";

		this.xaml.ContentDialog(
		    {
	                "Title" : "Dialog",
            		"CloseButtonText" : "Cancel",
            		"PrimaryButtonText" : "OK",
            		//"Content" : "Hello There!",
			"Xaml" : content_xaml

		    }
        	)
        	.then( fun(result) 
            	{
		    print result;
                });
	});

        return 0;
    }


    @cmd(ID_FILE_OPEN)
    onOpen(wParam,lParam)
    {
        var dlg = FileDialog(this.hwnd);
        var fn = dlg.open();

        if(!fn) return;

        var content = io.slurp(fn);

	this.xaml.load(this.hwnd,content);

    }

    @cmd(ID_FILE_EXIT)
    onExit(wParam,lParam)
    {
        Win32.DestroyWindow(this.hwnd);
        return 0;
    }

    @msg(WM_DESTROY)
    onDestroy(wParam,lParam)
    {
        Win32.PostQuitMessage(0);
        return 0;
    }

    @msg(WM_SIZE)
    onSize(wParam,lParam)
    {
	var width = LOWORD(int(lParam));
        var height = HIWORD(int(lParam));

	if(this.xaml)
	    this.xaml.size(0,0,width,height);

	return 0;
    }

}


var wnd = MyWindow();
wnd.create( "xaml it while you can!");
wnd.show(Win32.SHOW_WINDOW_CMD.SW_SHOW);

Xaml.run();

print "OK";
