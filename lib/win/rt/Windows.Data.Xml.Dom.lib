{
class WinRtInterface { 
    queryInterface(iid) { return this.comPtr.queryInterface(iid); }
    release() { this.comPtr.release(); this.comPtr = nil; }
    valid() { return this.comPtr != nil && int(this.comPtr) != 0; }
}

if( runtime.global("Windows") == nil ) { runtime.global("Windows", {}); }
var Windows = runtime.global("Windows");
if ( Windows.Data == nil ) { Windows.Data = {}; }
if ( Windows.Data.Xml == nil ) { Windows.Data.Xml = {}; }
if ( Windows.Data.Xml.Dom == nil ) { Windows.Data.Xml.Dom = {}; }

Windows.Data.Xml.Dom.NodeType = {
    "Invalid" : 0, 
    "ElementNode" : 1, 
    "AttributeNode" : 2, 
    "TextNode" : 3, 
    "DataSectionNode" : 4, 
    "EntityReferenceNode" : 5, 
    "EntityNode" : 6, 
    "ProcessingInstructionNode" : 7, 
    "CommentNode" : 8, 
    "DocumentNode" : 9, 
    "DocumentTypeNode" : 10, 
    "DocumentFragmentNode" : 11, 
    "NotationNode" : 12
};

//@Interface("Windows.Data.Xml.Dom.IDtdEntity")
//@IID("{6A0B5FFC-63B4-480F-9E6A-8A92816AADE4}")
class Windows_Data_Xml_Dom_IDtdEntity : WinRtInterface 
{
    Windows_Data_Xml_Dom_IDtdEntity( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{6A0B5FFC-63B4-480F-9E6A-8A92816AADE4}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Object")
    get_PublicId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Object")
    get_SystemId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 7, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Object")
    get_NotationName()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 8, "Object", [], [] );
        return _r;
    }


}
Windows_Data_Xml_Dom_IDtdEntity.iid = "{6A0B5FFC-63B4-480F-9E6A-8A92816AADE4}";
Windows.Data.Xml.Dom.IDtdEntity = Windows_Data_Xml_Dom_IDtdEntity;


//@Interface("Windows.Data.Xml.Dom.IDtdNotation")
//@IID("{8CB4E04D-6D46-4EDB-AB73-DF83C51AD397}")
class Windows_Data_Xml_Dom_IDtdNotation : WinRtInterface 
{
    Windows_Data_Xml_Dom_IDtdNotation( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{8CB4E04D-6D46-4EDB-AB73-DF83C51AD397}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Object")
    get_PublicId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Object")
    get_SystemId()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 7, "Object", [], [] );
        return _r;
    }


}
Windows_Data_Xml_Dom_IDtdNotation.iid = "{8CB4E04D-6D46-4EDB-AB73-DF83C51AD397}";
Windows.Data.Xml.Dom.IDtdNotation = Windows_Data_Xml_Dom_IDtdNotation;


//@Interface("Windows.Data.Xml.Dom.IXmlAttribute")
//@IID("{AC144AA4-B4F1-4DB6-B206-8A22C308DB0A}")
class Windows_Data_Xml_Dom_IXmlAttribute : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlAttribute( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{AC144AA4-B4F1-4DB6-B206-8A22C308DB0A}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("String")
    get_Name()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "String", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Boolean")
    get_Specified()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("String")
    get_Value()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 8, "String", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    put_Value(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 9, "void", ["String"], [p1] );
    }


}
Windows_Data_Xml_Dom_IXmlAttribute.iid = "{AC144AA4-B4F1-4DB6-B206-8A22C308DB0A}";
Windows.Data.Xml.Dom.IXmlAttribute = Windows_Data_Xml_Dom_IXmlAttribute;


//@Interface("Windows.Data.Xml.Dom.IXmlCDataSection")
//@IID("{4D04B46F-C8BD-45B4-8899-0400D7C2C60F}")
class Windows_Data_Xml_Dom_IXmlCDataSection : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlCDataSection( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{4D04B46F-C8BD-45B4-8899-0400D7C2C60F}");
    }


}
Windows_Data_Xml_Dom_IXmlCDataSection.iid = "{4D04B46F-C8BD-45B4-8899-0400D7C2C60F}";
Windows.Data.Xml.Dom.IXmlCDataSection = Windows_Data_Xml_Dom_IXmlCDataSection;


//@Interface("Windows.Data.Xml.Dom.IXmlCharacterData")
//@IID("{132E42AB-4E36-4DF6-B1C8-0CE62FD88B26}")
class Windows_Data_Xml_Dom_IXmlCharacterData : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlCharacterData( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{132E42AB-4E36-4DF6-B1C8-0CE62FD88B26}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("String")
    get_Data()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "String", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    put_Data(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 7, "void", ["String"], [p1] );
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("UInt32")
    get_Length()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 8, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("String")
    //@Parameters("UInt32","UInt32")
    SubstringData(offset,count)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = offset;
        var p2 = count;
        var _r = this.comPtr.invoke( 9, "String", ["UInt32", "UInt32"], [p1, p2] );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    AppendData(data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = data;
        this.comPtr.invoke( 10, "void", ["String"], [p1] );
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("void")
    //@Parameters("UInt32","String")
    InsertData(offset,data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = offset;
        var p2 = data;
        this.comPtr.invoke( 11, "void", ["UInt32", "String"], [p1, p2] );
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("void")
    //@Parameters("UInt32","UInt32")
    DeleteData(offset,count)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = offset;
        var p2 = count;
        this.comPtr.invoke( 12, "void", ["UInt32", "UInt32"], [p1, p2] );
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("void")
    //@Parameters("UInt32","UInt32","String")
    ReplaceData(offset,count,data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = offset;
        var p2 = count;
        var p3 = data;
        this.comPtr.invoke( 13, "void", ["UInt32", "UInt32", "String"], [p1, p2, p3] );
    }


}
Windows_Data_Xml_Dom_IXmlCharacterData.iid = "{132E42AB-4E36-4DF6-B1C8-0CE62FD88B26}";
Windows.Data.Xml.Dom.IXmlCharacterData = Windows_Data_Xml_Dom_IXmlCharacterData;


//@Interface("Windows.Data.Xml.Dom.IXmlComment")
//@IID("{BCA474D5-B61F-4611-9CAC-2E92E3476D47}")
class Windows_Data_Xml_Dom_IXmlComment : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlComment( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{BCA474D5-B61F-4611-9CAC-2E92E3476D47}");
    }


}
Windows_Data_Xml_Dom_IXmlComment.iid = "{BCA474D5-B61F-4611-9CAC-2E92E3476D47}";
Windows.Data.Xml.Dom.IXmlComment = Windows_Data_Xml_Dom_IXmlComment;


//@Interface("Windows.Data.Xml.Dom.IXmlDocument")
//@IID("{F7F3A506-1E87-42D6-BCFB-B8C809FA5494}")
class Windows_Data_Xml_Dom_IXmlDocument : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDocument( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{F7F3A506-1E87-42D6-BCFB-B8C809FA5494}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlDocumentType")
    get_Doctype()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlDocumentType(
            this.comPtr.invoke( 6, "Windows.Data.Xml.Dom.XmlDocumentType", [], [] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlDomImplementation")
    get_Implementation()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlDomImplementation(
            this.comPtr.invoke( 7, "Windows.Data.Xml.Dom.XmlDomImplementation", [], [] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    get_DocumentElement()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlElement(
            this.comPtr.invoke( 8, "Windows.Data.Xml.Dom.XmlElement", [], [] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    //@Parameters("String")
    CreateElement(tagName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = tagName;
        var _r = Windows.Data.Xml.Dom.XmlElement(
            this.comPtr.invoke( 9, "Windows.Data.Xml.Dom.XmlElement", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlDocumentFragment")
    CreateDocumentFragment()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlDocumentFragment(
            this.comPtr.invoke( 10, "Windows.Data.Xml.Dom.XmlDocumentFragment", [], [] )
        );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlText")
    //@Parameters("String")
    CreateTextNode(data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = data;
        var _r = Windows.Data.Xml.Dom.XmlText(
            this.comPtr.invoke( 11, "Windows.Data.Xml.Dom.XmlText", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlComment")
    //@Parameters("String")
    CreateComment(data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = data;
        var _r = Windows.Data.Xml.Dom.XmlComment(
            this.comPtr.invoke( 12, "Windows.Data.Xml.Dom.XmlComment", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlProcessingInstruction")
    //@Parameters("String","String")
    CreateProcessingInstruction(target,data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = target;
        var p2 = data;
        var _r = Windows.Data.Xml.Dom.XmlProcessingInstruction(
            this.comPtr.invoke( 13, "Windows.Data.Xml.Dom.XmlProcessingInstruction", ["String", "String"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("String")
    CreateAttribute(name)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = name;
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 14, "Windows.Data.Xml.Dom.XmlAttribute", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlEntityReference")
    //@Parameters("String")
    CreateEntityReference(name)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = name;
        var _r = Windows.Data.Xml.Dom.XmlEntityReference(
            this.comPtr.invoke( 15, "Windows.Data.Xml.Dom.XmlEntityReference", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    GetElementsByTagName(tagName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = tagName;
        var _r = Windows.Data.Xml.Dom.XmlNodeList(
            this.comPtr.invoke( 16, "Windows.Data.Xml.Dom.XmlNodeList", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlCDataSection")
    //@Parameters("String")
    CreateCDataSection(data)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = data;
        var _r = Windows.Data.Xml.Dom.XmlCDataSection(
            this.comPtr.invoke( 17, "Windows.Data.Xml.Dom.XmlCDataSection", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("String")
    get_DocumentUri()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 18, "String", [], [] );
        return _r;
    }

    //@VtableIndex(19)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Object","String")
    CreateAttributeNS(namespaceUri,qualifiedName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = qualifiedName;
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 19, "Windows.Data.Xml.Dom.XmlAttribute", ["Object", "String"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(20)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    //@Parameters("Object","String")
    CreateElementNS(namespaceUri,qualifiedName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = qualifiedName;
        var _r = Windows.Data.Xml.Dom.XmlElement(
            this.comPtr.invoke( 20, "Windows.Data.Xml.Dom.XmlElement", ["Object", "String"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(21)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    //@Parameters("String")
    GetElementById(elementId)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = elementId;
        var _r = Windows.Data.Xml.Dom.XmlElement(
            this.comPtr.invoke( 21, "Windows.Data.Xml.Dom.XmlElement", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(22)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Boolean")
    ImportNode(node,deep)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( node); 
        var p2 = deep;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 22, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode", "Boolean"], [p1, p2] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlDocument.iid = "{F7F3A506-1E87-42D6-BCFB-B8C809FA5494}";
Windows.Data.Xml.Dom.IXmlDocument = Windows_Data_Xml_Dom_IXmlDocument;


//@Interface("Windows.Data.Xml.Dom.IXmlDocumentFragment")
//@IID("{E2EA6A96-0C21-44A5-8BC9-9E4A262708EC}")
class Windows_Data_Xml_Dom_IXmlDocumentFragment : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDocumentFragment( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{E2EA6A96-0C21-44A5-8BC9-9E4A262708EC}");
    }


}
Windows_Data_Xml_Dom_IXmlDocumentFragment.iid = "{E2EA6A96-0C21-44A5-8BC9-9E4A262708EC}";
Windows.Data.Xml.Dom.IXmlDocumentFragment = Windows_Data_Xml_Dom_IXmlDocumentFragment;


//@Interface("Windows.Data.Xml.Dom.IXmlDocumentIO")
//@IID("{6CD0E74E-EE65-4489-9EBF-CA43E87BA637}")
class Windows_Data_Xml_Dom_IXmlDocumentIO : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDocumentIO( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{6CD0E74E-EE65-4489-9EBF-CA43E87BA637}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    LoadXml(xml)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = xml;
        this.comPtr.invoke( 6, "void", ["String"], [p1] );
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String","Windows.Data.Xml.Dom.XmlLoadSettings")
    LoadXmlWithSettings(xml,loadSettings)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = xml;
        var p2 = Windows.Data.Xml.Dom.XmlLoadSettings( loadSettings); 
        this.comPtr.invoke( 7, "void", ["String", "Windows.Data.Xml.Dom.XmlLoadSettings"], [p1, p2] );
    }

    //@VtableIndex(8)
    //@Async(1)
    //@Returns("Windows.Foundation.IAsyncAction")
    //@Parameters("Windows.Storage.IStorageFile")
    SaveToFileAsync(file,cb)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Storage.IStorageFile( file); 
        this.comPtr.asyncAction( 8, "Windows.Foundation.IAsyncAction", Windows.Foundation.IAsyncAction.handler_iid, ["Windows.Storage.IStorageFile"], [p1] , cb );
    }


}
Windows_Data_Xml_Dom_IXmlDocumentIO.iid = "{6CD0E74E-EE65-4489-9EBF-CA43E87BA637}";
Windows.Data.Xml.Dom.IXmlDocumentIO = Windows_Data_Xml_Dom_IXmlDocumentIO;


//@Interface("Windows.Data.Xml.Dom.IXmlDocumentIO2")
//@IID("{5D034661-7BD8-4AD5-9EBF-81E6347263B1}")
class Windows_Data_Xml_Dom_IXmlDocumentIO2 : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDocumentIO2( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{5D034661-7BD8-4AD5-9EBF-81E6347263B1}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Storage.Streams.IBuffer")
    LoadXmlFromBuffer(buffer)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Storage.Streams.IBuffer( buffer); 
        this.comPtr.invoke( 6, "void", ["Windows.Storage.Streams.IBuffer"], [p1] );
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Windows.Storage.Streams.IBuffer","Windows.Data.Xml.Dom.XmlLoadSettings")
    LoadXmlFromBufferWithSettings(buffer,loadSettings)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Storage.Streams.IBuffer( buffer); 
        var p2 = Windows.Data.Xml.Dom.XmlLoadSettings( loadSettings); 
        this.comPtr.invoke( 7, "void", ["Windows.Storage.Streams.IBuffer", "Windows.Data.Xml.Dom.XmlLoadSettings"], [p1, p2] );
    }


}
Windows_Data_Xml_Dom_IXmlDocumentIO2.iid = "{5D034661-7BD8-4AD5-9EBF-81E6347263B1}";
Windows.Data.Xml.Dom.IXmlDocumentIO2 = Windows_Data_Xml_Dom_IXmlDocumentIO2;


//@Interface("Windows.Data.Xml.Dom.IXmlDocumentStatics")
//@IID("{5543D254-D757-4B79-9539-232B18F50BF1}")
class Windows_Data_Xml_Dom_IXmlDocumentStatics : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDocumentStatics( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{5543D254-D757-4B79-9539-232B18F50BF1}");
    }

    //@VtableIndex(6)
    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Foundation.Uri")
    LoadFromUriAsync(uri,cb)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Foundation.Uri( uri); 
        this.comPtr.asyncOperation( 6, "Windows.Data.Xml.Dom.XmlDocument", Windows.Foundation.IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_.handler_iid, ["Windows.Foundation.Uri"], [p1] , fun(status,value) { if(status == Windows.Foundation.AsyncStatus.Completed ) {cb(status, Windows.Data.Xml.Dom.XmlDocument(value)); } else { cb( status, value ); } } );
    }

    //@VtableIndex(7)
    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Foundation.Uri","Windows.Data.Xml.Dom.XmlLoadSettings")
    LoadFromUriWithSettingsAsync(uri,loadSettings,cb)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Foundation.Uri( uri); 
        var p2 = Windows.Data.Xml.Dom.XmlLoadSettings( loadSettings); 
        this.comPtr.asyncOperation( 7, "Windows.Data.Xml.Dom.XmlDocument", Windows.Foundation.IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_.handler_iid, ["Windows.Foundation.Uri", "Windows.Data.Xml.Dom.XmlLoadSettings"], [p1, p2] , fun(status,value) { if(status == Windows.Foundation.AsyncStatus.Completed ) {cb(status, Windows.Data.Xml.Dom.XmlDocument(value)); } else { cb( status, value ); } } );
    }

    //@VtableIndex(8)
    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Storage.IStorageFile")
    LoadFromFileAsync(file,cb)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Storage.IStorageFile( file); 
        this.comPtr.asyncOperation( 8, "Windows.Data.Xml.Dom.XmlDocument", Windows.Foundation.IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_.handler_iid, ["Windows.Storage.IStorageFile"], [p1] , fun(status,value) { if(status == Windows.Foundation.AsyncStatus.Completed ) {cb(status, Windows.Data.Xml.Dom.XmlDocument(value)); } else { cb( status, value ); } } );
    }

    //@VtableIndex(9)
    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Storage.IStorageFile","Windows.Data.Xml.Dom.XmlLoadSettings")
    LoadFromFileWithSettingsAsync(file,loadSettings,cb)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Storage.IStorageFile( file); 
        var p2 = Windows.Data.Xml.Dom.XmlLoadSettings( loadSettings); 
        this.comPtr.asyncOperation( 9, "Windows.Data.Xml.Dom.XmlDocument", Windows.Foundation.IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_.handler_iid, ["Windows.Storage.IStorageFile", "Windows.Data.Xml.Dom.XmlLoadSettings"], [p1, p2] , fun(status,value) { if(status == Windows.Foundation.AsyncStatus.Completed ) {cb(status, Windows.Data.Xml.Dom.XmlDocument(value)); } else { cb( status, value ); } } );
    }


}
Windows_Data_Xml_Dom_IXmlDocumentStatics.iid = "{5543D254-D757-4B79-9539-232B18F50BF1}";
Windows.Data.Xml.Dom.IXmlDocumentStatics = Windows_Data_Xml_Dom_IXmlDocumentStatics;


//@Interface("Windows.Data.Xml.Dom.IXmlDocumentType")
//@IID("{F7342425-9781-4964-8E94-9B1C6DFC9BC7}")
class Windows_Data_Xml_Dom_IXmlDocumentType : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDocumentType( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{F7342425-9781-4964-8E94-9B1C6DFC9BC7}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("String")
    get_Name()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "String", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Entities()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlNamedNodeMap(
            this.comPtr.invoke( 7, "Windows.Data.Xml.Dom.XmlNamedNodeMap", [], [] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Notations()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlNamedNodeMap(
            this.comPtr.invoke( 8, "Windows.Data.Xml.Dom.XmlNamedNodeMap", [], [] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlDocumentType.iid = "{F7342425-9781-4964-8E94-9B1C6DFC9BC7}";
Windows.Data.Xml.Dom.IXmlDocumentType = Windows_Data_Xml_Dom_IXmlDocumentType;


//@Interface("Windows.Data.Xml.Dom.IXmlDomImplementation")
//@IID("{6DE58132-F11D-4FBB-8CC6-583CBA93112F}")
class Windows_Data_Xml_Dom_IXmlDomImplementation : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlDomImplementation( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{6DE58132-F11D-4FBB-8CC6-583CBA93112F}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Boolean")
    //@Parameters("String","Object")
    HasFeature(feature,version)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = feature;
        var p2 = version;
        var _r = this.comPtr.invoke( 6, "Boolean", ["String", "Object"], [p1, p2] );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlDomImplementation.iid = "{6DE58132-F11D-4FBB-8CC6-583CBA93112F}";
Windows.Data.Xml.Dom.IXmlDomImplementation = Windows_Data_Xml_Dom_IXmlDomImplementation;


//@Interface("Windows.Data.Xml.Dom.IXmlElement")
//@IID("{2DFB8A1F-6B10-4EF8-9F83-EFCCE8FAEC37}")
class Windows_Data_Xml_Dom_IXmlElement : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlElement( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{2DFB8A1F-6B10-4EF8-9F83-EFCCE8FAEC37}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("String")
    get_TagName()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "String", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("String")
    //@Parameters("String")
    GetAttribute(attributeName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = attributeName;
        var _r = this.comPtr.invoke( 7, "String", ["String"], [p1] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String","String")
    SetAttribute(attributeName,attributeValue)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = attributeName;
        var p2 = attributeValue;
        this.comPtr.invoke( 8, "void", ["String", "String"], [p1, p2] );
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    RemoveAttribute(attributeName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = attributeName;
        this.comPtr.invoke( 9, "void", ["String"], [p1] );
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("String")
    GetAttributeNode(attributeName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = attributeName;
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 10, "Windows.Data.Xml.Dom.XmlAttribute", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    SetAttributeNode(newAttribute)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.XmlAttribute( newAttribute); 
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 11, "Windows.Data.Xml.Dom.XmlAttribute", ["Windows.Data.Xml.Dom.XmlAttribute"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    RemoveAttributeNode(attributeNode)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.XmlAttribute( attributeNode); 
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 12, "Windows.Data.Xml.Dom.XmlAttribute", ["Windows.Data.Xml.Dom.XmlAttribute"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    GetElementsByTagName(tagName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = tagName;
        var _r = Windows.Data.Xml.Dom.XmlNodeList(
            this.comPtr.invoke( 13, "Windows.Data.Xml.Dom.XmlNodeList", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Object","String","String")
    SetAttributeNS(namespaceUri,qualifiedName,value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = qualifiedName;
        var p3 = value;
        this.comPtr.invoke( 14, "void", ["Object", "String", "String"], [p1, p2, p3] );
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("String")
    //@Parameters("Object","String")
    GetAttributeNS(namespaceUri,localName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = localName;
        var _r = this.comPtr.invoke( 15, "String", ["Object", "String"], [p1, p2] );
        return _r;
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Object","String")
    RemoveAttributeNS(namespaceUri,localName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = localName;
        this.comPtr.invoke( 16, "void", ["Object", "String"], [p1, p2] );
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    SetAttributeNodeNS(newAttribute)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.XmlAttribute( newAttribute); 
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 17, "Windows.Data.Xml.Dom.XmlAttribute", ["Windows.Data.Xml.Dom.XmlAttribute"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Object","String")
    GetAttributeNodeNS(namespaceUri,localName)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = localName;
        var _r = Windows.Data.Xml.Dom.XmlAttribute(
            this.comPtr.invoke( 18, "Windows.Data.Xml.Dom.XmlAttribute", ["Object", "String"], [p1, p2] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlElement.iid = "{2DFB8A1F-6B10-4EF8-9F83-EFCCE8FAEC37}";
Windows.Data.Xml.Dom.IXmlElement = Windows_Data_Xml_Dom_IXmlElement;


//@Interface("Windows.Data.Xml.Dom.IXmlEntityReference")
//@IID("{2E2F47BC-C3D0-4CCF-BB86-0AB8C36A61CF}")
class Windows_Data_Xml_Dom_IXmlEntityReference : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlEntityReference( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{2E2F47BC-C3D0-4CCF-BB86-0AB8C36A61CF}");
    }


}
Windows_Data_Xml_Dom_IXmlEntityReference.iid = "{2E2F47BC-C3D0-4CCF-BB86-0AB8C36A61CF}";
Windows.Data.Xml.Dom.IXmlEntityReference = Windows_Data_Xml_Dom_IXmlEntityReference;


//@Interface("Windows.Data.Xml.Dom.IXmlLoadSettings")
//@IID("{58AA07A8-FED6-46F7-B4C5-FB1BA72108D6}")
class Windows_Data_Xml_Dom_IXmlLoadSettings : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlLoadSettings( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{58AA07A8-FED6-46F7-B4C5-FB1BA72108D6}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("UInt32")
    get_MaxElementDepth()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("UInt32")
    put_MaxElementDepth(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 7, "void", ["UInt32"], [p1] );
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Boolean")
    get_ProhibitDtd()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 8, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_ProhibitDtd(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 9, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Boolean")
    get_ResolveExternals()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 10, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_ResolveExternals(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 11, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Boolean")
    get_ValidateOnParse()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 12, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_ValidateOnParse(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 13, "void", ["Boolean"], [p1] );
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("Boolean")
    get_ElementContentWhiteSpace()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 14, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Boolean")
    put_ElementContentWhiteSpace(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 15, "void", ["Boolean"], [p1] );
    }


}
Windows_Data_Xml_Dom_IXmlLoadSettings.iid = "{58AA07A8-FED6-46F7-B4C5-FB1BA72108D6}";
Windows.Data.Xml.Dom.IXmlLoadSettings = Windows_Data_Xml_Dom_IXmlLoadSettings;


//@Interface("Windows.Data.Xml.Dom.IXmlNamedNodeMap")
//@IID("{B3A69EB0-AAB0-4B82-A6FA-B1453F7C021B}")
class Windows_Data_Xml_Dom_IXmlNamedNodeMap : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlNamedNodeMap( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{B3A69EB0-AAB0-4B82-A6FA-B1453F7C021B}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("UInt32")
    get_Length()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("UInt32")
    Item(index)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = index;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 7, "Windows.Data.Xml.Dom.IXmlNode", ["UInt32"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    GetNamedItem(name)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = name;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 8, "Windows.Data.Xml.Dom.IXmlNode", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    SetNamedItem(node)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( node); 
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 9, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    RemoveNamedItem(name)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = name;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 10, "Windows.Data.Xml.Dom.IXmlNode", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Object","String")
    GetNamedItemNS(namespaceUri,name)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = name;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 11, "Windows.Data.Xml.Dom.IXmlNode", ["Object", "String"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Object","String")
    RemoveNamedItemNS(namespaceUri,name)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = namespaceUri;
        var p2 = name;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 12, "Windows.Data.Xml.Dom.IXmlNode", ["Object", "String"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    SetNamedItemNS(node)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( node); 
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 13, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode"], [p1] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlNamedNodeMap.iid = "{B3A69EB0-AAB0-4B82-A6FA-B1453F7C021B}";
Windows.Data.Xml.Dom.IXmlNamedNodeMap = Windows_Data_Xml_Dom_IXmlNamedNodeMap;


//@Interface("Windows.Data.Xml.Dom.IXmlNode")
//@IID("{1C741D59-2122-47D5-A856-83F3D4214875}")
class Windows_Data_Xml_Dom_IXmlNode : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlNode( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{1C741D59-2122-47D5-A856-83F3D4214875}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Object")
    get_NodeValue()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 7, "void", ["Object"], [p1] );
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 8, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("String")
    get_NodeName()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 9, "String", [], [] );
        return _r;
    }

    //@VtableIndex(10)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 10, "Windows.Data.Xml.Dom.IXmlNode", [], [] )
        );
        return _r;
    }

    //@VtableIndex(11)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlNodeList(
            this.comPtr.invoke( 11, "Windows.Data.Xml.Dom.XmlNodeList", [], [] )
        );
        return _r;
    }

    //@VtableIndex(12)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 12, "Windows.Data.Xml.Dom.IXmlNode", [], [] )
        );
        return _r;
    }

    //@VtableIndex(13)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 13, "Windows.Data.Xml.Dom.IXmlNode", [], [] )
        );
        return _r;
    }

    //@VtableIndex(14)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 14, "Windows.Data.Xml.Dom.IXmlNode", [], [] )
        );
        return _r;
    }

    //@VtableIndex(15)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 15, "Windows.Data.Xml.Dom.IXmlNode", [], [] )
        );
        return _r;
    }

    //@VtableIndex(16)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlNamedNodeMap(
            this.comPtr.invoke( 16, "Windows.Data.Xml.Dom.XmlNamedNodeMap", [], [] )
        );
        return _r;
    }

    //@VtableIndex(17)
    //@Async(0)
    //@Returns("Boolean")
    HasChildNodes()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 17, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(18)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.XmlDocument(
            this.comPtr.invoke( 18, "Windows.Data.Xml.Dom.XmlDocument", [], [] )
        );
        return _r;
    }

    //@VtableIndex(19)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( newChild); 
        var p2 = Windows.Data.Xml.Dom.IXmlNode( referenceChild); 
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 19, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(20)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( newChild); 
        var p2 = Windows.Data.Xml.Dom.IXmlNode( referenceChild); 
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 20, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(21)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( childNode); 
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 21, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(22)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = Windows.Data.Xml.Dom.IXmlNode( newChild); 
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 22, "Windows.Data.Xml.Dom.IXmlNode", ["Windows.Data.Xml.Dom.IXmlNode"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(23)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = deep;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 23, "Windows.Data.Xml.Dom.IXmlNode", ["Boolean"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(24)
    //@Async(0)
    //@Returns("Object")
    get_NamespaceUri()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 24, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(25)
    //@Async(0)
    //@Returns("Object")
    get_LocalName()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 25, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(26)
    //@Async(0)
    //@Returns("Object")
    get_Prefix()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 26, "Object", [], [] );
        return _r;
    }

    //@VtableIndex(27)
    //@Async(0)
    //@Returns("void")
    Normalize()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        this.comPtr.invoke( 27, "void", [], [] );
    }

    //@VtableIndex(28)
    //@Async(0)
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 28, "void", ["Object"], [p1] );
    }


}
Windows_Data_Xml_Dom_IXmlNode.iid = "{1C741D59-2122-47D5-A856-83F3D4214875}";
Windows.Data.Xml.Dom.IXmlNode = Windows_Data_Xml_Dom_IXmlNode;


//@Interface("Windows.Data.Xml.Dom.IXmlNodeList")
//@IID("{8C60AD77-83A4-4EC1-9C54-7BA429E13DA6}")
class Windows_Data_Xml_Dom_IXmlNodeList : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlNodeList( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{8C60AD77-83A4-4EC1-9C54-7BA429E13DA6}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("UInt32")
    get_Length()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "UInt32", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("UInt32")
    Item(index)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = index;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 7, "Windows.Data.Xml.Dom.IXmlNode", ["UInt32"], [p1] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlNodeList.iid = "{8C60AD77-83A4-4EC1-9C54-7BA429E13DA6}";
Windows.Data.Xml.Dom.IXmlNodeList = Windows_Data_Xml_Dom_IXmlNodeList;


//@Interface("Windows.Data.Xml.Dom.IXmlNodeSelector")
//@IID("{63DBBA8B-D0DB-4FE1-B745-F9433AFDC25B}")
class Windows_Data_Xml_Dom_IXmlNodeSelector : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlNodeSelector( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{63DBBA8B-D0DB-4FE1-B745-F9433AFDC25B}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = xpath;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 6, "Windows.Data.Xml.Dom.IXmlNode", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = xpath;
        var _r = Windows.Data.Xml.Dom.XmlNodeList(
            this.comPtr.invoke( 7, "Windows.Data.Xml.Dom.XmlNodeList", ["String"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = xpath;
        var p2 = namespaces;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke( 8, "Windows.Data.Xml.Dom.IXmlNode", ["String", "Object"], [p1, p2] )
        );
        return _r;
    }

    //@VtableIndex(9)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = xpath;
        var p2 = namespaces;
        var _r = Windows.Data.Xml.Dom.XmlNodeList(
            this.comPtr.invoke( 9, "Windows.Data.Xml.Dom.XmlNodeList", ["String", "Object"], [p1, p2] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlNodeSelector.iid = "{63DBBA8B-D0DB-4FE1-B745-F9433AFDC25B}";
Windows.Data.Xml.Dom.IXmlNodeSelector = Windows_Data_Xml_Dom_IXmlNodeSelector;


//@Interface("Windows.Data.Xml.Dom.IXmlNodeSerializer")
//@IID("{5CC5B382-E6DD-4991-ABEF-06D8D2E7BD0C}")
class Windows_Data_Xml_Dom_IXmlNodeSerializer : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlNodeSerializer( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{5CC5B382-E6DD-4991-ABEF-06D8D2E7BD0C}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("String")
    GetXml()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "String", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("String")
    get_InnerText()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 7, "String", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 8, "void", ["String"], [p1] );
    }


}
Windows_Data_Xml_Dom_IXmlNodeSerializer.iid = "{5CC5B382-E6DD-4991-ABEF-06D8D2E7BD0C}";
Windows.Data.Xml.Dom.IXmlNodeSerializer = Windows_Data_Xml_Dom_IXmlNodeSerializer;


//@Interface("Windows.Data.Xml.Dom.IXmlProcessingInstruction")
//@IID("{2707FD1E-1E92-4ECE-B6F4-26F069078DDC}")
class Windows_Data_Xml_Dom_IXmlProcessingInstruction : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlProcessingInstruction( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{2707FD1E-1E92-4ECE-B6F4-26F069078DDC}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("String")
    get_Target()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 6, "String", [], [] );
        return _r;
    }

    //@VtableIndex(7)
    //@Async(0)
    //@Returns("String")
    get_Data()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke( 7, "String", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Async(0)
    //@Returns("void")
    //@Parameters("String")
    put_Data(value)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = value;
        this.comPtr.invoke( 8, "void", ["String"], [p1] );
    }


}
Windows_Data_Xml_Dom_IXmlProcessingInstruction.iid = "{2707FD1E-1E92-4ECE-B6F4-26F069078DDC}";
Windows.Data.Xml.Dom.IXmlProcessingInstruction = Windows_Data_Xml_Dom_IXmlProcessingInstruction;


//@Interface("Windows.Data.Xml.Dom.IXmlText")
//@IID("{F931A4CB-308D-4760-A1D5-43B67450AC7E}")
class Windows_Data_Xml_Dom_IXmlText : WinRtInterface 
{
    Windows_Data_Xml_Dom_IXmlText( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{F931A4CB-308D-4760-A1D5-43B67450AC7E}");
    }

    //@VtableIndex(6)
    //@Async(0)
    //@Returns("Windows.Data.Xml.Dom.IXmlText")
    //@Parameters("UInt32")
    SplitText(offset)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = offset;
        var _r = Windows.Data.Xml.Dom.IXmlText(
            this.comPtr.invoke( 6, "Windows.Data.Xml.Dom.IXmlText", ["UInt32"], [p1] )
        );
        return _r;
    }


}
Windows_Data_Xml_Dom_IXmlText.iid = "{F931A4CB-308D-4760-A1D5-43B67450AC7E}";
Windows.Data.Xml.Dom.IXmlText = Windows_Data_Xml_Dom_IXmlText;


//@RuntimeClass("Windows.Data.Xml.Dom.DtdEntity")
//@Implements("Windows.Data.Xml.Dom.IDtdEntity","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IDtdEntity")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_DtdEntity : WinRtInterface
{
    Windows_Data_Xml_Dom_DtdEntity( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IDtdEntity.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.DtdEntity(
            winrt.activate("Windows.Data.Xml.Dom.DtdEntity")
        );
    }
    //@Returns("Object")
    get_PublicId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IDtdEntity( this.comPtr );
        var _r = iface.get_PublicId(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_SystemId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IDtdEntity( this.comPtr );
        var _r = iface.get_SystemId(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NotationName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IDtdEntity( this.comPtr );
        var _r = iface.get_NotationName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.DtdEntity = Windows_Data_Xml_Dom_DtdEntity;

//@RuntimeClass("Windows.Data.Xml.Dom.DtdNotation")
//@Implements("Windows.Data.Xml.Dom.IDtdNotation","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IDtdNotation")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_DtdNotation : WinRtInterface
{
    Windows_Data_Xml_Dom_DtdNotation( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IDtdNotation.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.DtdNotation(
            winrt.activate("Windows.Data.Xml.Dom.DtdNotation")
        );
    }
    //@Returns("Object")
    get_PublicId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IDtdNotation( this.comPtr );
        var _r = iface.get_PublicId(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_SystemId()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IDtdNotation( this.comPtr );
        var _r = iface.get_SystemId(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.DtdNotation = Windows_Data_Xml_Dom_DtdNotation;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlAttribute")
//@Implements("Windows.Data.Xml.Dom.IXmlAttribute","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlAttribute")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlAttribute : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlAttribute( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlAttribute.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlAttribute(
            winrt.activate("Windows.Data.Xml.Dom.XmlAttribute")
        );
    }
    //@Returns("String")
    get_Name()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlAttribute( this.comPtr );
        var _r = iface.get_Name(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    get_Specified()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlAttribute( this.comPtr );
        var _r = iface.get_Specified(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_Value()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlAttribute( this.comPtr );
        var _r = iface.get_Value(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_Value(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlAttribute( this.comPtr );
        iface.put_Value( value );
        iface.release();
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlAttribute = Windows_Data_Xml_Dom_XmlAttribute;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlCDataSection")
//@Implements("Windows.Data.Xml.Dom.IXmlCDataSection","Windows.Data.Xml.Dom.IXmlText","Windows.Data.Xml.Dom.IXmlCharacterData","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlCDataSection")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlCDataSection : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlCDataSection( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlCDataSection.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlCDataSection(
            winrt.activate("Windows.Data.Xml.Dom.XmlCDataSection")
        );
    }
    //@Parameters("UInt32")
    //@Returns("Windows.Data.Xml.Dom.IXmlText")
    //@Parameters("UInt32")
    SplitText(offset)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlText( this.comPtr );
        var _r = iface.SplitText( offset );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_Data()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.get_Data(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_Data(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.put_Data( value );
        iface.release();
    }

    //@Returns("UInt32")
    get_Length()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.get_Length(  );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32", "UInt32")
    //@Returns("String")
    //@Parameters("UInt32","UInt32")
    SubstringData(offset,count)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.SubstringData( offset, count );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    AppendData(data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.AppendData( data );
        iface.release();
    }

    //@Parameters("UInt32", "String")
    //@Returns("void")
    //@Parameters("UInt32","String")
    InsertData(offset,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.InsertData( offset, data );
        iface.release();
    }

    //@Parameters("UInt32", "UInt32")
    //@Returns("void")
    //@Parameters("UInt32","UInt32")
    DeleteData(offset,count)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.DeleteData( offset, count );
        iface.release();
    }

    //@Parameters("UInt32", "UInt32", "String")
    //@Returns("void")
    //@Parameters("UInt32","UInt32","String")
    ReplaceData(offset,count,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.ReplaceData( offset, count, data );
        iface.release();
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlCDataSection = Windows_Data_Xml_Dom_XmlCDataSection;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlComment")
//@Implements("Windows.Data.Xml.Dom.IXmlComment","Windows.Data.Xml.Dom.IXmlCharacterData","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlComment")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlComment : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlComment( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlComment.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlComment(
            winrt.activate("Windows.Data.Xml.Dom.XmlComment")
        );
    }
    //@Returns("String")
    get_Data()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.get_Data(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_Data(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.put_Data( value );
        iface.release();
    }

    //@Returns("UInt32")
    get_Length()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.get_Length(  );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32", "UInt32")
    //@Returns("String")
    //@Parameters("UInt32","UInt32")
    SubstringData(offset,count)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.SubstringData( offset, count );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    AppendData(data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.AppendData( data );
        iface.release();
    }

    //@Parameters("UInt32", "String")
    //@Returns("void")
    //@Parameters("UInt32","String")
    InsertData(offset,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.InsertData( offset, data );
        iface.release();
    }

    //@Parameters("UInt32", "UInt32")
    //@Returns("void")
    //@Parameters("UInt32","UInt32")
    DeleteData(offset,count)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.DeleteData( offset, count );
        iface.release();
    }

    //@Parameters("UInt32", "UInt32", "String")
    //@Returns("void")
    //@Parameters("UInt32","UInt32","String")
    ReplaceData(offset,count,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.ReplaceData( offset, count, data );
        iface.release();
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlComment = Windows_Data_Xml_Dom_XmlComment;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlDocument")
//@Implements("Windows.Data.Xml.Dom.IXmlDocument","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector","Windows.Data.Xml.Dom.IXmlDocumentIO","Windows.Data.Xml.Dom.IXmlDocumentIO2")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlDocument")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlDocument : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlDocument( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlDocument.iid );
    }

    // s Windows.Data.Xml.Dom.IXmlDocumentStatics
    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Foundation.Uri")
    static LoadFromUriAsync( uri)
    {
        var Windows = runtime.global("Windows");
        var factory = winrt.activationFactory( "Windows.Data.Xml.Dom.XmlDocument" );
        var iface = Windows.Data.Xml.Dom.IXmlDocumentStatics( factory );
        var _promise = Future();
        var _cb = fun(status, result)
        {
            if (status == Windows.Foundation.AsyncStatus.Completed)
            {
                _promise.resolve(result);
            } else {
                _promise.reject(status);
            }
        };
        iface.LoadFromUriAsync( uri, _cb);
        iface.release();
        factory.release();
        return _promise;
    }


    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Foundation.Uri","Windows.Data.Xml.Dom.XmlLoadSettings")
    static LoadFromUriWithSettingsAsync( uri, loadSettings)
    {
        var Windows = runtime.global("Windows");
        var factory = winrt.activationFactory( "Windows.Data.Xml.Dom.XmlDocument" );
        var iface = Windows.Data.Xml.Dom.IXmlDocumentStatics( factory );
        var _promise = Future();
        var _cb = fun(status, result)
        {
            if (status == Windows.Foundation.AsyncStatus.Completed)
            {
                _promise.resolve(result);
            } else {
                _promise.reject(status);
            }
        };
        iface.LoadFromUriWithSettingsAsync( uri, loadSettings, _cb);
        iface.release();
        factory.release();
        return _promise;
    }


    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Storage.IStorageFile")
    static LoadFromFileAsync( file)
    {
        var Windows = runtime.global("Windows");
        var factory = winrt.activationFactory( "Windows.Data.Xml.Dom.XmlDocument" );
        var iface = Windows.Data.Xml.Dom.IXmlDocumentStatics( factory );
        var _promise = Future();
        var _cb = fun(status, result)
        {
            if (status == Windows.Foundation.AsyncStatus.Completed)
            {
                _promise.resolve(result);
            } else {
                _promise.reject(status);
            }
        };
        iface.LoadFromFileAsync( file, _cb);
        iface.release();
        factory.release();
        return _promise;
    }


    //@Async(3)
    //@Returns("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
    //@Parameters("Windows.Storage.IStorageFile","Windows.Data.Xml.Dom.XmlLoadSettings")
    static LoadFromFileWithSettingsAsync( file, loadSettings)
    {
        var Windows = runtime.global("Windows");
        var factory = winrt.activationFactory( "Windows.Data.Xml.Dom.XmlDocument" );
        var iface = Windows.Data.Xml.Dom.IXmlDocumentStatics( factory );
        var _promise = Future();
        var _cb = fun(status, result)
        {
            if (status == Windows.Foundation.AsyncStatus.Completed)
            {
                _promise.resolve(result);
            } else {
                _promise.reject(status);
            }
        };
        iface.LoadFromFileWithSettingsAsync( file, loadSettings, _cb);
        iface.release();
        factory.release();
        return _promise;
    }


    static Create()
    {
        return Windows.Data.Xml.Dom.XmlDocument(
            winrt.activate("Windows.Data.Xml.Dom.XmlDocument")
        );
    }
    //@Returns("Windows.Data.Xml.Dom.XmlDocumentType")
    get_Doctype()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.get_Doctype(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDomImplementation")
    get_Implementation()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.get_Implementation(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    get_DocumentElement()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.get_DocumentElement(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    //@Parameters("String")
    CreateElement(tagName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateElement( tagName );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocumentFragment")
    CreateDocumentFragment()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateDocumentFragment(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlText")
    //@Parameters("String")
    CreateTextNode(data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateTextNode( data );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlComment")
    //@Parameters("String")
    CreateComment(data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateComment( data );
        iface.release();
        return _r;
    }

    //@Parameters("String", "String")
    //@Returns("Windows.Data.Xml.Dom.XmlProcessingInstruction")
    //@Parameters("String","String")
    CreateProcessingInstruction(target,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateProcessingInstruction( target, data );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("String")
    CreateAttribute(name)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateAttribute( name );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlEntityReference")
    //@Parameters("String")
    CreateEntityReference(name)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateEntityReference( name );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    GetElementsByTagName(tagName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.GetElementsByTagName( tagName );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlCDataSection")
    //@Parameters("String")
    CreateCDataSection(data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateCDataSection( data );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_DocumentUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.get_DocumentUri(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Object","String")
    CreateAttributeNS(namespaceUri,qualifiedName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateAttributeNS( namespaceUri, qualifiedName );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String")
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    //@Parameters("Object","String")
    CreateElementNS(namespaceUri,qualifiedName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.CreateElementNS( namespaceUri, qualifiedName );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlElement")
    //@Parameters("String")
    GetElementById(elementId)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.GetElementById( elementId );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Boolean")
    ImportNode(node,deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocument( this.comPtr );
        var _r = iface.ImportNode( node, deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }

    //@Parameters("Windows.Storage.IStorageFile")
    //@Returns("Windows.Foundation.IAsyncAction")
    //@Parameters("Windows.Storage.IStorageFile")
    SaveToFileAsync(file)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocumentIO( this.comPtr );
        var _promise = Future();
        var _cb = fun(status)
        {
            if (status == Windows.Foundation.AsyncStatus.Completed)
            {
                _promise.resolve();
            } else {
                _promise.reject(status);
            }
        };
        iface.SaveToFileAsync( file, _cb  );
        iface.release();
        return _promise;
    }


}
Windows.Data.Xml.Dom.XmlDocument = Windows_Data_Xml_Dom_XmlDocument;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlDocumentFragment")
//@Implements("Windows.Data.Xml.Dom.IXmlDocumentFragment","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlDocumentFragment")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlDocumentFragment : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlDocumentFragment( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlDocumentFragment.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlDocumentFragment(
            winrt.activate("Windows.Data.Xml.Dom.XmlDocumentFragment")
        );
    }
    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlDocumentFragment = Windows_Data_Xml_Dom_XmlDocumentFragment;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlDocumentType")
//@Implements("Windows.Data.Xml.Dom.IXmlDocumentType","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlDocumentType")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlDocumentType : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlDocumentType( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlDocumentType.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlDocumentType(
            winrt.activate("Windows.Data.Xml.Dom.XmlDocumentType")
        );
    }
    //@Returns("String")
    get_Name()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocumentType( this.comPtr );
        var _r = iface.get_Name(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Entities()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocumentType( this.comPtr );
        var _r = iface.get_Entities(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Notations()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDocumentType( this.comPtr );
        var _r = iface.get_Notations(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlDocumentType = Windows_Data_Xml_Dom_XmlDocumentType;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlDomImplementation")
//@Implements("Windows.Data.Xml.Dom.IXmlDomImplementation")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlDomImplementation")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlDomImplementation : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlDomImplementation( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlDomImplementation.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlDomImplementation(
            winrt.activate("Windows.Data.Xml.Dom.XmlDomImplementation")
        );
    }
    //@Parameters("String", "Object")
    //@Returns("Boolean")
    //@Parameters("String","Object")
    HasFeature(feature,version)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlDomImplementation( this.comPtr );
        var _r = iface.HasFeature( feature, version );
        iface.release();
        return _r;
    }


}
Windows.Data.Xml.Dom.XmlDomImplementation = Windows_Data_Xml_Dom_XmlDomImplementation;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlElement")
//@Implements("Windows.Data.Xml.Dom.IXmlElement","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlElement")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlElement : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlElement( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlElement.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlElement(
            winrt.activate("Windows.Data.Xml.Dom.XmlElement")
        );
    }
    //@Returns("String")
    get_TagName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.get_TagName(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("String")
    //@Parameters("String")
    GetAttribute(attributeName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.GetAttribute( attributeName );
        iface.release();
        return _r;
    }

    //@Parameters("String", "String")
    //@Returns("void")
    //@Parameters("String","String")
    SetAttribute(attributeName,attributeValue)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        iface.SetAttribute( attributeName, attributeValue );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    RemoveAttribute(attributeName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        iface.RemoveAttribute( attributeName );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("String")
    GetAttributeNode(attributeName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.GetAttributeNode( attributeName );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    SetAttributeNode(newAttribute)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.SetAttributeNode( newAttribute );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    RemoveAttributeNode(attributeNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.RemoveAttributeNode( attributeNode );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    GetElementsByTagName(tagName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.GetElementsByTagName( tagName );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String", "String")
    //@Returns("void")
    //@Parameters("Object","String","String")
    SetAttributeNS(namespaceUri,qualifiedName,value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        iface.SetAttributeNS( namespaceUri, qualifiedName, value );
        iface.release();
    }

    //@Parameters("Object", "String")
    //@Returns("String")
    //@Parameters("Object","String")
    GetAttributeNS(namespaceUri,localName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.GetAttributeNS( namespaceUri, localName );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String")
    //@Returns("void")
    //@Parameters("Object","String")
    RemoveAttributeNS(namespaceUri,localName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        iface.RemoveAttributeNS( namespaceUri, localName );
        iface.release();
    }

    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Windows.Data.Xml.Dom.XmlAttribute")
    SetAttributeNodeNS(newAttribute)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.SetAttributeNodeNS( newAttribute );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String")
    //@Returns("Windows.Data.Xml.Dom.XmlAttribute")
    //@Parameters("Object","String")
    GetAttributeNodeNS(namespaceUri,localName)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlElement( this.comPtr );
        var _r = iface.GetAttributeNodeNS( namespaceUri, localName );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlElement = Windows_Data_Xml_Dom_XmlElement;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlEntityReference")
//@Implements("Windows.Data.Xml.Dom.IXmlEntityReference","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlEntityReference")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlEntityReference : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlEntityReference( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlEntityReference.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlEntityReference(
            winrt.activate("Windows.Data.Xml.Dom.XmlEntityReference")
        );
    }
    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlEntityReference = Windows_Data_Xml_Dom_XmlEntityReference;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlLoadSettings")
//@Implements("Windows.Data.Xml.Dom.IXmlLoadSettings")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlLoadSettings")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlLoadSettings : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlLoadSettings( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlLoadSettings.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlLoadSettings(
            winrt.activate("Windows.Data.Xml.Dom.XmlLoadSettings")
        );
    }
    //@Returns("UInt32")
    get_MaxElementDepth()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        var _r = iface.get_MaxElementDepth(  );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32")
    //@Returns("void")
    //@Parameters("UInt32")
    put_MaxElementDepth(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        iface.put_MaxElementDepth( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_ProhibitDtd()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        var _r = iface.get_ProhibitDtd(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_ProhibitDtd(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        iface.put_ProhibitDtd( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_ResolveExternals()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        var _r = iface.get_ResolveExternals(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_ResolveExternals(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        iface.put_ResolveExternals( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_ValidateOnParse()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        var _r = iface.get_ValidateOnParse(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_ValidateOnParse(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        iface.put_ValidateOnParse( value );
        iface.release();
    }

    //@Returns("Boolean")
    get_ElementContentWhiteSpace()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        var _r = iface.get_ElementContentWhiteSpace(  );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("void")
    //@Parameters("Boolean")
    put_ElementContentWhiteSpace(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlLoadSettings( this.comPtr );
        iface.put_ElementContentWhiteSpace( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlLoadSettings = Windows_Data_Xml_Dom_XmlLoadSettings;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlNamedNodeMap")
//@Implements("Windows.Data.Xml.Dom.IXmlNamedNodeMap")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlNamedNodeMap")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlNamedNodeMap : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlNamedNodeMap( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlNamedNodeMap.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlNamedNodeMap(
            winrt.activate("Windows.Data.Xml.Dom.XmlNamedNodeMap")
        );
    }
    //@Returns("UInt32")
    get_Length()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.get_Length(  );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("UInt32")
    Item(index)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.Item( index );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    GetNamedItem(name)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.GetNamedItem( name );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    SetNamedItem(node)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.SetNamedItem( node );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    RemoveNamedItem(name)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.RemoveNamedItem( name );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Object","String")
    GetNamedItemNS(namespaceUri,name)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.GetNamedItemNS( namespaceUri, name );
        iface.release();
        return _r;
    }

    //@Parameters("Object", "String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Object","String")
    RemoveNamedItemNS(namespaceUri,name)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.RemoveNamedItemNS( namespaceUri, name );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    SetNamedItemNS(node)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNamedNodeMap( this.comPtr );
        var _r = iface.SetNamedItemNS( node );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("UInt32")
    GetAt(index)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Foundation.Collections.IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_( this.comPtr );
        var _r = iface.GetAt( index );
        iface.release();
        return _r;
    }

    //@Returns("UInt32")
    get_Size()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Foundation.Collections.IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_( this.comPtr );
        var _r = iface.get_Size(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Foundation.Collections.IIterator`1<Windows.Data.Xml.Dom.IXmlNode>")
    First()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Foundation.Collections.IIterable_1_Windows_Data_Xml_Dom_IXmlNode_( this.comPtr );
        var _r = iface.First(  );
        iface.release();
        return _r;
    }


}
Windows.Data.Xml.Dom.XmlNamedNodeMap = Windows_Data_Xml_Dom_XmlNamedNodeMap;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlNodeList")
//@Implements("Windows.Data.Xml.Dom.IXmlNodeList")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlNodeList")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlNodeList : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlNodeList( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlNodeList.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlNodeList(
            winrt.activate("Windows.Data.Xml.Dom.XmlNodeList")
        );
    }
    //@Returns("UInt32")
    get_Length()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeList( this.comPtr );
        var _r = iface.get_Length(  );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("UInt32")
    Item(index)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeList( this.comPtr );
        var _r = iface.Item( index );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("UInt32")
    GetAt(index)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Foundation.Collections.IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_( this.comPtr );
        var _r = iface.GetAt( index );
        iface.release();
        return _r;
    }

    //@Returns("UInt32")
    get_Size()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Foundation.Collections.IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_( this.comPtr );
        var _r = iface.get_Size(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Foundation.Collections.IIterator`1<Windows.Data.Xml.Dom.IXmlNode>")
    First()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Foundation.Collections.IIterable_1_Windows_Data_Xml_Dom_IXmlNode_( this.comPtr );
        var _r = iface.First(  );
        iface.release();
        return _r;
    }


}
Windows.Data.Xml.Dom.XmlNodeList = Windows_Data_Xml_Dom_XmlNodeList;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlProcessingInstruction")
//@Implements("Windows.Data.Xml.Dom.IXmlProcessingInstruction","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlProcessingInstruction")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlProcessingInstruction : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlProcessingInstruction( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlProcessingInstruction.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlProcessingInstruction(
            winrt.activate("Windows.Data.Xml.Dom.XmlProcessingInstruction")
        );
    }
    //@Returns("String")
    get_Target()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlProcessingInstruction( this.comPtr );
        var _r = iface.get_Target(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_Data()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlProcessingInstruction( this.comPtr );
        var _r = iface.get_Data(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_Data(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlProcessingInstruction( this.comPtr );
        iface.put_Data( value );
        iface.release();
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlProcessingInstruction = Windows_Data_Xml_Dom_XmlProcessingInstruction;

//@RuntimeClass("Windows.Data.Xml.Dom.XmlText")
//@Implements("Windows.Data.Xml.Dom.IXmlText","Windows.Data.Xml.Dom.IXmlCharacterData","Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNodeSerializer","Windows.Data.Xml.Dom.IXmlNodeSelector")
//@DefaultInterface("Windows.Data.Xml.Dom.IXmlText")
@Proxy("WinRtProxy")
class Windows_Data_Xml_Dom_XmlText : WinRtInterface
{
    Windows_Data_Xml_Dom_XmlText( comPtr )
    {
        var Windows = runtime.global("Windows");
        if(!comPtr || !int(comPtr)) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( Windows.Data.Xml.Dom.IXmlText.iid );
    }

    static Create()
    {
        return Windows.Data.Xml.Dom.XmlText(
            winrt.activate("Windows.Data.Xml.Dom.XmlText")
        );
    }
    //@Parameters("UInt32")
    //@Returns("Windows.Data.Xml.Dom.IXmlText")
    //@Parameters("UInt32")
    SplitText(offset)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlText( this.comPtr );
        var _r = iface.SplitText( offset );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_Data()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.get_Data(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_Data(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.put_Data( value );
        iface.release();
    }

    //@Returns("UInt32")
    get_Length()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.get_Length(  );
        iface.release();
        return _r;
    }

    //@Parameters("UInt32", "UInt32")
    //@Returns("String")
    //@Parameters("UInt32","UInt32")
    SubstringData(offset,count)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        var _r = iface.SubstringData( offset, count );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    AppendData(data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.AppendData( data );
        iface.release();
    }

    //@Parameters("UInt32", "String")
    //@Returns("void")
    //@Parameters("UInt32","String")
    InsertData(offset,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.InsertData( offset, data );
        iface.release();
    }

    //@Parameters("UInt32", "UInt32")
    //@Returns("void")
    //@Parameters("UInt32","UInt32")
    DeleteData(offset,count)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.DeleteData( offset, count );
        iface.release();
    }

    //@Parameters("UInt32", "UInt32", "String")
    //@Returns("void")
    //@Parameters("UInt32","UInt32","String")
    ReplaceData(offset,count,data)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlCharacterData( this.comPtr );
        iface.ReplaceData( offset, count, data );
        iface.release();
    }

    //@Returns("Object")
    get_NodeValue()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeValue(  );
        iface.release();
        return _r;
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_NodeValue(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_NodeValue( value );
        iface.release();
    }

    //@Returns("Windows.Data.Xml.Dom.NodeType")
    get_NodeType()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeType(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_NodeName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NodeName(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_ParentNode()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ParentNode(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    get_ChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_ChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_FirstChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_FirstChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_LastChild()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LastChild(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_PreviousSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_PreviousSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    get_NextSibling()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NextSibling(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlNamedNodeMap")
    get_Attributes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Attributes(  );
        iface.release();
        return _r;
    }

    //@Returns("Boolean")
    HasChildNodes()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.HasChildNodes(  );
        iface.release();
        return _r;
    }

    //@Returns("Windows.Data.Xml.Dom.XmlDocument")
    get_OwnerDocument()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_OwnerDocument(  );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    InsertBefore(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.InsertBefore( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode", "Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode","Windows.Data.Xml.Dom.IXmlNode")
    ReplaceChild(newChild,referenceChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.ReplaceChild( newChild, referenceChild );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    RemoveChild(childNode)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.RemoveChild( childNode );
        iface.release();
        return _r;
    }

    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Windows.Data.Xml.Dom.IXmlNode")
    AppendChild(newChild)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.AppendChild( newChild );
        iface.release();
        return _r;
    }

    //@Parameters("Boolean")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("Boolean")
    CloneNode(deep)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.CloneNode( deep );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_NamespaceUri()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_NamespaceUri(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_LocalName()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_LocalName(  );
        iface.release();
        return _r;
    }

    //@Returns("Object")
    get_Prefix()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        var _r = iface.get_Prefix(  );
        iface.release();
        return _r;
    }

    //@Returns("void")
    Normalize()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.Normalize(  );
        iface.release();
    }

    //@Parameters("Object")
    //@Returns("void")
    //@Parameters("Object")
    put_Prefix(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNode( this.comPtr );
        iface.put_Prefix( value );
        iface.release();
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String")
    SelectSingleNode(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNode( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String")
    SelectNodes(xpath)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodes( xpath );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.IXmlNode")
    //@Parameters("String","Object")
    SelectSingleNodeNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectSingleNodeNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Parameters("String", "Object")
    //@Returns("Windows.Data.Xml.Dom.XmlNodeList")
    //@Parameters("String","Object")
    SelectNodesNS(xpath,namespaces)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSelector( this.comPtr );
        var _r = iface.SelectNodesNS( xpath, namespaces );
        iface.release();
        return _r;
    }

    //@Returns("String")
    GetXml()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.GetXml(  );
        iface.release();
        return _r;
    }

    //@Returns("String")
    get_InnerText()
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        var _r = iface.get_InnerText(  );
        iface.release();
        return _r;
    }

    //@Parameters("String")
    //@Returns("void")
    //@Parameters("String")
    put_InnerText(value)
    {
        if (!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var iface = Windows.Data.Xml.Dom.IXmlNodeSerializer( this.comPtr );
        iface.put_InnerText( value );
        iface.release();
    }


}
Windows.Data.Xml.Dom.XmlText = Windows_Data_Xml_Dom_XmlText;

if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
//@Interface("Windows.Foundation.IAsyncOperation`1<Windows.Data.Xml.Dom.XmlDocument>")
//@IID("{F858E239-1896-5982-8495-143168478EB8}")
class Windows_Foundation_IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_ : WinRtInterface {}
Windows_Foundation_IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_.iid = "{F858E239-1896-5982-8495-143168478EB8}";
Windows_Foundation_IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_.handler_iid = "{5EEF7817-93DD-5C0B-9E5A-EB490408F3A9}";

Windows.Foundation.IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_ = Windows_Foundation_IAsyncOperation_1_Windows_Data_Xml_Dom_XmlDocument_;
if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
if ( Windows.Foundation.Collections == nil ) { Windows.Foundation.Collections = {}; }
//@Interface("Windows.Foundation.Collections.IVectorView`1<Windows.Data.Xml.Dom.IXmlNode>")
//@IID("{139D959E-E7B5-5CB6-A596-4B544478DA9B}")
class Windows_Foundation_Collections_IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_ : WinRtInterface 
{
    Windows_Foundation_Collections_IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_( comPtr )
    {
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{139D959E-E7B5-5CB6-A596-4B544478DA9B}");
    }

    //@VtableIndex(6)
    //@Returns("T0")
    //@Parameters("UInt32")
    GetAt(index)
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var p1 = index;
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke(6, "Windows.Data.Xml.Dom.IXmlNode", ["UInt32"], [p1] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Returns("UInt32")
    get_Size()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke(7, "UInt32", [], [] );
        return _r;
    }


}
Windows_Foundation_Collections_IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_.iid = "{139D959E-E7B5-5CB6-A596-4B544478DA9B}";
Windows.Foundation.Collections.IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_ = Windows_Foundation_Collections_IVectorView_1_Windows_Data_Xml_Dom_IXmlNode_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
if ( Windows.Foundation.Collections == nil ) { Windows.Foundation.Collections = {}; }
//@Interface("Windows.Foundation.Collections.IIterator`1<Windows.Data.Xml.Dom.IXmlNode>")
//@IID("{3833A35E-2C61-56BD-B093-3694165F8898}")
class Windows_Foundation_Collections_IIterator_1_Windows_Data_Xml_Dom_IXmlNode_ : WinRtInterface 
{
    Windows_Foundation_Collections_IIterator_1_Windows_Data_Xml_Dom_IXmlNode_( comPtr )
    {
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{3833A35E-2C61-56BD-B093-3694165F8898}");
    }

    //@VtableIndex(6)
    //@Returns("T0")
    get_Current()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Data.Xml.Dom.IXmlNode(
            this.comPtr.invoke(6, "Windows.Data.Xml.Dom.IXmlNode", [], [] )
        );
        return _r;
    }

    //@VtableIndex(7)
    //@Returns("Boolean")
    get_HasCurrent()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke(7, "Boolean", [], [] );
        return _r;
    }

    //@VtableIndex(8)
    //@Returns("Boolean")
    MoveNext()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = this.comPtr.invoke(8, "Boolean", [], [] );
        return _r;
    }


}
Windows_Foundation_Collections_IIterator_1_Windows_Data_Xml_Dom_IXmlNode_.iid = "{3833A35E-2C61-56BD-B093-3694165F8898}";
Windows.Foundation.Collections.IIterator_1_Windows_Data_Xml_Dom_IXmlNode_ = Windows_Foundation_Collections_IIterator_1_Windows_Data_Xml_Dom_IXmlNode_;


if ( Windows.Foundation == nil ) { Windows.Foundation = {}; }
if ( Windows.Foundation.Collections == nil ) { Windows.Foundation.Collections = {}; }
//@Interface("Windows.Foundation.Collections.IIterable`1<Windows.Data.Xml.Dom.IXmlNode>")
//@IID("{F1146FFC-8C92-56E8-93F1-711F86722633}")
class Windows_Foundation_Collections_IIterable_1_Windows_Data_Xml_Dom_IXmlNode_ : WinRtInterface 
{
    Windows_Foundation_Collections_IIterable_1_Windows_Data_Xml_Dom_IXmlNode_( comPtr )
    {
        if(!comPtr || !int(comPtr) ) { this.comPtr = comPtr; }
        else this.comPtr = comPtr.queryInterface( "{F1146FFC-8C92-56E8-93F1-711F86722633}");
    }

    //@VtableIndex(6)
    //@Returns("Windows.Foundation.Collections.IIterator`1<T0>")
    First()
    {
        if(!this.comPtr || !int(this.comPtr)) return nil;
        var Windows = runtime.global("Windows");
        var _r = Windows.Foundation.Collections.IIterator_1_Windows_Data_Xml_Dom_IXmlNode_(
            this.comPtr.invoke(6, "Windows.Foundation.Collections.IIterator`1<Windows.Data.Xml.Dom.IXmlNode>", [], [] )
        );
        return _r;
    }


}
Windows_Foundation_Collections_IIterable_1_Windows_Data_Xml_Dom_IXmlNode_.iid = "{F1146FFC-8C92-56E8-93F1-711F86722633}";
Windows.Foundation.Collections.IIterable_1_Windows_Data_Xml_Dom_IXmlNode_ = Windows_Foundation_Collections_IIterable_1_Windows_Data_Xml_Dom_IXmlNode_;



}
