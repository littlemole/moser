{

if( runtime.global("Win32") == nil ) { runtime.global("Win32", {}); }
var Win32 = runtime.global("Win32");

Win32.BCRYPT_OPERATION = {
    "BCRYPT_CIPHER_OPERATION" : 1, 
    "BCRYPT_HASH_OPERATION" : 2, 
    "BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION" : 4, 
    "BCRYPT_SECRET_AGREEMENT_OPERATION" : 8, 
    "BCRYPT_SIGNATURE_OPERATION" : 16, 
    "BCRYPT_RNG_OPERATION" : 32
};


Win32.NCRYPT_OPERATION = {
    "NCRYPT_CIPHER_OPERATION" : 1, 
    "NCRYPT_HASH_OPERATION" : 2, 
    "NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION" : 4, 
    "NCRYPT_SECRET_AGREEMENT_OPERATION" : 8, 
    "NCRYPT_SIGNATURE_OPERATION" : 16
};


Win32.CERT_FIND_FLAGS = {
    "CERT_FIND_ANY" : 0, 
    "CERT_FIND_CERT_ID" : 1048576, 
    "CERT_FIND_CTL_USAGE" : 655360, 
    "CERT_FIND_ENHKEY_USAGE" : 655360, 
    "CERT_FIND_EXISTING" : 851968, 
    "CERT_FIND_HASH" : 65536, 
    "CERT_FIND_HAS_PRIVATE_KEY" : 1376256, 
    "CERT_FIND_ISSUER_ATTR" : 196612, 
    "CERT_FIND_ISSUER_NAME" : 131076, 
    "CERT_FIND_ISSUER_OF" : 786432, 
    "CERT_FIND_ISSUER_STR" : 524292, 
    "CERT_FIND_KEY_IDENTIFIER" : 983040, 
    "CERT_FIND_KEY_SPEC" : 589824, 
    "CERT_FIND_MD5_HASH" : 262144, 
    "CERT_FIND_PROPERTY" : 327680, 
    "CERT_FIND_PUBLIC_KEY" : 393216, 
    "CERT_FIND_SHA1_HASH" : 65536, 
    "CERT_FIND_SIGNATURE_HASH" : 917504, 
    "CERT_FIND_SUBJECT_ATTR" : 196615, 
    "CERT_FIND_SUBJECT_CERT" : 720896, 
    "CERT_FIND_SUBJECT_NAME" : 131079, 
    "CERT_FIND_SUBJECT_STR" : 524295, 
    "CERT_FIND_CROSS_CERT_DIST_POINTS" : 1114112, 
    "CERT_FIND_PUBKEY_MD5_HASH" : 1179648, 
    "CERT_FIND_SUBJECT_STR_A" : 458759, 
    "CERT_FIND_SUBJECT_STR_W" : 524295, 
    "CERT_FIND_ISSUER_STR_A" : 458756, 
    "CERT_FIND_ISSUER_STR_W" : 524292, 
    "CERT_FIND_SUBJECT_INFO_ACCESS" : 1245184, 
    "CERT_FIND_HASH_STR" : 1310720, 
    "CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG" : 1, 
    "CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG" : 2, 
    "CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG" : 4, 
    "CERT_FIND_NO_ENHKEY_USAGE_FLAG" : 8, 
    "CERT_FIND_OR_ENHKEY_USAGE_FLAG" : 16, 
    "CERT_FIND_VALID_ENHKEY_USAGE_FLAG" : 32, 
    "CERT_FIND_OPTIONAL_CTL_USAGE_FLAG" : 1, 
    "CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG" : 2, 
    "CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG" : 4, 
    "CERT_FIND_NO_CTL_USAGE_FLAG" : 8, 
    "CERT_FIND_OR_CTL_USAGE_FLAG" : 16, 
    "CERT_FIND_VALID_CTL_USAGE_FLAG" : 32
};


Win32.CERT_QUERY_OBJECT_TYPE = {
    "CERT_QUERY_OBJECT_FILE" : 1, 
    "CERT_QUERY_OBJECT_BLOB" : 2
};


Win32.CERT_QUERY_CONTENT_TYPE = {
    "CERT_QUERY_CONTENT_CERT" : 1, 
    "CERT_QUERY_CONTENT_CTL" : 2, 
    "CERT_QUERY_CONTENT_CRL" : 3, 
    "CERT_QUERY_CONTENT_SERIALIZED_STORE" : 4, 
    "CERT_QUERY_CONTENT_SERIALIZED_CERT" : 5, 
    "CERT_QUERY_CONTENT_SERIALIZED_CTL" : 6, 
    "CERT_QUERY_CONTENT_SERIALIZED_CRL" : 7, 
    "CERT_QUERY_CONTENT_PKCS7_SIGNED" : 8, 
    "CERT_QUERY_CONTENT_PKCS7_UNSIGNED" : 9, 
    "CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED" : 10, 
    "CERT_QUERY_CONTENT_PKCS10" : 11, 
    "CERT_QUERY_CONTENT_PFX" : 12, 
    "CERT_QUERY_CONTENT_CERT_PAIR" : 13, 
    "CERT_QUERY_CONTENT_PFX_AND_LOAD" : 14
};


Win32.CERT_QUERY_CONTENT_TYPE_FLAGS = {
    "CERT_QUERY_CONTENT_FLAG_CERT" : 2, 
    "CERT_QUERY_CONTENT_FLAG_CTL" : 4, 
    "CERT_QUERY_CONTENT_FLAG_CRL" : 8, 
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE" : 16, 
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT" : 32, 
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL" : 64, 
    "CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL" : 128, 
    "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED" : 256, 
    "CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED" : 512, 
    "CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED" : 1024, 
    "CERT_QUERY_CONTENT_FLAG_PKCS10" : 2048, 
    "CERT_QUERY_CONTENT_FLAG_PFX" : 4096, 
    "CERT_QUERY_CONTENT_FLAG_CERT_PAIR" : 8192, 
    "CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD" : 16384, 
    "CERT_QUERY_CONTENT_FLAG_ALL" : 16382, 
    "CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT" : 818
};


Win32.CERT_QUERY_FORMAT_TYPE = {
    "CERT_QUERY_FORMAT_BINARY" : 1, 
    "CERT_QUERY_FORMAT_BASE64_ENCODED" : 2, 
    "CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED" : 3
};


Win32.CERT_QUERY_FORMAT_TYPE_FLAGS = {
    "CERT_QUERY_FORMAT_FLAG_BINARY" : 2, 
    "CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED" : 4, 
    "CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED" : 8, 
    "CERT_QUERY_FORMAT_FLAG_ALL" : 14
};


Win32.CERT_QUERY_ENCODING_TYPE = {
    "X509_ASN_ENCODING" : 1, 
    "PKCS_7_ASN_ENCODING" : 65536
};


Win32.CERT_RDN_ATTR_VALUE_TYPE = {
    "CERT_RDN_ANY_TYPE" : 0, 
    "CERT_RDN_NUMERIC_STRING" : 3, 
    "CERT_RDN_PRINTABLE_STRING" : 4, 
    "CERT_RDN_T61_STRING" : 5, 
    "CERT_RDN_VIDEOTEX_STRING" : 6, 
    "CERT_RDN_IA5_STRING" : 7, 
    "CERT_RDN_GRAPHIC_STRING" : 8, 
    "CERT_RDN_ISO646_STRING" : 9, 
    "CERT_RDN_GENERAL_STRING" : 10, 
    "CERT_RDN_INT4_STRING" : 11, 
    "CERT_RDN_UNICODE_STRING" : 12, 
    "CERT_RDN_BMP_STRING" : 12, 
    "CERT_RDN_ENCODED_BLOB" : 1, 
    "CERT_RDN_OCTET_STRING" : 2, 
    "CERT_RDN_TELETEX_STRING" : 5, 
    "CERT_RDN_UNIVERSAL_STRING" : 11, 
    "CERT_RDN_UTF8_STRING" : 13, 
    "CERT_RDN_VISIBLE_STRING" : 9
};


Win32.CERT_STRING_TYPE = {
    "CERT_SIMPLE_NAME_STR" : 1, 
    "CERT_OID_NAME_STR" : 2, 
    "CERT_X500_NAME_STR" : 3
};


Win32.BCRYPT_TABLE = {
    "CRYPT_LOCAL" : 1, 
    "CRYPT_DOMAIN" : 2
};


Win32.CERT_KEY_SPEC = {
    "AT_KEYEXCHANGE" : 1, 
    "AT_SIGNATURE" : 2, 
    "CERT_NCRYPT_KEY_SPEC" : 4294967295
};


Win32.BCRYPT_INTERFACE = {
    "BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE" : 3, 
    "BCRYPT_CIPHER_INTERFACE" : 1, 
    "BCRYPT_HASH_INTERFACE" : 2, 
    "BCRYPT_RNG_INTERFACE" : 6, 
    "BCRYPT_SECRET_AGREEMENT_INTERFACE" : 4, 
    "BCRYPT_SIGNATURE_INTERFACE" : 5, 
    "NCRYPT_KEY_STORAGE_INTERFACE" : 65537, 
    "NCRYPT_SCHANNEL_INTERFACE" : 65538, 
    "NCRYPT_SCHANNEL_SIGNATURE_INTERFACE" : 65539
};


Win32.NCRYPT_FLAGS = {
    "BCRYPT_PAD_NONE" : 1, 
    "BCRYPT_PAD_OAEP" : 4, 
    "BCRYPT_PAD_PKCS1" : 2, 
    "BCRYPT_PAD_PSS" : 8, 
    "NCRYPT_SILENT_FLAG" : 64, 
    "NCRYPT_NO_PADDING_FLAG" : 1, 
    "NCRYPT_PAD_OAEP_FLAG" : 4, 
    "NCRYPT_PAD_PKCS1_FLAG" : 2, 
    "NCRYPT_REGISTER_NOTIFY_FLAG" : 1, 
    "NCRYPT_UNREGISTER_NOTIFY_FLAG" : 2, 
    "NCRYPT_MACHINE_KEY_FLAG" : 32, 
    "NCRYPT_UNPROTECT_NO_DECRYPT" : 1, 
    "NCRYPT_OVERWRITE_KEY_FLAG" : 128, 
    "NCRYPT_NO_KEY_VALIDATION" : 8, 
    "NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG" : 512, 
    "NCRYPT_PAD_PSS_FLAG" : 8, 
    "NCRYPT_PERSIST_FLAG" : 2147483648, 
    "NCRYPT_PERSIST_ONLY_FLAG" : 1073741824
};


Win32.CRYPT_STRING = {
    "CRYPT_STRING_BASE64HEADER" : 0, 
    "CRYPT_STRING_BASE64" : 1, 
    "CRYPT_STRING_BINARY" : 2, 
    "CRYPT_STRING_BASE64REQUESTHEADER" : 3, 
    "CRYPT_STRING_HEX" : 4, 
    "CRYPT_STRING_HEXASCII" : 5, 
    "CRYPT_STRING_BASE64X509CRLHEADER" : 9, 
    "CRYPT_STRING_HEXADDR" : 10, 
    "CRYPT_STRING_HEXASCIIADDR" : 11, 
    "CRYPT_STRING_HEXRAW" : 12, 
    "CRYPT_STRING_STRICT" : 536870912, 
    "CRYPT_STRING_BASE64_ANY" : 6, 
    "CRYPT_STRING_ANY" : 7, 
    "CRYPT_STRING_HEX_ANY" : 8
};


Win32.CRYPT_IMPORT_PUBLIC_KEY_FLAGS = {
    "CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG" : 2147483648, 
    "CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG" : 1073741824
};


Win32.CRYPT_XML_FLAGS = {
    "CRYPT_XML_FLAG_DISABLE_EXTENSIONS" : 268435456, 
    "CRYPT_XML_FLAG_NO_SERIALIZE" : 2147483648, 
    "CRYPT_XML_SIGN_ADD_KEYVALUE" : 1
};


Win32.CRYPT_ENCODE_OBJECT_FLAGS = {
    "CRYPT_ENCODE_ALLOC_FLAG" : 32768, 
    "CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG" : 131072, 
    "CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG" : 1073741824, 
    "CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG" : 2147483648, 
    "CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG" : 536870912
};


Win32.CRYPT_OBJECT_LOCATOR_RELEASE_REASON = {
    "CRYPT_OBJECT_LOCATOR_RELEASE_SYSTEM_SHUTDOWN" : 1, 
    "CRYPT_OBJECT_LOCATOR_RELEASE_SERVICE_STOP" : 2, 
    "CRYPT_OBJECT_LOCATOR_RELEASE_PROCESS_EXIT" : 3, 
    "CRYPT_OBJECT_LOCATOR_RELEASE_DLL_UNLOAD" : 4
};


Win32.CRYPT_ACQUIRE_FLAGS = {
    "CRYPT_ACQUIRE_CACHE_FLAG" : 1, 
    "CRYPT_ACQUIRE_COMPARE_KEY_FLAG" : 4, 
    "CRYPT_ACQUIRE_NO_HEALING" : 8, 
    "CRYPT_ACQUIRE_SILENT_FLAG" : 64, 
    "CRYPT_ACQUIRE_USE_PROV_INFO_FLAG" : 2
};


Win32.CRYPT_GET_URL_FLAGS = {
    "CRYPT_GET_URL_FROM_PROPERTY" : 1, 
    "CRYPT_GET_URL_FROM_EXTENSION" : 2, 
    "CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE" : 4, 
    "CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE" : 8
};


Win32.CERT_STORE_SAVE_AS = {
    "CERT_STORE_SAVE_AS_PKCS7" : 2, 
    "CERT_STORE_SAVE_AS_STORE" : 1
};


Win32.BCRYPT_QUERY_PROVIDER_MODE = {
    "CRYPT_ANY" : 4, 
    "CRYPT_UM" : 1, 
    "CRYPT_KM" : 2, 
    "CRYPT_MM" : 3
};


Win32.CERT_FIND_CHAIN_IN_STORE_FLAGS = {
    "CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG" : 1, 
    "CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG" : 2, 
    "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG" : 32768, 
    "CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG" : 4, 
    "CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG" : 8, 
    "CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG" : 16384
};


Win32.CERT_CONTROL_STORE_FLAGS = {
    "CERT_STORE_CTRL_COMMIT_FORCE_FLAG" : 1, 
    "CERT_STORE_CTRL_COMMIT_CLEAR_FLAG" : 2, 
    "CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG" : 1
};


Win32.BCRYPT_OPEN_ALGORITHM_PROVIDER_FLAGS = {
    "BCRYPT_ALG_HANDLE_HMAC_FLAG" : 8, 
    "BCRYPT_PROV_DISPATCH" : 1, 
    "BCRYPT_HASH_REUSABLE_FLAG" : 32
};


Win32.CERT_STORE_SAVE_TO = {
    "CERT_STORE_SAVE_TO_FILE" : 1, 
    "CERT_STORE_SAVE_TO_FILENAME" : 4, 
    "CERT_STORE_SAVE_TO_FILENAME_A" : 3, 
    "CERT_STORE_SAVE_TO_FILENAME_W" : 4, 
    "CERT_STORE_SAVE_TO_MEMORY" : 2
};


Win32.CRYPT_SET_PROV_PARAM_ID = {
    "PP_CLIENT_HWND" : 1, 
    "PP_DELETEKEY" : 24, 
    "PP_KEYEXCHANGE_ALG" : 14, 
    "PP_KEYEXCHANGE_PIN" : 32, 
    "PP_KEYEXCHANGE_KEYSIZE" : 12, 
    "PP_KEYSET_SEC_DESCR" : 8, 
    "PP_PIN_PROMPT_STRING" : 44, 
    "PP_ROOT_CERTSTORE" : 46, 
    "PP_SIGNATURE_ALG" : 15, 
    "PP_SIGNATURE_PIN" : 33, 
    "PP_SIGNATURE_KEYSIZE" : 13, 
    "PP_UI_PROMPT" : 21, 
    "PP_USE_HARDWARE_RNG" : 38, 
    "PP_USER_CERTSTORE" : 42, 
    "PP_SECURE_KEYEXCHANGE_PIN" : 47, 
    "PP_SECURE_SIGNATURE_PIN" : 48, 
    "PP_SMARTCARD_READER" : 43
};


Win32.CRYPT_KEY_PARAM_ID = {
    "KP_ALGID" : 7, 
    "KP_CERTIFICATE" : 26, 
    "KP_PERMISSIONS" : 6, 
    "KP_SALT" : 2, 
    "KP_SALT_EX" : 10, 
    "KP_BLOCKLEN" : 8, 
    "KP_GET_USE_COUNT" : 42, 
    "KP_KEYLEN" : 9
};


Win32.CRYPT_KEY_FLAGS = {
    "CRYPT_EXPORTABLE" : 1, 
    "CRYPT_USER_PROTECTED" : 2, 
    "CRYPT_ARCHIVABLE" : 16384, 
    "CRYPT_CREATE_IV" : 512, 
    "CRYPT_CREATE_SALT" : 4, 
    "CRYPT_DATA_KEY" : 2048, 
    "CRYPT_FORCE_KEY_PROTECTION_HIGH" : 32768, 
    "CRYPT_KEK" : 1024, 
    "CRYPT_INITIATOR" : 64, 
    "CRYPT_NO_SALT" : 16, 
    "CRYPT_ONLINE" : 128, 
    "CRYPT_PREGEN" : 64, 
    "CRYPT_RECIPIENT" : 16, 
    "CRYPT_SF" : 256, 
    "CRYPT_SGCKEY" : 8192, 
    "CRYPT_VOLATILE" : 4096, 
    "CRYPT_MACHINE_KEYSET" : 32, 
    "CRYPT_USER_KEYSET" : 4096, 
    "PKCS12_PREFER_CNG_KSP" : 256, 
    "PKCS12_ALWAYS_CNG_KSP" : 512, 
    "PKCS12_ALLOW_OVERWRITE_KEY" : 16384, 
    "PKCS12_NO_PERSIST_KEY" : 32768, 
    "PKCS12_INCLUDE_EXTENDED_PROPERTIES" : 16, 
    "CRYPT_OAEP" : 64, 
    "CRYPT_BLOB_VER3" : 128, 
    "CRYPT_DESTROYKEY" : 4, 
    "CRYPT_SSL2_FALLBACK" : 2, 
    "CRYPT_Y_ONLY" : 1, 
    "CRYPT_IPSEC_HMAC_KEY" : 256, 
    "CERT_SET_KEY_PROV_HANDLE_PROP_ID" : 1, 
    "CERT_SET_KEY_CONTEXT_PROP_ID" : 1
};


Win32.CRYPT_MSG_TYPE = {
    "CMSG_DATA" : 1, 
    "CMSG_SIGNED" : 2, 
    "CMSG_ENVELOPED" : 3, 
    "CMSG_SIGNED_AND_ENVELOPED" : 4, 
    "CMSG_HASHED" : 5
};


Win32.CERT_OPEN_STORE_FLAGS = {
    "CERT_STORE_BACKUP_RESTORE_FLAG" : 2048, 
    "CERT_STORE_CREATE_NEW_FLAG" : 8192, 
    "CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG" : 4, 
    "CERT_STORE_DELETE_FLAG" : 16, 
    "CERT_STORE_ENUM_ARCHIVED_FLAG" : 512, 
    "CERT_STORE_MAXIMUM_ALLOWED_FLAG" : 4096, 
    "CERT_STORE_NO_CRYPT_RELEASE_FLAG" : 1, 
    "CERT_STORE_OPEN_EXISTING_FLAG" : 16384, 
    "CERT_STORE_READONLY_FLAG" : 32768, 
    "CERT_STORE_SET_LOCALIZED_NAME_FLAG" : 2, 
    "CERT_STORE_SHARE_CONTEXT_FLAG" : 128, 
    "CERT_STORE_UPDATE_KEYID_FLAG" : 1024
};


Win32.CRYPT_DEFAULT_CONTEXT_FLAGS = {
    "CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG" : 1, 
    "CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG" : 2
};


Win32.CRYPT_VERIFY_CERT_FLAGS = {
    "CRYPT_VERIFY_CERT_SIGN_DISABLE_MD2_MD4_FLAG" : 1, 
    "CRYPT_VERIFY_CERT_SIGN_SET_STRONG_PROPERTIES_FLAG" : 2, 
    "CRYPT_VERIFY_CERT_SIGN_RETURN_STRONG_PROPERTIES_FLAG" : 4
};


Win32.CRYPT_SET_HASH_PARAM = {
    "HP_HMAC_INFO" : 5, 
    "HP_HASHVAL" : 2
};


Win32.CERT_SYSTEM_STORE_FLAGS = {
    "CERT_SYSTEM_STORE_LOCATION_MASK" : 16711680, 
    "CERT_SYSTEM_STORE_RELOCATE_FLAG" : 2147483648
};


Win32.CERT_CREATE_SELFSIGN_FLAGS = {
    "CERT_CREATE_SELFSIGN_NO_KEY_INFO" : 2, 
    "CERT_CREATE_SELFSIGN_NO_SIGN" : 1
};


Win32.CRYPT_DEFAULT_CONTEXT_TYPE = {
    "CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID" : 1, 
    "CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID" : 2
};


Win32.BCRYPT_RESOLVE_PROVIDERS_FLAGS = {
    "CRYPT_ALL_FUNCTIONS" : 1, 
    "CRYPT_ALL_PROVIDERS" : 2
};


Win32.CERT_FIND_TYPE = {
    "CTL_FIND_ANY" : 0, 
    "CTL_FIND_SHA1_HASH" : 1, 
    "CTL_FIND_MD5_HASH" : 2, 
    "CTL_FIND_USAGE" : 3, 
    "CTL_FIND_SAME_USAGE_FLAG" : 1, 
    "CTL_FIND_EXISTING" : 5, 
    "CTL_FIND_SUBJECT" : 4
};


Win32.CRYPT_FIND_FLAGS = {
    "CRYPT_FIND_USER_KEYSET_FLAG" : 1, 
    "CRYPT_FIND_MACHINE_KEYSET_FLAG" : 2, 
    "CRYPT_FIND_SILENT_KEYSET_FLAG" : 64
};


Win32.CRYPT_IMAGE_REF_FLAGS = {
    "CRYPT_MIN_DEPENDENCIES" : 1, 
    "CRYPT_PROCESS_ISOLATE" : 65536
};


Win32.CERT_REVOCATION_STATUS_REASON = {
    "CRL_REASON_UNSPECIFIED" : 0, 
    "CRL_REASON_KEY_COMPROMISE" : 1, 
    "CRL_REASON_CA_COMPROMISE" : 2, 
    "CRL_REASON_AFFILIATION_CHANGED" : 3, 
    "CRL_REASON_SUPERSEDED" : 4, 
    "CRL_REASON_CESSATION_OF_OPERATION" : 5, 
    "CRL_REASON_CERTIFICATE_HOLD" : 6, 
    "CRL_REASON_REMOVE_FROM_CRL" : 8
};


Win32.CERT_ROOT_PROGRAM_FLAGS = {
    "CERT_ROOT_PROGRAM_FLAG_LSC" : 64, 
    "CERT_ROOT_PROGRAM_FLAG_ORG" : 128, 
    "CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO" : 32
};


Win32.CRYPT_XML_KEY_VALUE_TYPE = {
    "CRYPT_XML_KEY_VALUE_TYPE_DSA" : 1, 
    "CRYPT_XML_KEY_VALUE_TYPE_RSA" : 2, 
    "CRYPT_XML_KEY_VALUE_TYPE_ECDSA" : 3, 
    "CRYPT_XML_KEY_VALUE_TYPE_CUSTOM" : 4
};


Win32.CERT_LOGOTYPE_CHOICE = {
    "CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE" : 0, 
    "CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE" : 1, 
    "CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE" : 2
};


Win32.CMSG_KEY_AGREE_OPTION = {
    "CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE" : 1, 
    "CMSG_KEY_AGREE_STATIC_KEY_CHOICE" : 2
};


Win32.CERT_LOGOTYPE_OPTION = {
    "CERT_LOGOTYPE_DIRECT_INFO_CHOICE" : 1, 
    "CERT_LOGOTYPE_INDIRECT_INFO_CHOICE" : 2
};


Win32.CERT_STORE_PROV_FLAGS = {
    "CERT_STORE_PROV_EXTERNAL_FLAG" : 1, 
    "CERT_STORE_PROV_DELETED_FLAG" : 2, 
    "CERT_STORE_PROV_NO_PERSIST_FLAG" : 4, 
    "CERT_STORE_PROV_SYSTEM_STORE_FLAG" : 8, 
    "CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG" : 16
};


Win32.CMSG_KEY_AGREE_ORIGINATOR = {
    "CMSG_KEY_AGREE_ORIGINATOR_CERT" : 1, 
    "CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY" : 2
};


Win32.CRYPT_CONTEXT_CONFIG_FLAGS = {
    "CRYPT_EXCLUSIVE" : 1, 
    "CRYPT_OVERRIDE" : 65536
};


Win32.BCRYPT_DSA_MAGIC = {
    "BCRYPT_DSA_PUBLIC_MAGIC" : 1112560452, 
    "BCRYPT_DSA_PRIVATE_MAGIC" : 1448104772
};


Win32.CRYPT_XML_X509DATA_TYPE = {
    "CRYPT_XML_X509DATA_TYPE_ISSUER_SERIAL" : 1, 
    "CRYPT_XML_X509DATA_TYPE_SKI" : 2, 
    "CRYPT_XML_X509DATA_TYPE_SUBJECT_NAME" : 3, 
    "CRYPT_XML_X509DATA_TYPE_CERTIFICATE" : 4, 
    "CRYPT_XML_X509DATA_TYPE_CRL" : 5, 
    "CRYPT_XML_X509DATA_TYPE_CUSTOM" : 6
};


Win32.CERT_BIOMETRIC_DATA_TYPE = {
    "CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE" : 1, 
    "CERT_BIOMETRIC_OID_DATA_CHOICE" : 2
};


Win32.CERT_CHAIN_POLICY_FLAGS = {
    "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG" : 1, 
    "CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG" : 2, 
    "CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG" : 4, 
    "CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS" : 7, 
    "CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG" : 8, 
    "CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG" : 16, 
    "CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG" : 32, 
    "CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG" : 64, 
    "CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG" : 128, 
    "CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG" : 256, 
    "CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG" : 512, 
    "CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG" : 1024, 
    "CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG" : 2048, 
    "CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS" : 3840, 
    "CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG" : 32768, 
    "CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG" : 16384, 
    "CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG" : 8192, 
    "CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG" : 4096
};


Win32.CERT_STRONG_SIGN_FLAGS = {
    "CERT_STRONG_SIGN_ENABLE_CRL_CHECK" : 1, 
    "CERT_STRONG_SIGN_ENABLE_OCSP_CHECK" : 2
};


Win32.CERT_LOGOTYPE_IMAGE_INFO_TYPE = {
    "CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE" : 1, 
    "CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE" : 2
};


Win32.CRYPT_XML_STATUS_INFO_STATUS = {
    "CRYPT_XML_STATUS_INTERNAL_REFERENCE" : 1, 
    "CRYPT_XML_STATUS_KEY_AVAILABLE" : 2, 
    "CRYPT_XML_STATUS_DIGESTING" : 4, 
    "CRYPT_XML_STATUS_DIGEST_VALID" : 8, 
    "CRYPT_XML_STATUS_SIGNATURE_VALID" : 65536, 
    "CRYPT_XML_STATUS_OPENED_TO_ENCODE" : 2147483648
};


Win32.CRYPT_XML_TRANSFORM_FLAGS = {
    "CRYPT_XML_TRANSFORM_ON_STREAM" : 1, 
    "CRYPT_XML_TRANSFORM_ON_NODESET" : 2, 
    "CRYPT_XML_TRANSFORM_URI_QUERY_STRING" : 3
};


Win32.CRYPT_XML_GROUP_ID = {
    "CRYPT_XML_GROUP_ID_HASH" : 1, 
    "CRYPT_XML_GROUP_ID_SIGN" : 2
};


Win32.CERT_SELECT_CRITERIA_TYPE = {
    "CERT_SELECT_BY_ENHKEY_USAGE" : 1, 
    "CERT_SELECT_BY_KEY_USAGE" : 2, 
    "CERT_SELECT_BY_POLICY_OID" : 3, 
    "CERT_SELECT_BY_PROV_NAME" : 4, 
    "CERT_SELECT_BY_EXTENSION" : 5, 
    "CERT_SELECT_BY_SUBJECT_HOST_NAME" : 6, 
    "CERT_SELECT_BY_ISSUER_ATTR" : 7, 
    "CERT_SELECT_BY_SUBJECT_ATTR" : 8, 
    "CERT_SELECT_BY_ISSUER_NAME" : 9, 
    "CERT_SELECT_BY_PUBLIC_KEY" : 10, 
    "CERT_SELECT_BY_TLS_SIGNATURES" : 11
};


Win32.BCRYPT_RSAKEY_BLOB_MAGIC = {
    "BCRYPT_RSAPUBLIC_MAGIC" : 826364754, 
    "BCRYPT_RSAPRIVATE_MAGIC" : 843141970, 
    "BCRYPT_RSAFULLPRIVATE_MAGIC" : 859919186
};


Win32.CRYPT_XML_KEYINFO_TYPE = {
    "CRYPT_XML_KEYINFO_TYPE_KEYNAME" : 1, 
    "CRYPT_XML_KEYINFO_TYPE_KEYVALUE" : 2, 
    "CRYPT_XML_KEYINFO_TYPE_RETRIEVAL" : 3, 
    "CRYPT_XML_KEYINFO_TYPE_X509DATA" : 4, 
    "CRYPT_XML_KEYINFO_TYPE_CUSTOM" : 5
};


Win32.CRYPT_TIMESTAMP_VERSION = {
    "TIMESTAMP_VERSION" : 1
};


Win32.CERT_ID_OPTION = {
    "CERT_ID_ISSUER_SERIAL_NUMBER" : 1, 
    "CERT_ID_KEY_IDENTIFIER" : 2, 
    "CERT_ID_SHA1_HASH" : 3
};


Win32.HTTPSPOLICY_CALLBACK_DATA_AUTH_TYPE = {
    "AUTHTYPE_CLIENT" : 1, 
    "AUTHTYPE_SERVER" : 2
};


Win32.BCRYPT_DH_KEY_BLOB_MAGIC = {
    "BCRYPT_DH_PUBLIC_MAGIC" : 1112557636, 
    "BCRYPT_DH_PRIVATE_MAGIC" : 1448101956
};


Win32.CRYPT_XML_STATUS_ERROR_STATUS = {
    "CRYPT_XML_STATUS_ERROR_NOT_RESOLVED" : 1, 
    "CRYPT_XML_STATUS_ERROR_DIGEST_INVALID" : 2, 
    "CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_ALGORITHM" : 5, 
    "CRYPT_XML_STATUS_ERROR_NOT_SUPPORTED_TRANSFORM" : 8, 
    "CRYPT_XML_STATUS_ERROR_SIGNATURE_INVALID" : 65536, 
    "CRYPT_XML_STATUS_ERROR_KEYINFO_NOT_PARSED" : 131072
};


Win32.CRYPT_TIMESTAMP_RESPONSE_STATUS = {
    "TIMESTAMP_STATUS_GRANTED" : 0, 
    "TIMESTAMP_STATUS_GRANTED_WITH_MODS" : 1, 
    "TIMESTAMP_STATUS_REJECTED" : 2, 
    "TIMESTAMP_STATUS_WAITING" : 3, 
    "TIMESTAMP_STATUS_REVOCATION_WARNING" : 4, 
    "TIMESTAMP_STATUS_REVOKED" : 5
};


Win32.NCRYPT_ALGORITHM_NAME_CLASS = {
    "NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE" : 3, 
    "NCRYPT_SECRET_AGREEMENT_INTERFACE" : 4, 
    "NCRYPT_SIGNATURE_INTERFACE" : 5
};


Win32.ECC_CURVE_TYPE_ENUM = {
    "BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE" : 1, 
    "BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE" : 2, 
    "BCRYPT_ECC_PRIME_MONTGOMERY_CURVE" : 3
};


Win32.ECC_CURVE_ALG_ID_ENUM = {
    "BCRYPT_NO_CURVE_GENERATION_ALG_ID" : 0
};


Win32.HASHALGORITHM_ENUM = {
    "DSA_HASH_ALGORITHM_SHA1" : 0, 
    "DSA_HASH_ALGORITHM_SHA256" : 1, 
    "DSA_HASH_ALGORITHM_SHA512" : 2
};


Win32.DSAFIPSVERSION_ENUM = {
    "DSA_FIPS186_2" : 0, 
    "DSA_FIPS186_3" : 1
};


Win32.BCRYPT_HASH_OPERATION_TYPE = {
    "BCRYPT_HASH_OPERATION_HASH_DATA" : 1, 
    "BCRYPT_HASH_OPERATION_FINISH_HASH" : 2
};


Win32.BCRYPT_MULTI_OPERATION_TYPE = {
    "BCRYPT_OPERATION_TYPE_HASH" : 1
};


Win32.CertKeyType = {
    "KeyTypeOther" : 0, 
    "KeyTypeVirtualSmartCard" : 1, 
    "KeyTypePhysicalSmartCard" : 2, 
    "KeyTypePassport" : 3, 
    "KeyTypePassportRemote" : 4, 
    "KeyTypePassportSmartCard" : 5, 
    "KeyTypeHardware" : 6, 
    "KeyTypeSoftware" : 7, 
    "KeyTypeSelfSigned" : 8
};


Win32.CRYPT_XML_CHARSET = {
    "CRYPT_XML_CHARSET_AUTO" : 0, 
    "CRYPT_XML_CHARSET_UTF8" : 1, 
    "CRYPT_XML_CHARSET_UTF16LE" : 2, 
    "CRYPT_XML_CHARSET_UTF16BE" : 3
};


Win32.CRYPT_XML_PROPERTY_ID = {
    "CRYPT_XML_PROPERTY_MAX_HEAP_SIZE" : 1, 
    "CRYPT_XML_PROPERTY_SIGNATURE_LOCATION" : 2, 
    "CRYPT_XML_PROPERTY_MAX_SIGNATURES" : 3, 
    "CRYPT_XML_PROPERTY_DOC_DECLARATION" : 4, 
    "CRYPT_XML_PROPERTY_XML_OUTPUT_CHARSET" : 5
};


Win32.CRYPT_XML_KEYINFO_SPEC = {
    "CRYPT_XML_KEYINFO_SPEC_NONE" : 0, 
    "CRYPT_XML_KEYINFO_SPEC_ENCODED" : 1, 
    "CRYPT_XML_KEYINFO_SPEC_PARAM" : 2
};


Win32.HandleType = {
    "Asymmetric" : 1, 
    "Symmetric" : 2, 
    "Transform" : 3, 
    "Hash" : 4
};


Win32.PaddingMode = {
    "None" : 1, 
    "PKCS7" : 2, 
    "Zeros" : 3, 
    "ANSIX923" : 4, 
    "ISO10126" : 5
};


Win32.Direction = {
    "DirectionEncrypt" : 1, 
    "DirectionDecrypt" : 2
};


Win32.CASetupProperty = {
    "ENUM_SETUPPROP_INVALID" : -1, 
    "ENUM_SETUPPROP_CATYPE" : 0, 
    "ENUM_SETUPPROP_CAKEYINFORMATION" : 1, 
    "ENUM_SETUPPROP_INTERACTIVE" : 2, 
    "ENUM_SETUPPROP_CANAME" : 3, 
    "ENUM_SETUPPROP_CADSSUFFIX" : 4, 
    "ENUM_SETUPPROP_VALIDITYPERIOD" : 5, 
    "ENUM_SETUPPROP_VALIDITYPERIODUNIT" : 6, 
    "ENUM_SETUPPROP_EXPIRATIONDATE" : 7, 
    "ENUM_SETUPPROP_PRESERVEDATABASE" : 8, 
    "ENUM_SETUPPROP_DATABASEDIRECTORY" : 9, 
    "ENUM_SETUPPROP_LOGDIRECTORY" : 10, 
    "ENUM_SETUPPROP_SHAREDFOLDER" : 11, 
    "ENUM_SETUPPROP_PARENTCAMACHINE" : 12, 
    "ENUM_SETUPPROP_PARENTCANAME" : 13, 
    "ENUM_SETUPPROP_REQUESTFILE" : 14, 
    "ENUM_SETUPPROP_WEBCAMACHINE" : 15, 
    "ENUM_SETUPPROP_WEBCANAME" : 16
};


Win32.MSCEPSetupProperty = {
    "ENUM_CEPSETUPPROP_USELOCALSYSTEM" : 0, 
    "ENUM_CEPSETUPPROP_USECHALLENGE" : 1, 
    "ENUM_CEPSETUPPROP_RANAME_CN" : 2, 
    "ENUM_CEPSETUPPROP_RANAME_EMAIL" : 3, 
    "ENUM_CEPSETUPPROP_RANAME_COMPANY" : 4, 
    "ENUM_CEPSETUPPROP_RANAME_DEPT" : 5, 
    "ENUM_CEPSETUPPROP_RANAME_CITY" : 6, 
    "ENUM_CEPSETUPPROP_RANAME_STATE" : 7, 
    "ENUM_CEPSETUPPROP_RANAME_COUNTRY" : 8, 
    "ENUM_CEPSETUPPROP_SIGNINGKEYINFORMATION" : 9, 
    "ENUM_CEPSETUPPROP_EXCHANGEKEYINFORMATION" : 10, 
    "ENUM_CEPSETUPPROP_CAINFORMATION" : 11, 
    "ENUM_CEPSETUPPROP_MSCEPURL" : 12, 
    "ENUM_CEPSETUPPROP_CHALLENGEURL" : 13
};


Win32.CESSetupProperty = {
    "ENUM_CESSETUPPROP_USE_IISAPPPOOLIDENTITY" : 0, 
    "ENUM_CESSETUPPROP_CACONFIG" : 1, 
    "ENUM_CESSETUPPROP_AUTHENTICATION" : 2, 
    "ENUM_CESSETUPPROP_SSLCERTHASH" : 3, 
    "ENUM_CESSETUPPROP_URL" : 4, 
    "ENUM_CESSETUPPROP_RENEWALONLY" : 5, 
    "ENUM_CESSETUPPROP_ALLOW_KEYBASED_RENEWAL" : 6
};


Win32.CEPSetupProperty = {
    "ENUM_CEPSETUPPROP_AUTHENTICATION" : 0, 
    "ENUM_CEPSETUPPROP_SSLCERTHASH" : 1, 
    "ENUM_CEPSETUPPROP_URL" : 2, 
    "ENUM_CEPSETUPPROP_KEYBASED_RENEWAL" : 3
};


Win32.HCRYPTASYNC = foreign.named_struct( "Windows.Win32.Security.Cryptography.HCRYPTASYNC", [ 
    "Value:ptr"
]); 


Win32.HCERTCHAINENGINE = foreign.named_struct( "Windows.Win32.Security.Cryptography.HCERTCHAINENGINE", [ 
    "Value:ptr"
]); 


Win32.BCRYPT_ALG_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_ALG_HANDLE", [ 
    "Value:ptr"
]); 


Win32.BCRYPT_KEY_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE", [ 
    "Value:ptr"
]); 


Win32.BCRYPT_HASH_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_HASH_HANDLE", [ 
    "Value:ptr"
]); 


Win32.BCRYPT_SECRET_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_SECRET_HANDLE", [ 
    "Value:ptr"
]); 


Win32.BCRYPT_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_HANDLE", [ 
    "Value:ptr"
]); 


Win32.NCRYPT_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_HANDLE", [ 
    "Value:ptr"
]); 


Win32.NCRYPT_PROV_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PROV_HANDLE", [ 
    "Value:ptr"
]); 


Win32.NCRYPT_KEY_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE", [ 
    "Value:ptr"
]); 


Win32.NCRYPT_HASH_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_HASH_HANDLE", [ 
    "Value:ptr"
]); 


Win32.NCRYPT_SECRET_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_SECRET_HANDLE", [ 
    "Value:ptr"
]); 


Win32.HCRYPTPROV_LEGACY = foreign.named_struct( "Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", [ 
    "Value:ptr"
]); 


Win32.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.HCRYPTPROV_OR_NCRYPT_KEY_HANDLE", [ 
    "Value:ptr"
]); 


Win32.HCERTSTORE = foreign.named_struct( "Windows.Win32.Security.Cryptography.HCERTSTORE", [ 
    "Value:ptr"
]); 


Win32.HCERTSTOREPROV = foreign.named_struct( "Windows.Win32.Security.Cryptography.HCERTSTOREPROV", [ 
    "Value:ptr"
]); 


Win32.CMS_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMS_KEY_INFO", [ 
    "dwVersion:uint", 
    "Algid:uint", 
    "pbOID:ptr", 
    "cbOID:uint"
]); 


Win32.HMAC_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.HMAC_INFO", [ 
    "HashAlgid:uint", 
    "pbInnerString:ptr", 
    "cbInnerString:uint", 
    "pbOuterString:ptr", 
    "cbOuterString:uint"
]); 


Win32.SCHANNEL_ALG = foreign.named_struct( "Windows.Win32.Security.Cryptography.SCHANNEL_ALG", [ 
    "dwUse:uint", 
    "Algid:uint", 
    "cBits:uint", 
    "dwFlags:uint", 
    "dwReserved:uint"
]); 


Win32.PROV_ENUMALGS = foreign.named_struct( "Windows.Win32.Security.Cryptography.PROV_ENUMALGS", [ 
    "aiAlgid:uint", 
    "dwBitLen:uint", 
    "dwNameLen:uint", 
    "szName[20]:Windows.Win32.Foundation.CHAR"
]); 


Win32.PROV_ENUMALGS_EX = foreign.named_struct( "Windows.Win32.Security.Cryptography.PROV_ENUMALGS_EX", [ 
    "aiAlgid:uint", 
    "dwDefaultLen:uint", 
    "dwMinLen:uint", 
    "dwMaxLen:uint", 
    "dwProtocols:uint", 
    "dwNameLen:uint", 
    "szName[20]:Windows.Win32.Foundation.CHAR", 
    "dwLongNameLen:uint", 
    "szLongName[40]:Windows.Win32.Foundation.CHAR"
]); 


Win32.PUBLICKEYSTRUC = foreign.named_struct( "Windows.Win32.Security.Cryptography.PUBLICKEYSTRUC", [ 
    "bType:ubyte", 
    "bVersion:ubyte", 
    "reserved:ushort", 
    "aiKeyAlg:uint"
]); 


Win32.RSAPUBKEY = foreign.named_struct( "Windows.Win32.Security.Cryptography.RSAPUBKEY", [ 
    "magic:uint", 
    "bitlen:uint", 
    "pubexp:uint"
]); 


Win32.PUBKEY = foreign.named_struct( "Windows.Win32.Security.Cryptography.PUBKEY", [ 
    "magic:uint", 
    "bitlen:uint"
]); 


Win32.DSSSEED = foreign.named_struct( "Windows.Win32.Security.Cryptography.DSSSEED", [ 
    "counter:uint", 
    "seed[20]:ubyte"
]); 


Win32.PUBKEYVER3 = foreign.named_struct( "Windows.Win32.Security.Cryptography.PUBKEYVER3", [ 
    "magic:uint", 
    "bitlenP:uint", 
    "bitlenQ:uint", 
    "bitlenJ:uint", 
    "DSSSeed:Windows.Win32.Security.Cryptography.DSSSEED"
]); 


Win32.PRIVKEYVER3 = foreign.named_struct( "Windows.Win32.Security.Cryptography.PRIVKEYVER3", [ 
    "magic:uint", 
    "bitlenP:uint", 
    "bitlenQ:uint", 
    "bitlenJ:uint", 
    "bitlenX:uint", 
    "DSSSeed:Windows.Win32.Security.Cryptography.DSSSEED"
]); 


Win32.KEY_TYPE_SUBTYPE = foreign.named_struct( "Windows.Win32.Security.Cryptography.KEY_TYPE_SUBTYPE", [ 
    "dwKeySpec:uint", 
    "Type:ptr", 
    "Subtype:ptr"
]); 


Win32.CERT_FORTEZZA_DATA_PROP = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_FORTEZZA_DATA_PROP", [ 
    "SerialNumber[8]:ubyte", 
    "CertIndex:int", 
    "CertLabel[36]:ubyte"
]); 


Win32.CRYPT_RC4_KEY_STATE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_RC4_KEY_STATE", [ 
    "Key[16]:ubyte", 
    "SBox[256]:ubyte", 
    "i:ubyte", 
    "j:ubyte"
]); 


Win32.CRYPT_DES_KEY_STATE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_DES_KEY_STATE", [ 
    "Key[8]:ubyte", 
    "IV[8]:ubyte", 
    "Feedback[8]:ubyte"
]); 


Win32.CRYPT_3DES_KEY_STATE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_3DES_KEY_STATE", [ 
    "Key[24]:ubyte", 
    "IV[8]:ubyte", 
    "Feedback[8]:ubyte"
]); 


Win32.CRYPT_AES_128_KEY_STATE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_AES_128_KEY_STATE", [ 
    "Key[16]:ubyte", 
    "IV[16]:ubyte", 
    "EncryptionState[176]:ubyte", 
    "DecryptionState[176]:ubyte", 
    "Feedback[16]:ubyte"
]); 


Win32.CRYPT_AES_256_KEY_STATE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_AES_256_KEY_STATE", [ 
    "Key[32]:ubyte", 
    "IV[16]:ubyte", 
    "EncryptionState[240]:ubyte", 
    "DecryptionState[240]:ubyte", 
    "Feedback[16]:ubyte"
]); 


Win32.CRYPTOAPI_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", [ 
    "cbData:uint", 
    "pbData:ptr"
]); 


Win32.CMS_DH_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMS_DH_KEY_INFO", [ 
    "dwVersion:uint", 
    "Algid:uint", 
    "pszContentEncObjId:str", 
    "PubInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pReserved:ptr"
]); 


Win32.BCRYPT_KEY_LENGTHS_STRUCT = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_KEY_LENGTHS_STRUCT", [ 
    "dwMinLength:uint", 
    "dwMaxLength:uint", 
    "dwIncrement:uint"
]); 


Win32.BCRYPT_OID = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_OID", [ 
    "cbOID:uint", 
    "pbOID:ptr"
]); 


Win32.BCRYPT_OID_LIST = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_OID_LIST", [ 
    "dwOIDCount:uint", 
    "pOIDs:ptr"
]); 


Win32.BCRYPT_PKCS1_PADDING_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_PKCS1_PADDING_INFO", [ 
    "pszAlgId:wstr"
]); 


Win32.BCRYPT_PSS_PADDING_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_PSS_PADDING_INFO", [ 
    "pszAlgId:wstr", 
    "cbSalt:uint"
]); 


Win32.BCRYPT_OAEP_PADDING_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_OAEP_PADDING_INFO", [ 
    "pszAlgId:wstr", 
    "pbLabel:ptr", 
    "cbLabel:uint"
]); 


Win32.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO", [ 
    "cbSize:uint", 
    "dwInfoVersion:uint", 
    "pbNonce:ptr", 
    "cbNonce:uint", 
    "pbAuthData:ptr", 
    "cbAuthData:uint", 
    "pbTag:ptr", 
    "cbTag:uint", 
    "pbMacContext:ptr", 
    "cbMacContext:uint", 
    "cbAAD:uint", 
    "cbData:ulong", 
    "dwFlags:uint"
]); 


Win32.BCryptBuffer = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCryptBuffer", [ 
    "cbBuffer:uint", 
    "BufferType:uint", 
    "pvBuffer:ptr"
]); 


Win32.BCryptBufferDesc = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCryptBufferDesc", [ 
    "ulVersion:uint", 
    "cBuffers:uint", 
    "pBuffers:ptr"
]); 


Win32.BCRYPT_KEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_KEY_BLOB", [ 
    "Magic:uint"
]); 


Win32.BCRYPT_RSAKEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_RSAKEY_BLOB", [ 
    "Magic:uint", 
    "BitLength:uint", 
    "cbPublicExp:uint", 
    "cbModulus:uint", 
    "cbPrime1:uint", 
    "cbPrime2:uint"
]); 


Win32.BCRYPT_ECCKEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_ECCKEY_BLOB", [ 
    "dwMagic:uint", 
    "cbKey:uint"
]); 


Win32.SSL_ECCKEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.SSL_ECCKEY_BLOB", [ 
    "dwCurveType:uint", 
    "cbKey:uint"
]); 


Win32.BCRYPT_ECCFULLKEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_ECCFULLKEY_BLOB", [ 
    "dwMagic:uint", 
    "dwVersion:uint", 
    "dwCurveType:int", 
    "dwCurveGenerationAlgId:int", 
    "cbFieldLength:uint", 
    "cbSubgroupOrder:uint", 
    "cbCofactor:uint", 
    "cbSeed:uint"
]); 


Win32.BCRYPT_DH_KEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_DH_KEY_BLOB", [ 
    "dwMagic:uint", 
    "cbKey:uint"
]); 


Win32.BCRYPT_DH_PARAMETER_HEADER = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_DH_PARAMETER_HEADER", [ 
    "cbLength:uint", 
    "dwMagic:uint", 
    "cbKeyLength:uint"
]); 


Win32.BCRYPT_DSA_KEY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_DSA_KEY_BLOB", [ 
    "dwMagic:uint", 
    "cbKey:uint", 
    "Count[4]:ubyte", 
    "Seed[20]:ubyte", 
    "q[20]:ubyte"
]); 


Win32.BCRYPT_DSA_KEY_BLOB_V2 = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_DSA_KEY_BLOB_V2", [ 
    "dwMagic:uint", 
    "cbKey:uint", 
    "hashAlgorithm:int", 
    "standardVersion:int", 
    "cbSeedLength:uint", 
    "cbGroupSize:uint", 
    "Count[4]:ubyte"
]); 


Win32.BCRYPT_KEY_DATA_BLOB_HEADER = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_KEY_DATA_BLOB_HEADER", [ 
    "dwMagic:uint", 
    "dwVersion:uint", 
    "cbKeyData:uint"
]); 


Win32.BCRYPT_DSA_PARAMETER_HEADER = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_DSA_PARAMETER_HEADER", [ 
    "cbLength:uint", 
    "dwMagic:uint", 
    "cbKeyLength:uint", 
    "Count[4]:ubyte", 
    "Seed[20]:ubyte", 
    "q[20]:ubyte"
]); 


Win32.BCRYPT_DSA_PARAMETER_HEADER_V2 = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_DSA_PARAMETER_HEADER_V2", [ 
    "cbLength:uint", 
    "dwMagic:uint", 
    "cbKeyLength:uint", 
    "hashAlgorithm:int", 
    "standardVersion:int", 
    "cbSeedLength:uint", 
    "cbGroupSize:uint", 
    "Count[4]:ubyte"
]); 


Win32.BCRYPT_ECC_CURVE_NAMES = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_ECC_CURVE_NAMES", [ 
    "dwEccCurveNames:uint", 
    "pEccCurveNames:ptr"
]); 


Win32.BCRYPT_MULTI_HASH_OPERATION = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_MULTI_HASH_OPERATION", [ 
    "iHash:uint", 
    "hashOperation:int", 
    "pbBuffer:ptr", 
    "cbBuffer:uint"
]); 


Win32.BCRYPT_MULTI_OBJECT_LENGTH_STRUCT = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_MULTI_OBJECT_LENGTH_STRUCT", [ 
    "cbPerObject:uint", 
    "cbPerElement:uint"
]); 


Win32.BCRYPT_ALGORITHM_IDENTIFIER = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_ALGORITHM_IDENTIFIER", [ 
    "pszName:wstr", 
    "dwClass:uint", 
    "dwFlags:uint"
]); 


Win32.BCRYPT_PROVIDER_NAME = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_PROVIDER_NAME", [ 
    "pszProviderName:wstr"
]); 


Win32.BCRYPT_INTERFACE_VERSION = foreign.named_struct( "Windows.Win32.Security.Cryptography.BCRYPT_INTERFACE_VERSION", [ 
    "MajorVersion:ushort", 
    "MinorVersion:ushort"
]); 


Win32.CRYPT_INTERFACE_REG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_INTERFACE_REG", [ 
    "dwInterface:uint", 
    "dwFlags:uint", 
    "cFunctions:uint", 
    "rgpszFunctions:ptr"
]); 


Win32.CRYPT_IMAGE_REG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REG", [ 
    "pszImage:wstr", 
    "cInterfaces:uint", 
    "rgpInterfaces:ptr"
]); 


Win32.CRYPT_PROVIDER_REG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REG", [ 
    "cAliases:uint", 
    "rgpszAliases:ptr", 
    "pUM:ptr", 
    "pKM:ptr"
]); 


Win32.CRYPT_PROVIDERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PROVIDERS", [ 
    "cProviders:uint", 
    "rgpszProviders:ptr"
]); 


Win32.CRYPT_CONTEXT_CONFIG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_CONFIG", [ 
    "dwFlags:uint", 
    "dwReserved:uint"
]); 


Win32.CRYPT_CONTEXT_FUNCTION_CONFIG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_CONFIG", [ 
    "dwFlags:uint", 
    "dwReserved:uint"
]); 


Win32.CRYPT_CONTEXTS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTEXTS", [ 
    "cContexts:uint", 
    "rgpszContexts:ptr"
]); 


Win32.CRYPT_CONTEXT_FUNCTIONS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTIONS", [ 
    "cFunctions:uint", 
    "rgpszFunctions:ptr"
]); 


Win32.CRYPT_CONTEXT_FUNCTION_PROVIDERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTEXT_FUNCTION_PROVIDERS", [ 
    "cProviders:uint", 
    "rgpszProviders:ptr"
]); 


Win32.CRYPT_PROPERTY_REF = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PROPERTY_REF", [ 
    "pszProperty:wstr", 
    "cbValue:uint", 
    "pbValue:ptr"
]); 


Win32.CRYPT_IMAGE_REF = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_IMAGE_REF", [ 
    "pszImage:wstr", 
    "dwFlags:uint"
]); 


Win32.CRYPT_PROVIDER_REF = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REF", [ 
    "dwInterface:uint", 
    "pszFunction:wstr", 
    "pszProvider:wstr", 
    "cProperties:uint", 
    "rgpProperties:ptr", 
    "pUM:ptr", 
    "pKM:ptr"
]); 


Win32.CRYPT_PROVIDER_REFS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PROVIDER_REFS", [ 
    "cProviders:uint", 
    "rgpProviders:ptr"
]); 


Win32.NCRYPT_ALLOC_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_ALLOC_PARA", [ 
    "cbSize:uint", 
    "pfnAlloc:ptr", 
    "pfnFree:ptr"
]); 


Win32.NCRYPT_CIPHER_PADDING_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_CIPHER_PADDING_INFO", [ 
    "cbSize:uint", 
    "dwFlags:uint", 
    "pbIV:ptr", 
    "cbIV:uint", 
    "pbOtherInfo:ptr", 
    "cbOtherInfo:uint"
]); 


Win32.NCRYPT_PLATFORM_ATTEST_PADDING_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PLATFORM_ATTEST_PADDING_INFO", [ 
    "magic:uint", 
    "pcrMask:uint"
]); 


Win32.NCRYPT_KEY_ATTEST_PADDING_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_KEY_ATTEST_PADDING_INFO", [ 
    "magic:uint", 
    "pbKeyBlob:ptr", 
    "cbKeyBlob:uint", 
    "pbKeyAuth:ptr", 
    "cbKeyAuth:uint"
]); 


Win32.NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES", [ 
    "Version:uint", 
    "Flags:uint", 
    "cbPublicKeyBlob:uint"
]); 


Win32.NCRYPT_VSM_KEY_ATTESTATION_STATEMENT = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_VSM_KEY_ATTESTATION_STATEMENT", [ 
    "Magic:uint", 
    "Version:uint", 
    "cbSignature:uint", 
    "cbReport:uint", 
    "cbAttributes:uint"
]); 


Win32.NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS", [ 
    "Version:uint", 
    "TrustletId:ulong", 
    "MinSvn:uint", 
    "FlagsMask:uint", 
    "FlagsExpected:uint", 
    "_bitfield:uint"
]); 


Win32.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER", [ 
    "Version:uint", 
    "KeyUsage:uint", 
    "_bitfield:uint", 
    "cbAlgName:uint", 
    "cbNonce:uint", 
    "cbAuthTag:uint", 
    "cbWrappingKey:uint", 
    "cbIsolatedKey:uint"
]); 


Win32.NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE", [ 
    "Header:Windows.Win32.Security.Cryptography.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER"
]); 


Win32.NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT", [ 
    "Magic:uint", 
    "Version:uint", 
    "HeaderSize:uint", 
    "cbCertifyInfo:uint", 
    "cbSignature:uint", 
    "cbTpmPublic:uint"
]); 


Win32.NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT", [ 
    "Magic:uint", 
    "Version:uint", 
    "pcrAlg:uint", 
    "cbSignature:uint", 
    "cbQuote:uint", 
    "cbPcrs:uint"
]); 


Win32.NCryptAlgorithmName = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCryptAlgorithmName", [ 
    "pszName:wstr", 
    "dwClass:uint", 
    "dwAlgOperations:uint", 
    "dwFlags:uint"
]); 


Win32.NCryptKeyName = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCryptKeyName", [ 
    "pszName:wstr", 
    "pszAlgid:wstr", 
    "dwLegacyKeySpec:uint", 
    "dwFlags:uint"
]); 


Win32.NCryptProviderName = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCryptProviderName", [ 
    "pszName:wstr", 
    "pszComment:wstr"
]); 


Win32.NCRYPT_UI_POLICY = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_UI_POLICY", [ 
    "dwVersion:uint", 
    "dwFlags:uint", 
    "pszCreationTitle:wstr", 
    "pszFriendlyName:wstr", 
    "pszDescription:wstr"
]); 


Win32.NCRYPT_KEY_ACCESS_POLICY_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_KEY_ACCESS_POLICY_BLOB", [ 
    "dwVersion:uint", 
    "dwPolicyFlags:uint", 
    "cbUserSid:uint", 
    "cbApplicationSid:uint"
]); 


Win32.NCRYPT_SUPPORTED_LENGTHS = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_SUPPORTED_LENGTHS", [ 
    "dwMinLength:uint", 
    "dwMaxLength:uint", 
    "dwIncrement:uint", 
    "dwDefaultLength:uint"
]); 


Win32.NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO", [ 
    "dwVersion:uint", 
    "iExpiration:int", 
    "pabNonce[32]:ubyte", 
    "pabPolicyRef[32]:ubyte", 
    "pabHMAC[32]:ubyte"
]); 


Win32.NCRYPT_PCP_TPM_FW_VERSION_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PCP_TPM_FW_VERSION_INFO", [ 
    "major1:ushort", 
    "major2:ushort", 
    "minor1:ushort", 
    "minor2:ushort"
]); 


Win32.NCRYPT_PCP_RAW_POLICYDIGEST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PCP_RAW_POLICYDIGEST_INFO", [ 
    "dwVersion:uint", 
    "cbDigest:uint"
]); 


Win32.NCRYPT_KEY_BLOB_HEADER = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_KEY_BLOB_HEADER", [ 
    "cbSize:uint", 
    "dwMagic:uint", 
    "cbAlgName:uint", 
    "cbKeyData:uint"
]); 


Win32.NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER", [ 
    "magic:uint", 
    "cbHeader:uint", 
    "cbPublic:uint", 
    "cbPrivate:uint", 
    "cbName:uint"
]); 


Win32.CRYPT_BIT_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", [ 
    "cbData:uint", 
    "pbData:ptr", 
    "cUnusedBits:uint"
]); 


Win32.CRYPT_ALGORITHM_IDENTIFIER = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", [ 
    "pszObjId:str", 
    "Parameters:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_OBJID_TABLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_OBJID_TABLE", [ 
    "dwAlgId:uint", 
    "pszObjId:str"
]); 


Win32.CRYPT_HASH_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_HASH_INFO", [ 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "Hash:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_EXTENSION = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_EXTENSION", [ 
    "pszObjId:str", 
    "fCritical:Windows.Win32.Foundation.BOOL", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_ATTRIBUTE_TYPE_VALUE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE_TYPE_VALUE", [ 
    "pszObjId:str", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_ATTRIBUTE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE", [ 
    "pszObjId:str", 
    "cValue:uint", 
    "rgValue:ptr"
]); 


Win32.CRYPT_ATTRIBUTES = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES", [ 
    "cAttr:uint", 
    "rgAttr:ptr"
]); 


Win32.CERT_RDN_ATTR = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_RDN_ATTR", [ 
    "pszObjId:str", 
    "dwValueType:uint", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_RDN = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_RDN", [ 
    "cRDNAttr:uint", 
    "rgRDNAttr:ptr"
]); 


Win32.CERT_NAME_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_NAME_INFO", [ 
    "cRDN:uint", 
    "rgRDN:ptr"
]); 


Win32.CERT_NAME_VALUE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_NAME_VALUE", [ 
    "dwValueType:uint", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_PUBLIC_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO", [ 
    "Algorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "PublicKey:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB"
]); 


Win32.CRYPT_ECC_PRIVATE_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ECC_PRIVATE_KEY_INFO", [ 
    "dwVersion:uint", 
    "PrivateKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "szCurveOid:str", 
    "PublicKey:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB"
]); 


Win32.CRYPT_PRIVATE_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PRIVATE_KEY_INFO", [ 
    "Version:uint", 
    "Algorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "PrivateKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pAttributes:ptr"
]); 


Win32.CRYPT_ENCRYPTED_PRIVATE_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ENCRYPTED_PRIVATE_KEY_INFO", [ 
    "EncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedPrivateKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_PKCS8_IMPORT_PARAMS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PKCS8_IMPORT_PARAMS", [ 
    "PrivateKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pResolvehCryptProvFunc:ptr", 
    "pVoidResolveFunc:ptr", 
    "pDecryptPrivateKeyFunc:ptr", 
    "pVoidDecryptFunc:ptr"
]); 


Win32.CRYPT_PKCS8_EXPORT_PARAMS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PKCS8_EXPORT_PARAMS", [ 
    "hCryptProv:ptr", 
    "dwKeySpec:uint", 
    "pszPrivateKeyObjId:str", 
    "pEncryptPrivateKeyFunc:ptr", 
    "pVoidEncryptFunc:ptr"
]); 


Win32.CERT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_INFO", [ 
    "dwVersion:uint", 
    "SerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SignatureAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "Issuer:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "NotBefore:Windows.Win32.Foundation.FILETIME", 
    "NotAfter:Windows.Win32.Foundation.FILETIME", 
    "Subject:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SubjectPublicKeyInfo:Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO", 
    "IssuerUniqueId:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "SubjectUniqueId:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CRL_ENTRY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_ENTRY", [ 
    "SerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "RevocationDate:Windows.Win32.Foundation.FILETIME", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CRL_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_INFO", [ 
    "dwVersion:uint", 
    "SignatureAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "Issuer:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "ThisUpdate:Windows.Win32.Foundation.FILETIME", 
    "NextUpdate:Windows.Win32.Foundation.FILETIME", 
    "cCRLEntry:uint", 
    "rgCRLEntry:ptr", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CERT_OR_CRL_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_OR_CRL_BLOB", [ 
    "dwChoice:uint", 
    "cbEncoded:uint", 
    "pbEncoded:ptr"
]); 


Win32.CERT_OR_CRL_BUNDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_OR_CRL_BUNDLE", [ 
    "cItem:uint", 
    "rgItem:ptr"
]); 


Win32.CERT_REQUEST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REQUEST_INFO", [ 
    "dwVersion:uint", 
    "Subject:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SubjectPublicKeyInfo:Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO", 
    "cAttribute:uint", 
    "rgAttribute:ptr"
]); 


Win32.CERT_KEYGEN_REQUEST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_KEYGEN_REQUEST_INFO", [ 
    "dwVersion:uint", 
    "SubjectPublicKeyInfo:Windows.Win32.Security.Cryptography.CERT_PUBLIC_KEY_INFO", 
    "pwszChallengeString:wstr"
]); 


Win32.CERT_SIGNED_CONTENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SIGNED_CONTENT_INFO", [ 
    "ToBeSigned:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SignatureAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "Signature:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB"
]); 


Win32.CTL_USAGE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_USAGE", [ 
    "cUsageIdentifier:uint", 
    "rgpszUsageIdentifier:ptr"
]); 


Win32.CTL_ENTRY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_ENTRY", [ 
    "SubjectIdentifier:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cAttribute:uint", 
    "rgAttribute:ptr"
]); 


Win32.CTL_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_INFO", [ 
    "dwVersion:uint", 
    "SubjectUsage:Windows.Win32.Security.Cryptography.CTL_USAGE", 
    "ListIdentifier:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SequenceNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "ThisUpdate:Windows.Win32.Foundation.FILETIME", 
    "NextUpdate:Windows.Win32.Foundation.FILETIME", 
    "SubjectAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "cCTLEntry:uint", 
    "rgCTLEntry:ptr", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CRYPT_TIME_STAMP_REQUEST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIME_STAMP_REQUEST_INFO", [ 
    "pszTimeStampAlgorithm:str", 
    "pszContentType:str", 
    "Content:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cAttribute:uint", 
    "rgAttribute:ptr"
]); 


Win32.CRYPT_ENROLLMENT_NAME_VALUE_PAIR = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ENROLLMENT_NAME_VALUE_PAIR", [ 
    "pwszName:wstr", 
    "pwszValue:wstr"
]); 


Win32.CRYPT_CSP_PROVIDER = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CSP_PROVIDER", [ 
    "dwKeySpec:uint", 
    "pwszProviderName:wstr", 
    "Signature:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB"
]); 


Win32.CRYPT_ENCODE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ENCODE_PARA", [ 
    "cbSize:uint", 
    "pfnAlloc:ptr", 
    "pfnFree:ptr"
]); 


Win32.CRYPT_DECODE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_DECODE_PARA", [ 
    "cbSize:uint", 
    "pfnAlloc:ptr", 
    "pfnFree:ptr"
]); 


Win32.CERT_EXTENSIONS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_EXTENSIONS", [ 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CERT_AUTHORITY_KEY_ID_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_AUTHORITY_KEY_ID_INFO", [ 
    "KeyId:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "CertIssuer:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "CertSerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_PRIVATE_KEY_VALIDITY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_PRIVATE_KEY_VALIDITY", [ 
    "NotBefore:Windows.Win32.Foundation.FILETIME", 
    "NotAfter:Windows.Win32.Foundation.FILETIME"
]); 


Win32.CERT_KEY_ATTRIBUTES_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_KEY_ATTRIBUTES_INFO", [ 
    "KeyId:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "IntendedKeyUsage:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "pPrivateKeyUsagePeriod:ptr"
]); 


Win32.CERT_POLICY_ID = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_ID", [ 
    "cCertPolicyElementId:uint", 
    "rgpszCertPolicyElementId:ptr"
]); 


Win32.CERT_KEY_USAGE_RESTRICTION_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_KEY_USAGE_RESTRICTION_INFO", [ 
    "cCertPolicyId:uint", 
    "rgCertPolicyId:ptr", 
    "RestrictedKeyUsage:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB"
]); 


Win32.CERT_OTHER_NAME = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_OTHER_NAME", [ 
    "pszObjId:str", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_ALT_NAME_ENTRY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY", [ 
    "dwAltNameChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CERT_ALT_NAME_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO", [ 
    "cAltEntry:uint", 
    "rgAltEntry:ptr"
]); 


Win32.CERT_BASIC_CONSTRAINTS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_BASIC_CONSTRAINTS_INFO", [ 
    "SubjectType:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "fPathLenConstraint:Windows.Win32.Foundation.BOOL", 
    "dwPathLenConstraint:uint", 
    "cSubtreesConstraint:uint", 
    "rgSubtreesConstraint:ptr"
]); 


Win32.CERT_BASIC_CONSTRAINTS2_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_BASIC_CONSTRAINTS2_INFO", [ 
    "fCA:Windows.Win32.Foundation.BOOL", 
    "fPathLenConstraint:Windows.Win32.Foundation.BOOL", 
    "dwPathLenConstraint:uint"
]); 


Win32.CERT_POLICY_QUALIFIER_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_QUALIFIER_INFO", [ 
    "pszPolicyQualifierId:str", 
    "Qualifier:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_POLICY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_INFO", [ 
    "pszPolicyIdentifier:str", 
    "cPolicyQualifier:uint", 
    "rgPolicyQualifier:ptr"
]); 


Win32.CERT_POLICIES_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICIES_INFO", [ 
    "cPolicyInfo:uint", 
    "rgPolicyInfo:ptr"
]); 


Win32.CERT_POLICY_QUALIFIER_NOTICE_REFERENCE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_QUALIFIER_NOTICE_REFERENCE", [ 
    "pszOrganization:str", 
    "cNoticeNumbers:uint", 
    "rgNoticeNumbers:ptr"
]); 


Win32.CERT_POLICY_QUALIFIER_USER_NOTICE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_QUALIFIER_USER_NOTICE", [ 
    "pNoticeReference:ptr", 
    "pszDisplayText:wstr"
]); 


Win32.CPS_URLS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CPS_URLS", [ 
    "pszURL:wstr", 
    "pAlgorithm:ptr", 
    "pDigest:ptr"
]); 


Win32.CERT_POLICY95_QUALIFIER1 = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY95_QUALIFIER1", [ 
    "pszPracticesReference:wstr", 
    "pszNoticeIdentifier:str", 
    "pszNSINoticeIdentifier:str", 
    "cCPSURLs:uint", 
    "rgCPSURLs:ptr"
]); 


Win32.CERT_POLICY_MAPPING = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_MAPPING", [ 
    "pszIssuerDomainPolicy:str", 
    "pszSubjectDomainPolicy:str"
]); 


Win32.CERT_POLICY_MAPPINGS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_MAPPINGS_INFO", [ 
    "cPolicyMapping:uint", 
    "rgPolicyMapping:ptr"
]); 


Win32.CERT_POLICY_CONSTRAINTS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_POLICY_CONSTRAINTS_INFO", [ 
    "fRequireExplicitPolicy:Windows.Win32.Foundation.BOOL", 
    "dwRequireExplicitPolicySkipCerts:uint", 
    "fInhibitPolicyMapping:Windows.Win32.Foundation.BOOL", 
    "dwInhibitPolicyMappingSkipCerts:uint"
]); 


Win32.CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY", [ 
    "pszObjId:str", 
    "cValue:uint", 
    "rgValue:ptr"
]); 


Win32.CRYPT_CONTENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CONTENT_INFO", [ 
    "pszObjId:str", 
    "Content:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_SEQUENCE_OF_ANY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_SEQUENCE_OF_ANY", [ 
    "cValue:uint", 
    "rgValue:ptr"
]); 


Win32.CERT_AUTHORITY_KEY_ID2_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_AUTHORITY_KEY_ID2_INFO", [ 
    "KeyId:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "AuthorityCertIssuer:Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO", 
    "AuthorityCertSerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_ACCESS_DESCRIPTION = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_ACCESS_DESCRIPTION", [ 
    "pszAccessMethod:str", 
    "AccessLocation:Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY"
]); 


Win32.CERT_AUTHORITY_INFO_ACCESS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_AUTHORITY_INFO_ACCESS", [ 
    "cAccDescr:uint", 
    "rgAccDescr:ptr"
]); 


Win32.CRL_DIST_POINT_NAME = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_DIST_POINT_NAME", [ 
    "dwDistPointNameChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CRL_DIST_POINT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_DIST_POINT", [ 
    "DistPointName:Windows.Win32.Security.Cryptography.CRL_DIST_POINT_NAME", 
    "ReasonFlags:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "CRLIssuer:Windows.Win32.Security.Cryptography.CERT_ALT_NAME_INFO"
]); 


Win32.CRL_DIST_POINTS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_DIST_POINTS_INFO", [ 
    "cDistPoint:uint", 
    "rgDistPoint:ptr"
]); 


Win32.CROSS_CERT_DIST_POINTS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CROSS_CERT_DIST_POINTS_INFO", [ 
    "dwSyncDeltaTime:uint", 
    "cDistPoint:uint", 
    "rgDistPoint:ptr"
]); 


Win32.CERT_PAIR = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_PAIR", [ 
    "Forward:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "Reverse:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRL_ISSUING_DIST_POINT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_ISSUING_DIST_POINT", [ 
    "DistPointName:Windows.Win32.Security.Cryptography.CRL_DIST_POINT_NAME", 
    "fOnlyContainsUserCerts:Windows.Win32.Foundation.BOOL", 
    "fOnlyContainsCACerts:Windows.Win32.Foundation.BOOL", 
    "OnlySomeReasonFlags:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "fIndirectCRL:Windows.Win32.Foundation.BOOL"
]); 


Win32.CERT_GENERAL_SUBTREE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_GENERAL_SUBTREE", [ 
    "Base:Windows.Win32.Security.Cryptography.CERT_ALT_NAME_ENTRY", 
    "dwMinimum:uint", 
    "fMaximum:Windows.Win32.Foundation.BOOL", 
    "dwMaximum:uint"
]); 


Win32.CERT_NAME_CONSTRAINTS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_NAME_CONSTRAINTS_INFO", [ 
    "cPermittedSubtree:uint", 
    "rgPermittedSubtree:ptr", 
    "cExcludedSubtree:uint", 
    "rgExcludedSubtree:ptr"
]); 


Win32.CERT_DSS_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_DSS_PARAMETERS", [ 
    "p:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "q:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "g:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_DH_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_DH_PARAMETERS", [ 
    "p:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "g:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_ECC_SIGNATURE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_ECC_SIGNATURE", [ 
    "r:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "s:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_X942_DH_VALIDATION_PARAMS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_X942_DH_VALIDATION_PARAMS", [ 
    "seed:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "pgenCounter:uint"
]); 


Win32.CERT_X942_DH_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_X942_DH_PARAMETERS", [ 
    "p:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "g:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "q:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "j:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pValidationParams:ptr"
]); 


Win32.CRYPT_X942_OTHER_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_X942_OTHER_INFO", [ 
    "pszContentEncryptionObjId:str", 
    "rgbCounter[4]:ubyte", 
    "rgbKeyLength[4]:ubyte", 
    "PubInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_ECC_CMS_SHARED_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ECC_CMS_SHARED_INFO", [ 
    "Algorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EntityUInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "rgbSuppPubInfo[4]:ubyte"
]); 


Win32.CRYPT_RC2_CBC_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_RC2_CBC_PARAMETERS", [ 
    "dwVersion:uint", 
    "fIV:Windows.Win32.Foundation.BOOL", 
    "rgbIV[8]:ubyte"
]); 


Win32.CRYPT_SMIME_CAPABILITY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_SMIME_CAPABILITY", [ 
    "pszObjId:str", 
    "Parameters:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_SMIME_CAPABILITIES = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_SMIME_CAPABILITIES", [ 
    "cCapability:uint", 
    "rgCapability:ptr"
]); 


Win32.CERT_QC_STATEMENT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_QC_STATEMENT", [ 
    "pszStatementId:str", 
    "StatementInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_QC_STATEMENTS_EXT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_QC_STATEMENTS_EXT_INFO", [ 
    "cStatement:uint", 
    "rgStatement:ptr"
]); 


Win32.CRYPT_MASK_GEN_ALGORITHM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM", [ 
    "pszObjId:str", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER"
]); 


Win32.CRYPT_RSA_SSA_PSS_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_RSA_SSA_PSS_PARAMETERS", [ 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "MaskGenAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM", 
    "dwSaltLength:uint", 
    "dwTrailerField:uint"
]); 


Win32.CRYPT_PSOURCE_ALGORITHM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PSOURCE_ALGORITHM", [ 
    "pszObjId:str", 
    "EncodingParameters:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_RSAES_OAEP_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_RSAES_OAEP_PARAMETERS", [ 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "MaskGenAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_MASK_GEN_ALGORITHM", 
    "PSourceAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_PSOURCE_ALGORITHM"
]); 


Win32.CMC_TAGGED_ATTRIBUTE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_TAGGED_ATTRIBUTE", [ 
    "dwBodyPartID:uint", 
    "Attribute:Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTE"
]); 


Win32.CMC_TAGGED_CERT_REQUEST = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_TAGGED_CERT_REQUEST", [ 
    "dwBodyPartID:uint", 
    "SignedCertRequest:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CMC_TAGGED_REQUEST = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_TAGGED_REQUEST", [ 
    "dwTaggedRequestChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CMC_TAGGED_CONTENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_TAGGED_CONTENT_INFO", [ 
    "dwBodyPartID:uint", 
    "EncodedContentInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CMC_TAGGED_OTHER_MSG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_TAGGED_OTHER_MSG", [ 
    "dwBodyPartID:uint", 
    "pszObjId:str", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CMC_DATA_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_DATA_INFO", [ 
    "cTaggedAttribute:uint", 
    "rgTaggedAttribute:ptr", 
    "cTaggedRequest:uint", 
    "rgTaggedRequest:ptr", 
    "cTaggedContentInfo:uint", 
    "rgTaggedContentInfo:ptr", 
    "cTaggedOtherMsg:uint", 
    "rgTaggedOtherMsg:ptr"
]); 


Win32.CMC_RESPONSE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_RESPONSE_INFO", [ 
    "cTaggedAttribute:uint", 
    "rgTaggedAttribute:ptr", 
    "cTaggedContentInfo:uint", 
    "rgTaggedContentInfo:ptr", 
    "cTaggedOtherMsg:uint", 
    "rgTaggedOtherMsg:ptr"
]); 


Win32.CMC_PEND_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_PEND_INFO", [ 
    "PendToken:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "PendTime:Windows.Win32.Foundation.FILETIME"
]); 


Win32.CMC_STATUS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_STATUS_INFO", [ 
    "dwStatus:uint", 
    "cBodyList:uint", 
    "rgdwBodyList:ptr", 
    "pwszStatusString:wstr", 
    "dwOtherInfoChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CMC_ADD_EXTENSIONS_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_ADD_EXTENSIONS_INFO", [ 
    "dwCmcDataReference:uint", 
    "cCertReference:uint", 
    "rgdwCertReference:ptr", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CMC_ADD_ATTRIBUTES_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMC_ADD_ATTRIBUTES_INFO", [ 
    "dwCmcDataReference:uint", 
    "cCertReference:uint", 
    "rgdwCertReference:ptr", 
    "cAttribute:uint", 
    "rgAttribute:ptr"
]); 


Win32.CERT_TEMPLATE_EXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_TEMPLATE_EXT", [ 
    "pszObjId:str", 
    "dwMajorVersion:uint", 
    "fMinorVersion:Windows.Win32.Foundation.BOOL", 
    "dwMinorVersion:uint"
]); 


Win32.CERT_HASHED_URL = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_HASHED_URL", [ 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "Hash:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pwszUrl:wstr"
]); 


Win32.CERT_LOGOTYPE_DETAILS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DETAILS", [ 
    "pwszMimeType:wstr", 
    "cHashedUrl:uint", 
    "rgHashedUrl:ptr"
]); 


Win32.CERT_LOGOTYPE_REFERENCE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_REFERENCE", [ 
    "cHashedUrl:uint", 
    "rgHashedUrl:ptr"
]); 


Win32.CERT_LOGOTYPE_IMAGE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE_INFO", [ 
    "dwLogotypeImageInfoChoice:uint", 
    "dwFileSize:uint", 
    "dwXSize:uint", 
    "dwYSize:uint", 
    "dwLogotypeImageResolutionChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "pwszLanguage:wstr"
]); 


Win32.CERT_LOGOTYPE_IMAGE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_IMAGE", [ 
    "LogotypeDetails:Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DETAILS", 
    "pLogotypeImageInfo:ptr"
]); 


Win32.CERT_LOGOTYPE_AUDIO_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_AUDIO_INFO", [ 
    "dwFileSize:uint", 
    "dwPlayTime:uint", 
    "dwChannels:uint", 
    "dwSampleRate:uint", 
    "pwszLanguage:wstr"
]); 


Win32.CERT_LOGOTYPE_AUDIO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_AUDIO", [ 
    "LogotypeDetails:Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DETAILS", 
    "pLogotypeAudioInfo:ptr"
]); 


Win32.CERT_LOGOTYPE_DATA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_DATA", [ 
    "cLogotypeImage:uint", 
    "rgLogotypeImage:ptr", 
    "cLogotypeAudio:uint", 
    "rgLogotypeAudio:ptr"
]); 


Win32.CERT_LOGOTYPE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_INFO", [ 
    "dwLogotypeInfoChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CERT_OTHER_LOGOTYPE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_OTHER_LOGOTYPE_INFO", [ 
    "pszObjId:str", 
    "LogotypeInfo:Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_INFO"
]); 


Win32.CERT_LOGOTYPE_EXT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LOGOTYPE_EXT_INFO", [ 
    "cCommunityLogo:uint", 
    "rgCommunityLogo:ptr", 
    "pIssuerLogo:ptr", 
    "pSubjectLogo:ptr", 
    "cOtherLogo:uint", 
    "rgOtherLogo:ptr"
]); 


Win32.CERT_BIOMETRIC_DATA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_BIOMETRIC_DATA", [ 
    "dwTypeOfBiometricDataChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "HashedUrl:Windows.Win32.Security.Cryptography.CERT_HASHED_URL"
]); 


Win32.CERT_BIOMETRIC_EXT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_BIOMETRIC_EXT_INFO", [ 
    "cBiometricData:uint", 
    "rgBiometricData:ptr"
]); 


Win32.OCSP_SIGNATURE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_SIGNATURE_INFO", [ 
    "SignatureAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "Signature:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "cCertEncoded:uint", 
    "rgCertEncoded:ptr"
]); 


Win32.OCSP_SIGNED_REQUEST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_SIGNED_REQUEST_INFO", [ 
    "ToBeSigned:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pOptionalSignatureInfo:ptr"
]); 


Win32.OCSP_CERT_ID = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_CERT_ID", [ 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "IssuerNameHash:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "IssuerKeyHash:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.OCSP_REQUEST_ENTRY = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_REQUEST_ENTRY", [ 
    "CertId:Windows.Win32.Security.Cryptography.OCSP_CERT_ID", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.OCSP_REQUEST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_REQUEST_INFO", [ 
    "dwVersion:uint", 
    "pRequestorName:ptr", 
    "cRequestEntry:uint", 
    "rgRequestEntry:ptr", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.OCSP_RESPONSE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_RESPONSE_INFO", [ 
    "dwStatus:uint", 
    "pszObjId:str", 
    "Value:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.OCSP_BASIC_SIGNED_RESPONSE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_BASIC_SIGNED_RESPONSE_INFO", [ 
    "ToBeSigned:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SignatureInfo:Windows.Win32.Security.Cryptography.OCSP_SIGNATURE_INFO"
]); 


Win32.OCSP_BASIC_REVOKED_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_BASIC_REVOKED_INFO", [ 
    "RevocationDate:Windows.Win32.Foundation.FILETIME", 
    "dwCrlReasonCode:uint"
]); 


Win32.OCSP_BASIC_RESPONSE_ENTRY = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_BASIC_RESPONSE_ENTRY", [ 
    "CertId:Windows.Win32.Security.Cryptography.OCSP_CERT_ID", 
    "dwCertStatus:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "ThisUpdate:Windows.Win32.Foundation.FILETIME", 
    "NextUpdate:Windows.Win32.Foundation.FILETIME", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.OCSP_BASIC_RESPONSE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.OCSP_BASIC_RESPONSE_INFO", [ 
    "dwVersion:uint", 
    "dwResponderIdChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "ProducedAt:Windows.Win32.Foundation.FILETIME", 
    "cResponseEntry:uint", 
    "rgResponseEntry:ptr", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CERT_SUPPORTED_ALGORITHM_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SUPPORTED_ALGORITHM_INFO", [ 
    "Algorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "IntendedKeyUsage:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "IntendedCertPolicies:Windows.Win32.Security.Cryptography.CERT_POLICIES_INFO"
]); 


Win32.CERT_TPM_SPECIFICATION_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_TPM_SPECIFICATION_INFO", [ 
    "pwszFamily:wstr", 
    "dwLevel:uint", 
    "dwRevision:uint"
]); 


Win32.CRYPT_OID_FUNC_ENTRY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_OID_FUNC_ENTRY", [ 
    "pszOID:str", 
    "pvFuncAddr:ptr"
]); 


Win32.CRYPT_OID_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_OID_INFO", [ 
    "cbSize:uint", 
    "pszOID:str", 
    "pwszName:wstr", 
    "dwGroupId:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "ExtraInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_STRONG_SIGN_SERIALIZED_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_SERIALIZED_INFO", [ 
    "dwFlags:uint", 
    "pwszCNGSignHashAlgids:wstr", 
    "pwszCNGPubKeyMinBitLengths:wstr"
]); 


Win32.CERT_STRONG_SIGN_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_STRONG_SIGN_PARA", [ 
    "cbSize:uint", 
    "dwInfoChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CERT_ISSUER_SERIAL_NUMBER = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_ISSUER_SERIAL_NUMBER", [ 
    "Issuer:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CERT_ID = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_ID", [ 
    "dwIdChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CMSG_SIGNER_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_SIGNER_ENCODE_INFO", [ 
    "cbSize:uint", 
    "pCertInfo:ptr", 
    "Anonymous:._Anonymous_e__Union", 
    "dwKeySpec:uint", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvHashAuxInfo:ptr", 
    "cAuthAttr:uint", 
    "rgAuthAttr:ptr", 
    "cUnauthAttr:uint", 
    "rgUnauthAttr:ptr"
]); 


Win32.CMSG_SIGNED_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO", [ 
    "cbSize:uint", 
    "cSigners:uint", 
    "rgSigners:ptr", 
    "cCertEncoded:uint", 
    "rgCertEncoded:ptr", 
    "cCrlEncoded:uint", 
    "rgCrlEncoded:ptr"
]); 


Win32.CMSG_ENVELOPED_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_ENVELOPED_ENCODE_INFO", [ 
    "cbSize:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "ContentEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvEncryptionAuxInfo:ptr", 
    "cRecipients:uint", 
    "rgpRecipients:ptr"
]); 


Win32.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO", [ 
    "cbSize:uint", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvKeyEncryptionAuxInfo:ptr", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "RecipientPublicKey:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "RecipientId:Windows.Win32.Security.Cryptography.CERT_ID"
]); 


Win32.CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO", [ 
    "cbSize:uint", 
    "RecipientPublicKey:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "RecipientId:Windows.Win32.Security.Cryptography.CERT_ID", 
    "Date:Windows.Win32.Foundation.FILETIME", 
    "pOtherAttr:ptr"
]); 


Win32.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO", [ 
    "cbSize:uint", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvKeyEncryptionAuxInfo:ptr", 
    "KeyWrapAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvKeyWrapAuxInfo:ptr", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "dwKeySpec:uint", 
    "dwKeyChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "UserKeyingMaterial:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cRecipientEncryptedKeys:uint", 
    "rgpRecipientEncryptedKeys:ptr"
]); 


Win32.CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO", [ 
    "cbSize:uint", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvKeyEncryptionAuxInfo:ptr", 
    "hCryptProv:ptr", 
    "dwKeyChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "KeyId:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "Date:Windows.Win32.Foundation.FILETIME", 
    "pOtherAttr:ptr"
]); 


Win32.CMSG_RECIPIENT_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_RECIPIENT_ENCODE_INFO", [ 
    "dwRecipientChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CMSG_RC2_AUX_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_RC2_AUX_INFO", [ 
    "cbSize:uint", 
    "dwBitLen:uint"
]); 


Win32.CMSG_SP3_COMPATIBLE_AUX_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_SP3_COMPATIBLE_AUX_INFO", [ 
    "cbSize:uint", 
    "dwFlags:uint"
]); 


Win32.CMSG_RC4_AUX_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_RC4_AUX_INFO", [ 
    "cbSize:uint", 
    "dwBitLen:uint"
]); 


Win32.CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO", [ 
    "cbSize:uint", 
    "SignedInfo:Windows.Win32.Security.Cryptography.CMSG_SIGNED_ENCODE_INFO", 
    "EnvelopedInfo:Windows.Win32.Security.Cryptography.CMSG_ENVELOPED_ENCODE_INFO"
]); 


Win32.CMSG_HASHED_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_HASHED_ENCODE_INFO", [ 
    "cbSize:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvHashAuxInfo:ptr"
]); 


Win32.CMSG_ENCRYPTED_ENCODE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_ENCRYPTED_ENCODE_INFO", [ 
    "cbSize:uint", 
    "ContentEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvEncryptionAuxInfo:ptr"
]); 


Win32.CMSG_STREAM_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_STREAM_INFO", [ 
    "cbContent:uint", 
    "pfnStreamOutput:ptr", 
    "pvArg:ptr"
]); 


Win32.CMSG_SIGNER_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_SIGNER_INFO", [ 
    "dwVersion:uint", 
    "Issuer:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "HashEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedHash:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "AuthAttrs:Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES", 
    "UnauthAttrs:Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES"
]); 


Win32.CMSG_CMS_SIGNER_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CMS_SIGNER_INFO", [ 
    "dwVersion:uint", 
    "SignerId:Windows.Win32.Security.Cryptography.CERT_ID", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "HashEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedHash:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "AuthAttrs:Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES", 
    "UnauthAttrs:Windows.Win32.Security.Cryptography.CRYPT_ATTRIBUTES"
]); 


Win32.CMSG_KEY_TRANS_RECIPIENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_RECIPIENT_INFO", [ 
    "dwVersion:uint", 
    "RecipientId:Windows.Win32.Security.Cryptography.CERT_ID", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CMSG_RECIPIENT_ENCRYPTED_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_RECIPIENT_ENCRYPTED_KEY_INFO", [ 
    "RecipientId:Windows.Win32.Security.Cryptography.CERT_ID", 
    "EncryptedKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "Date:Windows.Win32.Foundation.FILETIME", 
    "pOtherAttr:ptr"
]); 


Win32.CMSG_KEY_AGREE_RECIPIENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_RECIPIENT_INFO", [ 
    "dwVersion:uint", 
    "dwOriginatorChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "UserKeyingMaterial:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "cRecipientEncryptedKeys:uint", 
    "rgpRecipientEncryptedKeys:ptr"
]); 


Win32.CMSG_MAIL_LIST_RECIPIENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_RECIPIENT_INFO", [ 
    "dwVersion:uint", 
    "KeyId:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "Date:Windows.Win32.Foundation.FILETIME", 
    "pOtherAttr:ptr"
]); 


Win32.CMSG_CMS_RECIPIENT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CMS_RECIPIENT_INFO", [ 
    "dwRecipientChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA", [ 
    "cbSize:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "dwSignerIndex:uint", 
    "dwSignerType:uint", 
    "pvSigner:ptr"
]); 


Win32.CMSG_CTRL_DECRYPT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_DECRYPT_PARA", [ 
    "cbSize:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "dwKeySpec:uint", 
    "dwRecipientIndex:uint"
]); 


Win32.CMSG_CTRL_KEY_TRANS_DECRYPT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_KEY_TRANS_DECRYPT_PARA", [ 
    "cbSize:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "dwKeySpec:uint", 
    "pKeyTrans:ptr", 
    "dwRecipientIndex:uint"
]); 


Win32.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_KEY_AGREE_DECRYPT_PARA", [ 
    "cbSize:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "dwKeySpec:uint", 
    "pKeyAgree:ptr", 
    "dwRecipientIndex:uint", 
    "dwRecipientEncryptedKeyIndex:uint", 
    "OriginatorPublicKey:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB"
]); 


Win32.CMSG_CTRL_MAIL_LIST_DECRYPT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_MAIL_LIST_DECRYPT_PARA", [ 
    "cbSize:uint", 
    "hCryptProv:ptr", 
    "pMailList:ptr", 
    "dwRecipientIndex:uint", 
    "dwKeyChoice:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA", [ 
    "cbSize:uint", 
    "dwSignerIndex:uint", 
    "blob:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA", [ 
    "cbSize:uint", 
    "dwSignerIndex:uint", 
    "dwUnauthAttrIndex:uint"
]); 


Win32.CMSG_CONTENT_ENCRYPT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CONTENT_ENCRYPT_INFO", [ 
    "cbSize:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "ContentEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvEncryptionAuxInfo:ptr", 
    "cRecipients:uint", 
    "rgCmsRecipients:ptr", 
    "pfnAlloc:ptr", 
    "pfnFree:ptr", 
    "dwEncryptFlags:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "dwFlags:uint", 
    "fCNG:Windows.Win32.Foundation.BOOL", 
    "pbCNGContentEncryptKeyObject:ptr", 
    "pbContentEncryptKey:ptr", 
    "cbContentEncryptKey:uint"
]); 


Win32.CMSG_KEY_TRANS_ENCRYPT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_TRANS_ENCRYPT_INFO", [ 
    "cbSize:uint", 
    "dwRecipientIndex:uint", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "dwFlags:uint"
]); 


Win32.CMSG_KEY_AGREE_KEY_ENCRYPT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_KEY_ENCRYPT_INFO", [ 
    "cbSize:uint", 
    "EncryptedKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CMSG_KEY_AGREE_ENCRYPT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_KEY_AGREE_ENCRYPT_INFO", [ 
    "cbSize:uint", 
    "dwRecipientIndex:uint", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "UserKeyingMaterial:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "dwOriginatorChoice:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "cKeyAgreeKeyEncryptInfo:uint", 
    "rgpKeyAgreeKeyEncryptInfo:ptr", 
    "dwFlags:uint"
]); 


Win32.CMSG_MAIL_LIST_ENCRYPT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_MAIL_LIST_ENCRYPT_INFO", [ 
    "cbSize:uint", 
    "dwRecipientIndex:uint", 
    "KeyEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "EncryptedKey:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "dwFlags:uint"
]); 


Win32.CMSG_CNG_CONTENT_DECRYPT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSG_CNG_CONTENT_DECRYPT_INFO", [ 
    "cbSize:uint", 
    "ContentEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pfnAlloc:ptr", 
    "pfnFree:ptr", 
    "hNCryptKey:Windows.Win32.Security.Cryptography.NCRYPT_KEY_HANDLE", 
    "pbContentEncryptKey:ptr", 
    "cbContentEncryptKey:uint", 
    "hCNGContentEncryptKey:Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE", 
    "pbCNGContentEncryptKeyObject:ptr"
]); 


Win32.CERT_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CONTEXT", [ 
    "dwCertEncodingType:uint", 
    "pbCertEncoded:ptr", 
    "cbCertEncoded:uint", 
    "pCertInfo:ptr", 
    "hCertStore:Windows.Win32.Security.Cryptography.HCERTSTORE"
]); 


Win32.CRL_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_CONTEXT", [ 
    "dwCertEncodingType:uint", 
    "pbCrlEncoded:ptr", 
    "cbCrlEncoded:uint", 
    "pCrlInfo:ptr", 
    "hCertStore:Windows.Win32.Security.Cryptography.HCERTSTORE"
]); 


Win32.CTL_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_CONTEXT", [ 
    "dwMsgAndCertEncodingType:uint", 
    "pbCtlEncoded:ptr", 
    "cbCtlEncoded:uint", 
    "pCtlInfo:ptr", 
    "hCertStore:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "hCryptMsg:ptr", 
    "pbCtlContent:ptr", 
    "cbCtlContent:uint"
]); 


Win32.CRYPT_KEY_PROV_PARAM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_KEY_PROV_PARAM", [ 
    "dwParam:uint", 
    "pbData:ptr", 
    "cbData:uint", 
    "dwFlags:uint"
]); 


Win32.CRYPT_KEY_PROV_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_KEY_PROV_INFO", [ 
    "pwszContainerName:wstr", 
    "pwszProvName:wstr", 
    "dwProvType:uint", 
    "dwFlags:uint", 
    "cProvParam:uint", 
    "rgProvParam:ptr", 
    "dwKeySpec:uint"
]); 


Win32.CERT_KEY_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_KEY_CONTEXT", [ 
    "cbSize:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "dwKeySpec:uint"
]); 


Win32.ROOT_INFO_LUID = foreign.named_struct( "Windows.Win32.Security.Cryptography.ROOT_INFO_LUID", [ 
    "LowPart:uint", 
    "HighPart:int"
]); 


Win32.CRYPT_SMART_CARD_ROOT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_SMART_CARD_ROOT_INFO", [ 
    "rgbCardID[16]:ubyte", 
    "luid:Windows.Win32.Security.Cryptography.ROOT_INFO_LUID"
]); 


Win32.CERT_SYSTEM_STORE_RELOCATE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_RELOCATE_PARA", [ 
    "Anonymous1:._Anonymous1_e__Union", 
    "Anonymous2:._Anonymous2_e__Union"
]); 


Win32.CERT_REGISTRY_STORE_CLIENT_GPT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REGISTRY_STORE_CLIENT_GPT_PARA", [ 
    "hKeyBase:Windows.Win32.System.Registry.HKEY", 
    "pwszRegPath:wstr"
]); 


Win32.CERT_REGISTRY_STORE_ROAMING_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REGISTRY_STORE_ROAMING_PARA", [ 
    "hKey:Windows.Win32.System.Registry.HKEY", 
    "pwszStoreDirectory:wstr"
]); 


Win32.CERT_LDAP_STORE_OPENED_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_LDAP_STORE_OPENED_PARA", [ 
    "pvLdapSessionHandle:ptr", 
    "pwszLdapUrl:wstr"
]); 


Win32.CERT_STORE_PROV_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_STORE_PROV_INFO", [ 
    "cbSize:uint", 
    "cStoreProvFunc:uint", 
    "rgpvStoreProvFunc:ptr", 
    "hStoreProv:Windows.Win32.Security.Cryptography.HCERTSTOREPROV", 
    "dwStoreProvFlags:uint", 
    "hStoreProvFuncAddr2:ptr"
]); 


Win32.CERT_STORE_PROV_FIND_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_STORE_PROV_FIND_INFO", [ 
    "cbSize:uint", 
    "dwMsgAndCertEncodingType:uint", 
    "dwFindFlags:uint", 
    "dwFindType:uint", 
    "pvFindPara:ptr"
]); 


Win32.CRL_FIND_ISSUED_FOR_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_FIND_ISSUED_FOR_PARA", [ 
    "pSubjectCert:ptr", 
    "pIssuerCert:ptr"
]); 


Win32.CTL_ANY_SUBJECT_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_ANY_SUBJECT_INFO", [ 
    "SubjectAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "SubjectIdentifier:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CTL_FIND_USAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_FIND_USAGE_PARA", [ 
    "cbSize:uint", 
    "SubjectUsage:Windows.Win32.Security.Cryptography.CTL_USAGE", 
    "ListIdentifier:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pSigner:ptr"
]); 


Win32.CTL_FIND_SUBJECT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_FIND_SUBJECT_PARA", [ 
    "cbSize:uint", 
    "pUsagePara:ptr", 
    "dwSubjectType:uint", 
    "pvSubject:ptr"
]); 


Win32.CERT_CREATE_CONTEXT_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CREATE_CONTEXT_PARA", [ 
    "cbSize:uint", 
    "pfnFree:ptr", 
    "pvFree:ptr", 
    "pfnSort:ptr", 
    "pvSort:ptr"
]); 


Win32.CERT_SYSTEM_STORE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SYSTEM_STORE_INFO", [ 
    "cbSize:uint"
]); 


Win32.CERT_PHYSICAL_STORE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_PHYSICAL_STORE_INFO", [ 
    "cbSize:uint", 
    "pszOpenStoreProvider:str", 
    "dwOpenEncodingType:uint", 
    "dwOpenFlags:uint", 
    "OpenParameters:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "dwFlags:uint", 
    "dwPriority:uint"
]); 


Win32.CTL_VERIFY_USAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_VERIFY_USAGE_PARA", [ 
    "cbSize:uint", 
    "ListIdentifier:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cCtlStore:uint", 
    "rghCtlStore:ptr", 
    "cSignerStore:uint", 
    "rghSignerStore:ptr"
]); 


Win32.CTL_VERIFY_USAGE_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_VERIFY_USAGE_STATUS", [ 
    "cbSize:uint", 
    "dwError:uint", 
    "dwFlags:uint", 
    "ppCtl:ptr", 
    "dwCtlEntryIndex:uint", 
    "ppSigner:ptr", 
    "dwSignerIndex:uint"
]); 


Win32.CERT_REVOCATION_CRL_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REVOCATION_CRL_INFO", [ 
    "cbSize:uint", 
    "pBaseCrlContext:ptr", 
    "pDeltaCrlContext:ptr", 
    "pCrlEntry:ptr", 
    "fDeltaCrlEntry:Windows.Win32.Foundation.BOOL"
]); 


Win32.CERT_REVOCATION_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REVOCATION_PARA", [ 
    "cbSize:uint", 
    "pIssuerCert:ptr", 
    "cCertStore:uint", 
    "rgCertStore:ptr", 
    "hCrlStore:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "pftTimeToUse:ptr"
]); 


Win32.CERT_REVOCATION_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REVOCATION_STATUS", [ 
    "cbSize:uint", 
    "dwIndex:uint", 
    "dwError:uint", 
    "dwReason:uint", 
    "fHasFreshnessTime:Windows.Win32.Foundation.BOOL", 
    "dwFreshnessTime:uint"
]); 


Win32.CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO", [ 
    "CertSignHashCNGAlgPropData:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "CertIssuerPubKeyBitLengthPropData:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO", [ 
    "cCNGHashAlgid:uint", 
    "rgpwszCNGHashAlgid:ptr", 
    "dwWeakIndex:uint"
]); 


Win32.CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA", [ 
    "cOID:uint", 
    "rgpszOID:ptr"
]); 


Win32.CRYPT_SIGN_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_SIGN_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgEncodingType:uint", 
    "pSigningCert:ptr", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvHashAuxInfo:ptr", 
    "cMsgCert:uint", 
    "rgpMsgCert:ptr", 
    "cMsgCrl:uint", 
    "rgpMsgCrl:ptr", 
    "cAuthAttr:uint", 
    "rgAuthAttr:ptr", 
    "cUnauthAttr:uint", 
    "rgUnauthAttr:ptr", 
    "dwFlags:uint", 
    "dwInnerContentType:uint"
]); 


Win32.CRYPT_VERIFY_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_VERIFY_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgAndCertEncodingType:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "pfnGetSignerCertificate:ptr", 
    "pvGetArg:ptr"
]); 


Win32.CRYPT_ENCRYPT_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ENCRYPT_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgEncodingType:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "ContentEncryptionAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvEncryptionAuxInfo:ptr", 
    "dwFlags:uint", 
    "dwInnerContentType:uint"
]); 


Win32.CRYPT_DECRYPT_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_DECRYPT_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgAndCertEncodingType:uint", 
    "cCertStore:uint", 
    "rghCertStore:ptr"
]); 


Win32.CRYPT_HASH_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_HASH_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgEncodingType:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvHashAuxInfo:ptr"
]); 


Win32.CRYPT_KEY_SIGN_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_KEY_SIGN_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgAndCertEncodingType:uint", 
    "Anonymous:._Anonymous_e__Union", 
    "dwKeySpec:uint", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "pvHashAuxInfo:ptr", 
    "PubKeyAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER"
]); 


Win32.CRYPT_KEY_VERIFY_MESSAGE_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_KEY_VERIFY_MESSAGE_PARA", [ 
    "cbSize:uint", 
    "dwMsgEncodingType:uint", 
    "hCryptProv:Windows.Win32.Security.Cryptography.HCRYPTPROV_LEGACY"
]); 


Win32.CERT_CHAIN = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN", [ 
    "cCerts:uint", 
    "certs:ptr", 
    "keyLocatorInfo:Windows.Win32.Security.Cryptography.CRYPT_KEY_PROV_INFO"
]); 


Win32.CRYPT_BLOB_ARRAY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_BLOB_ARRAY", [ 
    "cBlob:uint", 
    "rgBlob:ptr"
]); 


Win32.CRYPT_CREDENTIALS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_CREDENTIALS", [ 
    "cbSize:uint", 
    "pszCredentialsOid:str", 
    "pvCredentials:ptr"
]); 


Win32.CRYPT_PASSWORD_CREDENTIALSA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PASSWORD_CREDENTIALSA", [ 
    "cbSize:uint", 
    "pszUsername:str", 
    "pszPassword:str"
]); 


Win32.CRYPT_PASSWORD_CREDENTIALSW = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PASSWORD_CREDENTIALSW", [ 
    "cbSize:uint", 
    "pszUsername:wstr", 
    "pszPassword:wstr"
]); 


Win32.CRYPTNET_URL_CACHE_PRE_FETCH_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPTNET_URL_CACHE_PRE_FETCH_INFO", [ 
    "cbSize:uint", 
    "dwObjectType:uint", 
    "dwError:uint", 
    "dwReserved:uint", 
    "ThisUpdateTime:Windows.Win32.Foundation.FILETIME", 
    "NextUpdateTime:Windows.Win32.Foundation.FILETIME", 
    "PublishTime:Windows.Win32.Foundation.FILETIME"
]); 


Win32.CRYPTNET_URL_CACHE_FLUSH_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPTNET_URL_CACHE_FLUSH_INFO", [ 
    "cbSize:uint", 
    "dwExemptSeconds:uint", 
    "ExpireTime:Windows.Win32.Foundation.FILETIME"
]); 


Win32.CRYPTNET_URL_CACHE_RESPONSE_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPTNET_URL_CACHE_RESPONSE_INFO", [ 
    "cbSize:uint", 
    "wResponseType:ushort", 
    "wResponseFlags:ushort", 
    "LastModifiedTime:Windows.Win32.Foundation.FILETIME", 
    "dwMaxAge:uint", 
    "pwszETag:wstr", 
    "dwProxyId:uint"
]); 


Win32.CRYPT_RETRIEVE_AUX_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_RETRIEVE_AUX_INFO", [ 
    "cbSize:uint", 
    "pLastSyncTime:ptr", 
    "dwMaxUrlRetrievalByteCount:uint", 
    "pPreFetchInfo:ptr", 
    "pFlushInfo:ptr", 
    "ppResponseInfo:ptr", 
    "pwszCacheFileNamePrefix:wstr", 
    "pftCacheResync:ptr", 
    "fProxyCacheRetrieval:Windows.Win32.Foundation.BOOL", 
    "dwHttpStatusCode:uint", 
    "ppwszErrorResponseHeaders:ptr", 
    "ppErrorContentBlob:ptr"
]); 


Win32.CRYPT_ASYNC_RETRIEVAL_COMPLETION = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_ASYNC_RETRIEVAL_COMPLETION", [ 
    "pfnCompletion:ptr", 
    "pvCompletion:ptr"
]); 


Win32.CRYPT_URL_ARRAY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_URL_ARRAY", [ 
    "cUrl:uint", 
    "rgwszUrl:ptr"
]); 


Win32.CRYPT_URL_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_URL_INFO", [ 
    "cbSize:uint", 
    "dwSyncDeltaTime:uint", 
    "cGroup:uint", 
    "rgcGroupEntry:ptr"
]); 


Win32.CERT_CRL_CONTEXT_PAIR = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CRL_CONTEXT_PAIR", [ 
    "pCertContext:ptr", 
    "pCrlContext:ptr"
]); 


Win32.CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO", [ 
    "cbSize:uint", 
    "iDeltaCrlIndicator:int", 
    "pftCacheResync:ptr", 
    "pLastSyncTime:ptr", 
    "pMaxAgeTime:ptr", 
    "pChainPara:ptr", 
    "pDeltaCrlIndicator:ptr"
]); 


Win32.CERT_CHAIN_ENGINE_CONFIG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_ENGINE_CONFIG", [ 
    "cbSize:uint", 
    "hRestrictedRoot:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "hRestrictedTrust:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "hRestrictedOther:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "cAdditionalStore:uint", 
    "rghAdditionalStore:ptr", 
    "dwFlags:uint", 
    "dwUrlRetrievalTimeout:uint", 
    "MaximumCachedCertificates:uint", 
    "CycleDetectionModulus:uint", 
    "hExclusiveRoot:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "hExclusiveTrustedPeople:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "dwExclusiveFlags:uint"
]); 


Win32.CERT_TRUST_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS", [ 
    "dwErrorStatus:uint", 
    "dwInfoStatus:uint"
]); 


Win32.CERT_REVOCATION_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REVOCATION_INFO", [ 
    "cbSize:uint", 
    "dwRevocationResult:uint", 
    "pszRevocationOid:str", 
    "pvOidSpecificInfo:ptr", 
    "fHasFreshnessTime:Windows.Win32.Foundation.BOOL", 
    "dwFreshnessTime:uint", 
    "pCrlInfo:ptr"
]); 


Win32.CERT_TRUST_LIST_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_TRUST_LIST_INFO", [ 
    "cbSize:uint", 
    "pCtlEntry:ptr", 
    "pCtlContext:ptr"
]); 


Win32.CERT_CHAIN_ELEMENT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_ELEMENT", [ 
    "cbSize:uint", 
    "pCertContext:ptr", 
    "TrustStatus:Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS", 
    "pRevocationInfo:ptr", 
    "pIssuanceUsage:ptr", 
    "pApplicationUsage:ptr", 
    "pwszExtendedErrorInfo:wstr"
]); 


Win32.CERT_SIMPLE_CHAIN = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SIMPLE_CHAIN", [ 
    "cbSize:uint", 
    "TrustStatus:Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS", 
    "cElement:uint", 
    "rgpElement:ptr", 
    "pTrustListInfo:ptr", 
    "fHasRevocationFreshnessTime:Windows.Win32.Foundation.BOOL", 
    "dwRevocationFreshnessTime:uint"
]); 


Win32.CERT_CHAIN_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_CONTEXT", [ 
    "cbSize:uint", 
    "TrustStatus:Windows.Win32.Security.Cryptography.CERT_TRUST_STATUS", 
    "cChain:uint", 
    "rgpChain:ptr", 
    "cLowerQualityChainContext:uint", 
    "rgpLowerQualityChainContext:ptr", 
    "fHasRevocationFreshnessTime:Windows.Win32.Foundation.BOOL", 
    "dwRevocationFreshnessTime:uint", 
    "dwCreateFlags:uint", 
    "ChainId:ptr"
]); 


Win32.CERT_USAGE_MATCH = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_USAGE_MATCH", [ 
    "dwType:uint", 
    "Usage:Windows.Win32.Security.Cryptography.CTL_USAGE"
]); 


Win32.CTL_USAGE_MATCH = foreign.named_struct( "Windows.Win32.Security.Cryptography.CTL_USAGE_MATCH", [ 
    "dwType:uint", 
    "Usage:Windows.Win32.Security.Cryptography.CTL_USAGE"
]); 


Win32.CERT_CHAIN_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_PARA", [ 
    "cbSize:uint", 
    "RequestedUsage:Windows.Win32.Security.Cryptography.CERT_USAGE_MATCH"
]); 


Win32.CERT_REVOCATION_CHAIN_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_REVOCATION_CHAIN_PARA", [ 
    "cbSize:uint", 
    "hChainEngine:Windows.Win32.Security.Cryptography.HCERTCHAINENGINE", 
    "hAdditionalStore:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "dwChainFlags:uint", 
    "dwUrlRetrievalTimeout:uint", 
    "pftCurrentTime:ptr", 
    "pftCacheResync:ptr", 
    "cbMaxUrlRetrievalByteCount:uint"
]); 


Win32.CRL_REVOCATION_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRL_REVOCATION_INFO", [ 
    "pCrlEntry:ptr", 
    "pCrlContext:ptr", 
    "pCrlIssuerChain:ptr"
]); 


Win32.CERT_CHAIN_FIND_BY_ISSUER_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_FIND_BY_ISSUER_PARA", [ 
    "cbSize:uint", 
    "pszUsageIdentifier:str", 
    "dwKeySpec:uint", 
    "dwAcquirePrivateKeyFlags:uint", 
    "cIssuer:uint", 
    "rgIssuer:ptr", 
    "pfnFindCallback:ptr", 
    "pvFindArg:ptr"
]); 


Win32.CERT_CHAIN_POLICY_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_PARA", [ 
    "cbSize:uint", 
    "dwFlags:uint", 
    "pvExtraPolicyPara:ptr"
]); 


Win32.CERT_CHAIN_POLICY_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_CHAIN_POLICY_STATUS", [ 
    "cbSize:uint", 
    "dwError:uint", 
    "lChainIndex:int", 
    "lElementIndex:int", 
    "pvExtraPolicyStatus:ptr"
]); 


Win32.AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA", [ 
    "cbSize:uint", 
    "dwRegPolicySettings:uint", 
    "pSignerInfo:ptr"
]); 


Win32.AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS", [ 
    "cbSize:uint", 
    "fCommercial:Windows.Win32.Foundation.BOOL"
]); 


Win32.AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA", [ 
    "cbSize:uint", 
    "dwRegPolicySettings:uint", 
    "fCommercial:Windows.Win32.Foundation.BOOL"
]); 


Win32.HTTPSPolicyCallbackData = foreign.named_struct( "Windows.Win32.Security.Cryptography.HTTPSPolicyCallbackData", [ 
    "Anonymous:._Anonymous_e__Union", 
    "dwAuthType:uint", 
    "fdwChecks:uint", 
    "pwszServerName:wstr"
]); 


Win32.EV_EXTRA_CERT_CHAIN_POLICY_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.EV_EXTRA_CERT_CHAIN_POLICY_PARA", [ 
    "cbSize:uint", 
    "dwRootProgramQualifierFlags:uint"
]); 


Win32.EV_EXTRA_CERT_CHAIN_POLICY_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.EV_EXTRA_CERT_CHAIN_POLICY_STATUS", [ 
    "cbSize:uint", 
    "dwQualifiers:uint", 
    "dwIssuanceUsageIndex:uint"
]); 


Win32.SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS", [ 
    "cbSize:uint", 
    "dwErrorLevel:uint", 
    "dwErrorCategory:uint", 
    "dwReserved:uint", 
    "wszErrorText[256]:short"
]); 


Win32.SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA", [ 
    "cbSize:uint", 
    "dwReserved:uint", 
    "pwszServerName:wstr", 
    "rgpszHpkpValue[2]:str"
]); 


Win32.SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA", [ 
    "cbSize:uint", 
    "dwReserved:uint", 
    "pwszServerName:wstr"
]); 


Win32.SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS", [ 
    "cbSize:uint", 
    "lError:int", 
    "wszErrorText[512]:short"
]); 


Win32.CRYPT_PKCS12_PBE_PARAMS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_PKCS12_PBE_PARAMS", [ 
    "iIterations:int", 
    "cbSalt:uint"
]); 


Win32.PKCS12_PBES2_EXPORT_PARAMS = foreign.named_struct( "Windows.Win32.Security.Cryptography.PKCS12_PBES2_EXPORT_PARAMS", [ 
    "dwSize:uint", 
    "hNcryptDescriptor:ptr", 
    "pwszPbes2Alg:wstr"
]); 


Win32.CERT_SERVER_OCSP_RESPONSE_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_CONTEXT", [ 
    "cbSize:uint", 
    "pbEncodedOcspResponse:ptr", 
    "cbEncodedOcspResponse:uint"
]); 


Win32.CERT_SERVER_OCSP_RESPONSE_OPEN_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SERVER_OCSP_RESPONSE_OPEN_PARA", [ 
    "cbSize:uint", 
    "dwFlags:uint", 
    "pcbUsedSize:ptr", 
    "pwszOcspDirectory:wstr", 
    "pfnUpdateCallback:ptr", 
    "pvUpdateCallbackArg:ptr"
]); 


Win32.CERT_SELECT_CHAIN_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SELECT_CHAIN_PARA", [ 
    "hChainEngine:Windows.Win32.Security.Cryptography.HCERTCHAINENGINE", 
    "pTime:ptr", 
    "hAdditionalStore:Windows.Win32.Security.Cryptography.HCERTSTORE", 
    "pChainPara:ptr", 
    "dwFlags:uint"
]); 


Win32.CERT_SELECT_CRITERIA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERT_SELECT_CRITERIA", [ 
    "dwType:uint", 
    "cPara:uint", 
    "ppPara:ptr"
]); 


Win32.CRYPT_TIMESTAMP_REQUEST = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_REQUEST", [ 
    "dwVersion:uint", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "HashedMessage:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pszTSAPolicyId:str", 
    "Nonce:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "fCertReq:Windows.Win32.Foundation.BOOL", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CRYPT_TIMESTAMP_RESPONSE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_RESPONSE", [ 
    "dwStatus:uint", 
    "cFreeText:uint", 
    "rgFreeText:ptr", 
    "FailureInfo:Windows.Win32.Security.Cryptography.CRYPT_BIT_BLOB", 
    "ContentInfo:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.CRYPT_TIMESTAMP_ACCURACY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_ACCURACY", [ 
    "dwSeconds:uint", 
    "dwMillis:uint", 
    "dwMicros:uint"
]); 


Win32.CRYPT_TIMESTAMP_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_INFO", [ 
    "dwVersion:uint", 
    "pszTSAPolicyId:str", 
    "HashAlgorithm:Windows.Win32.Security.Cryptography.CRYPT_ALGORITHM_IDENTIFIER", 
    "HashedMessage:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "SerialNumber:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "ftTime:Windows.Win32.Foundation.FILETIME", 
    "pvAccuracy:ptr", 
    "fOrdering:Windows.Win32.Foundation.BOOL", 
    "Nonce:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "Tsa:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CRYPT_TIMESTAMP_CONTEXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_CONTEXT", [ 
    "cbEncoded:uint", 
    "pbEncoded:ptr", 
    "pTimeStamp:ptr"
]); 


Win32.CRYPT_TIMESTAMP_PARA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_TIMESTAMP_PARA", [ 
    "pszTSAPolicyId:str", 
    "fRequestCerts:Windows.Win32.Foundation.BOOL", 
    "Nonce:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cExtension:uint", 
    "rgExtension:ptr"
]); 


Win32.CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE", [ 
    "cbSize:uint", 
    "pfnGet:ptr", 
    "pfnRelease:ptr", 
    "pfnFreePassword:ptr", 
    "pfnFree:ptr", 
    "pfnFreeIdentifier:ptr"
]); 


Win32.CRYPTPROTECT_PROMPTSTRUCT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPTPROTECT_PROMPTSTRUCT", [ 
    "cbSize:uint", 
    "dwPromptFlags:uint", 
    "hwndApp:Windows.Win32.Foundation.HWND", 
    "szPrompt:wstr"
]); 


Win32.NCRYPT_PROTECT_STREAM_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO", [ 
    "pfnStreamOutput:ptr", 
    "pvCallbackCtxt:ptr"
]); 


Win32.NCRYPT_PROTECT_STREAM_INFO_EX = foreign.named_struct( "Windows.Win32.Security.Cryptography.NCRYPT_PROTECT_STREAM_INFO_EX", [ 
    "pfnStreamOutput:ptr", 
    "pvCallbackCtxt:ptr"
]); 


Win32.CRYPT_XML_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB", [ 
    "dwCharset:int", 
    "cbData:uint", 
    "pbData:ptr"
]); 


Win32.CRYPT_XML_DATA_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", [ 
    "cbData:uint", 
    "pbData:ptr"
]); 


Win32.CRYPT_XML_PROPERTY = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_PROPERTY", [ 
    "dwPropId:int", 
    "pvValue:ptr", 
    "cbValue:uint"
]); 


Win32.CRYPT_XML_DATA_PROVIDER = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_PROVIDER", [ 
    "pvCallbackState:ptr", 
    "cbBufferSize:uint", 
    "pfnRead:ptr", 
    "pfnClose:ptr"
]); 


Win32.CRYPT_XML_STATUS = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_STATUS", [ 
    "cbSize:uint", 
    "dwErrorStatus:uint", 
    "dwInfoStatus:uint"
]); 


Win32.CRYPT_XML_ALGORITHM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM", [ 
    "cbSize:uint", 
    "wszAlgorithm:wstr", 
    "Encoded:Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB"
]); 


Win32.CRYPT_XML_TRANSFORM_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_INFO", [ 
    "cbSize:uint", 
    "wszAlgorithm:wstr", 
    "cbBufferSize:uint", 
    "dwFlags:uint", 
    "pfnCreateTransform:ptr"
]); 


Win32.CRYPT_XML_TRANSFORM_CHAIN_CONFIG = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_TRANSFORM_CHAIN_CONFIG", [ 
    "cbSize:uint", 
    "cTransformInfo:uint", 
    "rgpTransformInfo:ptr"
]); 


Win32.CRYPT_XML_KEY_DSA_KEY_VALUE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_DSA_KEY_VALUE", [ 
    "P:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "Q:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "G:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "Y:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "J:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "Seed:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "Counter:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB"
]); 


Win32.CRYPT_XML_KEY_ECDSA_KEY_VALUE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_ECDSA_KEY_VALUE", [ 
    "wszNamedCurve:wstr", 
    "X:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "Y:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "ExplicitPara:Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB"
]); 


Win32.CRYPT_XML_KEY_RSA_KEY_VALUE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_RSA_KEY_VALUE", [ 
    "Modulus:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB", 
    "Exponent:Windows.Win32.Security.Cryptography.CRYPT_XML_DATA_BLOB"
]); 


Win32.CRYPT_XML_KEY_VALUE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_VALUE", [ 
    "dwType:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CRYPT_XML_ISSUER_SERIAL = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_ISSUER_SERIAL", [ 
    "wszIssuer:wstr", 
    "wszSerial:wstr"
]); 


Win32.CRYPT_XML_X509DATA_ITEM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA_ITEM", [ 
    "dwType:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CRYPT_XML_X509DATA = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_X509DATA", [ 
    "cX509Data:uint", 
    "rgX509Data:ptr"
]); 


Win32.CRYPT_XML_KEY_INFO_ITEM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_INFO_ITEM", [ 
    "dwType:uint", 
    "Anonymous:._Anonymous_e__Union"
]); 


Win32.CRYPT_XML_KEY_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEY_INFO", [ 
    "cbSize:uint", 
    "wszId:wstr", 
    "cKeyInfo:uint", 
    "rgKeyInfo:ptr", 
    "hVerifyKey:Windows.Win32.Security.Cryptography.BCRYPT_KEY_HANDLE"
]); 


Win32.CRYPT_XML_REFERENCE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCE", [ 
    "cbSize:uint", 
    "hReference:ptr", 
    "wszId:wstr", 
    "wszUri:wstr", 
    "wszType:wstr", 
    "DigestMethod:Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM", 
    "DigestValue:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "cTransform:uint", 
    "rgTransform:ptr"
]); 


Win32.CRYPT_XML_REFERENCES = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCES", [ 
    "cReference:uint", 
    "rgpReference:ptr"
]); 


Win32.CRYPT_XML_SIGNED_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_SIGNED_INFO", [ 
    "cbSize:uint", 
    "wszId:wstr", 
    "Canonicalization:Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM", 
    "SignatureMethod:Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM", 
    "cReference:uint", 
    "rgpReference:ptr", 
    "Encoded:Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB"
]); 


Win32.CRYPT_XML_OBJECT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_OBJECT", [ 
    "cbSize:uint", 
    "hObject:ptr", 
    "wszId:wstr", 
    "wszMimeType:wstr", 
    "wszEncoding:wstr", 
    "Manifest:Windows.Win32.Security.Cryptography.CRYPT_XML_REFERENCES", 
    "Encoded:Windows.Win32.Security.Cryptography.CRYPT_XML_BLOB"
]); 


Win32.CRYPT_XML_SIGNATURE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_SIGNATURE", [ 
    "cbSize:uint", 
    "hSignature:ptr", 
    "wszId:wstr", 
    "SignedInfo:Windows.Win32.Security.Cryptography.CRYPT_XML_SIGNED_INFO", 
    "SignatureValue:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "pKeyInfo:ptr", 
    "cObject:uint", 
    "rgpObject:ptr"
]); 


Win32.CRYPT_XML_DOC_CTXT = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_DOC_CTXT", [ 
    "cbSize:uint", 
    "hDocCtxt:ptr", 
    "pTransformsConfig:ptr", 
    "cSignature:uint", 
    "rgpSignature:ptr"
]); 


Win32.CRYPT_XML_KEYINFO_PARAM = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_KEYINFO_PARAM", [ 
    "wszId:wstr", 
    "wszKeyName:wstr", 
    "SKI:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB", 
    "wszSubjectName:wstr", 
    "cCertificate:uint", 
    "rgCertificate:ptr", 
    "cCRL:uint", 
    "rgCRL:ptr"
]); 


Win32.CRYPT_XML_ALGORITHM_INFO = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_ALGORITHM_INFO", [ 
    "cbSize:uint", 
    "wszAlgorithmURI:wstr", 
    "wszName:wstr", 
    "dwGroupId:uint", 
    "wszCNGAlgid:wstr", 
    "wszCNGExtraAlgid:wstr", 
    "dwSignFlags:uint", 
    "dwVerifyFlags:uint", 
    "pvPaddingInfo:ptr", 
    "pvExtraInfo:ptr"
]); 


Win32.CRYPT_XML_CRYPTOGRAPHIC_INTERFACE = foreign.named_struct( "Windows.Win32.Security.Cryptography.CRYPT_XML_CRYPTOGRAPHIC_INTERFACE", [ 
    "cbSize:uint", 
    "fpCryptXmlEncodeAlgorithm:ptr", 
    "fpCryptXmlCreateDigest:ptr", 
    "fpCryptXmlDigestData:ptr", 
    "fpCryptXmlFinalizeDigest:ptr", 
    "fpCryptXmlCloseDigest:ptr", 
    "fpCryptXmlSignData:ptr", 
    "fpCryptXmlVerifySignature:ptr", 
    "fpCryptXmlGetAlgorithmInfo:ptr"
]); 


Win32.INFORMATIONCARD_ASYMMETRIC_CRYPTO_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.INFORMATIONCARD_ASYMMETRIC_CRYPTO_PARAMETERS", [ 
    "keySize:int", 
    "keyExchangeAlgorithm:wstr", 
    "signatureAlgorithm:wstr"
]); 


Win32.INFORMATIONCARD_SYMMETRIC_CRYPTO_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.INFORMATIONCARD_SYMMETRIC_CRYPTO_PARAMETERS", [ 
    "keySize:int", 
    "blockSize:int", 
    "feedbackSize:int"
]); 


Win32.INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS", [ 
    "inputBlockSize:int", 
    "outputBlockSize:int", 
    "canTransformMultipleBlocks:Windows.Win32.Foundation.BOOL", 
    "canReuseTransform:Windows.Win32.Foundation.BOOL"
]); 


Win32.INFORMATIONCARD_HASH_CRYPTO_PARAMETERS = foreign.named_struct( "Windows.Win32.Security.Cryptography.INFORMATIONCARD_HASH_CRYPTO_PARAMETERS", [ 
    "hashSize:int", 
    "transform:Windows.Win32.Security.Cryptography.INFORMATIONCARD_TRANSFORM_CRYPTO_PARAMETERS"
]); 


Win32.INFORMATIONCARD_CRYPTO_HANDLE = foreign.named_struct( "Windows.Win32.Security.Cryptography.INFORMATIONCARD_CRYPTO_HANDLE", [ 
    "type:int", 
    "expiration:long", 
    "cryptoParameters:ptr"
]); 


Win32.GENERIC_XML_TOKEN = foreign.named_struct( "Windows.Win32.Security.Cryptography.GENERIC_XML_TOKEN", [ 
    "createDate:Windows.Win32.Foundation.FILETIME", 
    "expiryDate:Windows.Win32.Foundation.FILETIME", 
    "xmlToken:wstr", 
    "internalTokenReference:wstr", 
    "externalTokenReference:wstr"
]); 


Win32.POLICY_ELEMENT = foreign.named_struct( "Windows.Win32.Security.Cryptography.POLICY_ELEMENT", [ 
    "targetEndpointAddress:wstr", 
    "issuerEndpointAddress:wstr", 
    "issuedTokenParameters:wstr", 
    "privacyNoticeLink:wstr", 
    "privacyNoticeVersion:uint", 
    "useManagedPresentation:Windows.Win32.Foundation.BOOL"
]); 


Win32.ENDPOINTADDRESS = foreign.named_struct( "Windows.Win32.Security.Cryptography.ENDPOINTADDRESS", [ 
    "serviceUrl:wstr", 
    "policyUrl:wstr", 
    "rawCertificate:Windows.Win32.Security.Cryptography.CRYPTOAPI_BLOB"
]); 


Win32.ENDPOINTADDRESS2 = foreign.named_struct( "Windows.Win32.Security.Cryptography.ENDPOINTADDRESS2", [ 
    "serviceUrl:wstr", 
    "policyUrl:wstr", 
    "identityType:uint", 
    "identityBytes:ptr"
]); 


Win32.CERTIFICATE_CHAIN_BLOB = foreign.named_struct( "Windows.Win32.Security.Cryptography.CERTIFICATE_CHAIN_BLOB", [ 
    "certCount:uint", 
    "rawCertificates:ptr"
]); 


Win32.CLAIMLIST = foreign.named_struct( "Windows.Win32.Security.Cryptography.CLAIMLIST", [ 
    "count:uint", 
    "claims:ptr"
]); 


Win32.RECIPIENTPOLICY = foreign.named_struct( "Windows.Win32.Security.Cryptography.RECIPIENTPOLICY", [ 
    "recipient:Windows.Win32.Security.Cryptography.ENDPOINTADDRESS", 
    "issuer:Windows.Win32.Security.Cryptography.ENDPOINTADDRESS", 
    "tokenType:wstr", 
    "requiredClaims:Windows.Win32.Security.Cryptography.CLAIMLIST", 
    "optionalClaims:Windows.Win32.Security.Cryptography.CLAIMLIST", 
    "privacyUrl:wstr", 
    "privacyVersion:uint"
]); 


Win32.RECIPIENTPOLICY2 = foreign.named_struct( "Windows.Win32.Security.Cryptography.RECIPIENTPOLICY2", [ 
    "recipient:Windows.Win32.Security.Cryptography.ENDPOINTADDRESS2", 
    "issuer:Windows.Win32.Security.Cryptography.ENDPOINTADDRESS2", 
    "tokenType:wstr", 
    "requiredClaims:Windows.Win32.Security.Cryptography.CLAIMLIST", 
    "optionalClaims:Windows.Win32.Security.Cryptography.CLAIMLIST", 
    "privacyUrl:wstr", 
    "privacyVersion:uint"
]); 


Win32.CCertSrvSetupKeyInformation = foreign.named_struct( "Windows.Win32.Security.Cryptography.CCertSrvSetupKeyInformation", [ 
    
]); 


Win32.CCertSrvSetup = foreign.named_struct( "Windows.Win32.Security.Cryptography.CCertSrvSetup", [ 
    
]); 


Win32.CMSCEPSetup = foreign.named_struct( "Windows.Win32.Security.Cryptography.CMSCEPSetup", [ 
    
]); 


Win32.CCertificateEnrollmentServerSetup = foreign.named_struct( "Windows.Win32.Security.Cryptography.CCertificateEnrollmentServerSetup", [ 
    
]); 


Win32.CCertificateEnrollmentPolicyServerSetup = foreign.named_struct( "Windows.Win32.Security.Cryptography.CCertificateEnrollmentPolicyServerSetup", [ 
    
]); 

Win32.CERT_COMPARE_SHIFT = 16;
Win32.BCRYPT_OBJECT_ALIGNMENT = 16;
Win32.BCRYPT_KDF_HASH = "HASH";
Win32.BCRYPT_KDF_HMAC = "HMAC";
Win32.BCRYPT_KDF_TLS_PRF = "TLS_PRF";
Win32.BCRYPT_KDF_SP80056A_CONCAT = "SP800_56A_CONCAT";
Win32.BCRYPT_KDF_RAW_SECRET = "TRUNCATE";
Win32.BCRYPT_KDF_HKDF = "HKDF";
Win32.KDF_HASH_ALGORITHM = 0;
Win32.KDF_SECRET_PREPEND = 1;
Win32.KDF_SECRET_APPEND = 2;
Win32.KDF_HMAC_KEY = 3;
Win32.KDF_TLS_PRF_LABEL = 4;
Win32.KDF_TLS_PRF_SEED = 5;
Win32.KDF_SECRET_HANDLE = 6;
Win32.KDF_TLS_PRF_PROTOCOL = 7;
Win32.KDF_ALGORITHMID = 8;
Win32.KDF_PARTYUINFO = 9;
Win32.KDF_PARTYVINFO = 10;
Win32.KDF_SUPPPUBINFO = 11;
Win32.KDF_SUPPPRIVINFO = 12;
Win32.KDF_LABEL = 13;
Win32.KDF_CONTEXT = 14;
Win32.KDF_SALT = 15;
Win32.KDF_ITERATION_COUNT = 16;
Win32.KDF_GENERIC_PARAMETER = 17;
Win32.KDF_KEYBITLENGTH = 18;
Win32.KDF_HKDF_SALT = 19;
Win32.KDF_HKDF_INFO = 20;
Win32.KDF_USE_SECRET_AS_HMAC_KEY_FLAG = 1;
Win32.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION = 1;
Win32.BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG = 1;
Win32.BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG = 2;
Win32.BCRYPT_OPAQUE_KEY_BLOB = "OpaqueKeyBlob";
Win32.BCRYPT_KEY_DATA_BLOB = "KeyDataBlob";
Win32.BCRYPT_AES_WRAP_KEY_BLOB = "Rfc3565KeyWrapBlob";
Win32.BCRYPT_OBJECT_LENGTH = "ObjectLength";
Win32.BCRYPT_ALGORITHM_NAME = "AlgorithmName";
Win32.BCRYPT_PROVIDER_HANDLE = "ProviderHandle";
Win32.BCRYPT_CHAINING_MODE = "ChainingMode";
Win32.BCRYPT_BLOCK_LENGTH = "BlockLength";
Win32.BCRYPT_KEY_LENGTH = "KeyLength";
Win32.BCRYPT_KEY_OBJECT_LENGTH = "KeyObjectLength";
Win32.BCRYPT_KEY_STRENGTH = "KeyStrength";
Win32.BCRYPT_KEY_LENGTHS = "KeyLengths";
Win32.BCRYPT_BLOCK_SIZE_LIST = "BlockSizeList";
Win32.BCRYPT_EFFECTIVE_KEY_LENGTH = "EffectiveKeyLength";
Win32.BCRYPT_HASH_LENGTH = "HashDigestLength";
Win32.BCRYPT_HASH_OID_LIST = "HashOIDList";
Win32.BCRYPT_PADDING_SCHEMES = "PaddingSchemes";
Win32.BCRYPT_SIGNATURE_LENGTH = "SignatureLength";
Win32.BCRYPT_HASH_BLOCK_LENGTH = "HashBlockLength";
Win32.BCRYPT_AUTH_TAG_LENGTH = "AuthTagLength";
Win32.BCRYPT_PRIMITIVE_TYPE = "PrimitiveType";
Win32.BCRYPT_IS_KEYED_HASH = "IsKeyedHash";
Win32.BCRYPT_IS_REUSABLE_HASH = "IsReusableHash";
Win32.BCRYPT_MESSAGE_BLOCK_LENGTH = "MessageBlockLength";
Win32.BCRYPT_PUBLIC_KEY_LENGTH = "PublicKeyLength";
Win32.BCRYPT_PCP_PLATFORM_TYPE_PROPERTY = "PCP_PLATFORM_TYPE";
Win32.BCRYPT_PCP_PROVIDER_VERSION_PROPERTY = "PCP_PROVIDER_VERSION";
Win32.BCRYPT_MULTI_OBJECT_LENGTH = "MultiObjectLength";
Win32.BCRYPT_IS_IFX_TPM_WEAK_KEY = "IsIfxTpmWeakKey";
Win32.BCRYPT_HKDF_HASH_ALGORITHM = "HkdfHashAlgorithm";
Win32.BCRYPT_HKDF_SALT_AND_FINALIZE = "HkdfSaltAndFinalize";
Win32.BCRYPT_HKDF_PRK_AND_FINALIZE = "HkdfPrkAndFinalize";
Win32.BCRYPT_INITIALIZATION_VECTOR = "IV";
Win32.BCRYPT_CHAIN_MODE_NA = "ChainingModeN/A";
Win32.BCRYPT_CHAIN_MODE_CBC = "ChainingModeCBC";
Win32.BCRYPT_CHAIN_MODE_ECB = "ChainingModeECB";
Win32.BCRYPT_CHAIN_MODE_CFB = "ChainingModeCFB";
Win32.BCRYPT_CHAIN_MODE_CCM = "ChainingModeCCM";
Win32.BCRYPT_CHAIN_MODE_GCM = "ChainingModeGCM";
Win32.BCRYPT_SUPPORTED_PAD_ROUTER = 1;
Win32.BCRYPT_SUPPORTED_PAD_PKCS1_ENC = 2;
Win32.BCRYPT_SUPPORTED_PAD_PKCS1_SIG = 4;
Win32.BCRYPT_SUPPORTED_PAD_OAEP = 8;
Win32.BCRYPT_SUPPORTED_PAD_PSS = 16;
Win32.BCRYPT_BLOCK_PADDING = 1;
Win32.BCRYPT_GENERATE_IV = 32;
Win32.BCRYPT_PAD_PKCS1_OPTIONAL_HASH_OID = 16;
Win32.BCRYPTBUFFER_VERSION = 0;
Win32.BCRYPT_PUBLIC_KEY_BLOB = "PUBLICBLOB";
Win32.BCRYPT_PRIVATE_KEY_BLOB = "PRIVATEBLOB";
Win32.BCRYPT_RSAPUBLIC_BLOB = "RSAPUBLICBLOB";
Win32.BCRYPT_RSAPRIVATE_BLOB = "RSAPRIVATEBLOB";
Win32.LEGACY_RSAPUBLIC_BLOB = "CAPIPUBLICBLOB";
Win32.LEGACY_RSAPRIVATE_BLOB = "CAPIPRIVATEBLOB";
Win32.BCRYPT_RSAFULLPRIVATE_BLOB = "RSAFULLPRIVATEBLOB";
Win32.BCRYPT_GLOBAL_PARAMETERS = "SecretAgreementParam";
Win32.BCRYPT_PRIVATE_KEY = "PrivKeyVal";
Win32.BCRYPT_ECCPUBLIC_BLOB = "ECCPUBLICBLOB";
Win32.BCRYPT_ECCPRIVATE_BLOB = "ECCPRIVATEBLOB";
Win32.BCRYPT_ECCFULLPUBLIC_BLOB = "ECCFULLPUBLICBLOB";
Win32.BCRYPT_ECCFULLPRIVATE_BLOB = "ECCFULLPRIVATEBLOB";
Win32.SSL_ECCPUBLIC_BLOB = "SSLECCPUBLICBLOB";
Win32.BCRYPT_ECDH_PUBLIC_P256_MAGIC = 827016005;
Win32.BCRYPT_ECDH_PRIVATE_P256_MAGIC = 843793221;
Win32.BCRYPT_ECDH_PUBLIC_P384_MAGIC = 860570437;
Win32.BCRYPT_ECDH_PRIVATE_P384_MAGIC = 877347653;
Win32.BCRYPT_ECDH_PUBLIC_P521_MAGIC = 894124869;
Win32.BCRYPT_ECDH_PRIVATE_P521_MAGIC = 910902085;
Win32.BCRYPT_ECDH_PUBLIC_GENERIC_MAGIC = 1347109701;
Win32.BCRYPT_ECDH_PRIVATE_GENERIC_MAGIC = 1447772997;
Win32.BCRYPT_ECDSA_PUBLIC_P256_MAGIC = 827540293;
Win32.BCRYPT_ECDSA_PRIVATE_P256_MAGIC = 844317509;
Win32.BCRYPT_ECDSA_PUBLIC_P384_MAGIC = 861094725;
Win32.BCRYPT_ECDSA_PRIVATE_P384_MAGIC = 877871941;
Win32.BCRYPT_ECDSA_PUBLIC_P521_MAGIC = 894649157;
Win32.BCRYPT_ECDSA_PRIVATE_P521_MAGIC = 911426373;
Win32.BCRYPT_ECDSA_PUBLIC_GENERIC_MAGIC = 1346650949;
Win32.BCRYPT_ECDSA_PRIVATE_GENERIC_MAGIC = 1447314245;
Win32.BCRYPT_ECC_FULLKEY_BLOB_V1 = 1;
Win32.BCRYPT_DH_PUBLIC_BLOB = "DHPUBLICBLOB";
Win32.BCRYPT_DH_PRIVATE_BLOB = "DHPRIVATEBLOB";
Win32.LEGACY_DH_PUBLIC_BLOB = "CAPIDHPUBLICBLOB";
Win32.LEGACY_DH_PRIVATE_BLOB = "CAPIDHPRIVATEBLOB";
Win32.BCRYPT_DH_PARAMETERS = "DHParameters";
Win32.BCRYPT_DH_PARAMETERS_MAGIC = 1297107012;
Win32.BCRYPT_DSA_PUBLIC_BLOB = "DSAPUBLICBLOB";
Win32.BCRYPT_DSA_PRIVATE_BLOB = "DSAPRIVATEBLOB";
Win32.LEGACY_DSA_PUBLIC_BLOB = "CAPIDSAPUBLICBLOB";
Win32.LEGACY_DSA_PRIVATE_BLOB = "CAPIDSAPRIVATEBLOB";
Win32.LEGACY_DSA_V2_PUBLIC_BLOB = "V2CAPIDSAPUBLICBLOB";
Win32.LEGACY_DSA_V2_PRIVATE_BLOB = "V2CAPIDSAPRIVATEBLOB";
Win32.BCRYPT_DSA_PUBLIC_MAGIC_V2 = 843206724;
Win32.BCRYPT_DSA_PRIVATE_MAGIC_V2 = 844517444;
Win32.BCRYPT_KEY_DATA_BLOB_MAGIC = 1296188491;
Win32.BCRYPT_KEY_DATA_BLOB_VERSION1 = 1;
Win32.BCRYPT_DSA_PARAMETERS = "DSAParameters";
Win32.BCRYPT_DSA_PARAMETERS_MAGIC = 1297109828;
Win32.BCRYPT_DSA_PARAMETERS_MAGIC_V2 = 843927620;
Win32.BCRYPT_ECC_PARAMETERS = "ECCParameters";
Win32.BCRYPT_ECC_CURVE_NAME = "ECCCurveName";
Win32.BCRYPT_ECC_CURVE_NAME_LIST = "ECCCurveNameList";
Win32.BCRYPT_ECC_PARAMETERS_MAGIC = 1346585413;
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP160R1 = "brainpoolP160r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP160T1 = "brainpoolP160t1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP192R1 = "brainpoolP192r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP192T1 = "brainpoolP192t1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP224R1 = "brainpoolP224r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP224T1 = "brainpoolP224t1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP256R1 = "brainpoolP256r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP256T1 = "brainpoolP256t1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP320R1 = "brainpoolP320r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP320T1 = "brainpoolP320t1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP384R1 = "brainpoolP384r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP384T1 = "brainpoolP384t1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP512R1 = "brainpoolP512r1";
Win32.BCRYPT_ECC_CURVE_BRAINPOOLP512T1 = "brainpoolP512t1";
Win32.BCRYPT_ECC_CURVE_25519 = "curve25519";
Win32.BCRYPT_ECC_CURVE_EC192WAPI = "ec192wapi";
Win32.BCRYPT_ECC_CURVE_NISTP192 = "nistP192";
Win32.BCRYPT_ECC_CURVE_NISTP224 = "nistP224";
Win32.BCRYPT_ECC_CURVE_NISTP256 = "nistP256";
Win32.BCRYPT_ECC_CURVE_NISTP384 = "nistP384";
Win32.BCRYPT_ECC_CURVE_NISTP521 = "nistP521";
Win32.BCRYPT_ECC_CURVE_NUMSP256T1 = "numsP256t1";
Win32.BCRYPT_ECC_CURVE_NUMSP384T1 = "numsP384t1";
Win32.BCRYPT_ECC_CURVE_NUMSP512T1 = "numsP512t1";
Win32.BCRYPT_ECC_CURVE_SECP160K1 = "secP160k1";
Win32.BCRYPT_ECC_CURVE_SECP160R1 = "secP160r1";
Win32.BCRYPT_ECC_CURVE_SECP160R2 = "secP160r2";
Win32.BCRYPT_ECC_CURVE_SECP192K1 = "secP192k1";
Win32.BCRYPT_ECC_CURVE_SECP192R1 = "secP192r1";
Win32.BCRYPT_ECC_CURVE_SECP224K1 = "secP224k1";
Win32.BCRYPT_ECC_CURVE_SECP224R1 = "secP224r1";
Win32.BCRYPT_ECC_CURVE_SECP256K1 = "secP256k1";
Win32.BCRYPT_ECC_CURVE_SECP256R1 = "secP256r1";
Win32.BCRYPT_ECC_CURVE_SECP384R1 = "secP384r1";
Win32.BCRYPT_ECC_CURVE_SECP521R1 = "secP521r1";
Win32.BCRYPT_ECC_CURVE_WTLS7 = "wtls7";
Win32.BCRYPT_ECC_CURVE_WTLS9 = "wtls9";
Win32.BCRYPT_ECC_CURVE_WTLS12 = "wtls12";
Win32.BCRYPT_ECC_CURVE_X962P192V1 = "x962P192v1";
Win32.BCRYPT_ECC_CURVE_X962P192V2 = "x962P192v2";
Win32.BCRYPT_ECC_CURVE_X962P192V3 = "x962P192v3";
Win32.BCRYPT_ECC_CURVE_X962P239V1 = "x962P239v1";
Win32.BCRYPT_ECC_CURVE_X962P239V2 = "x962P239v2";
Win32.BCRYPT_ECC_CURVE_X962P239V3 = "x962P239v3";
Win32.BCRYPT_ECC_CURVE_X962P256V1 = "x962P256v1";
Win32.MS_PRIMITIVE_PROVIDER = "Microsoft Primitive Provider";
Win32.MS_PLATFORM_CRYPTO_PROVIDER = "Microsoft Platform Crypto Provider";
Win32.BCRYPT_RSA_ALGORITHM = "RSA";
Win32.BCRYPT_RSA_SIGN_ALGORITHM = "RSA_SIGN";
Win32.BCRYPT_DH_ALGORITHM = "DH";
Win32.BCRYPT_DSA_ALGORITHM = "DSA";
Win32.BCRYPT_RC2_ALGORITHM = "RC2";
Win32.BCRYPT_RC4_ALGORITHM = "RC4";
Win32.BCRYPT_AES_ALGORITHM = "AES";
Win32.BCRYPT_DES_ALGORITHM = "DES";
Win32.BCRYPT_DESX_ALGORITHM = "DESX";
Win32.BCRYPT_3DES_ALGORITHM = "3DES";
Win32.BCRYPT_3DES_112_ALGORITHM = "3DES_112";
Win32.BCRYPT_MD2_ALGORITHM = "MD2";
Win32.BCRYPT_MD4_ALGORITHM = "MD4";
Win32.BCRYPT_MD5_ALGORITHM = "MD5";
Win32.BCRYPT_SHA1_ALGORITHM = "SHA1";
Win32.BCRYPT_SHA256_ALGORITHM = "SHA256";
Win32.BCRYPT_SHA384_ALGORITHM = "SHA384";
Win32.BCRYPT_SHA512_ALGORITHM = "SHA512";
Win32.BCRYPT_AES_GMAC_ALGORITHM = "AES-GMAC";
Win32.BCRYPT_AES_CMAC_ALGORITHM = "AES-CMAC";
Win32.BCRYPT_ECDSA_P256_ALGORITHM = "ECDSA_P256";
Win32.BCRYPT_ECDSA_P384_ALGORITHM = "ECDSA_P384";
Win32.BCRYPT_ECDSA_P521_ALGORITHM = "ECDSA_P521";
Win32.BCRYPT_ECDH_P256_ALGORITHM = "ECDH_P256";
Win32.BCRYPT_ECDH_P384_ALGORITHM = "ECDH_P384";
Win32.BCRYPT_ECDH_P521_ALGORITHM = "ECDH_P521";
Win32.BCRYPT_RNG_ALGORITHM = "RNG";
Win32.BCRYPT_RNG_FIPS186_DSA_ALGORITHM = "FIPS186DSARNG";
Win32.BCRYPT_RNG_DUAL_EC_ALGORITHM = "DUALECRNG";
Win32.BCRYPT_SP800108_CTR_HMAC_ALGORITHM = "SP800_108_CTR_HMAC";
Win32.BCRYPT_SP80056A_CONCAT_ALGORITHM = "SP800_56A_CONCAT";
Win32.BCRYPT_PBKDF2_ALGORITHM = "PBKDF2";
Win32.BCRYPT_CAPI_KDF_ALGORITHM = "CAPI_KDF";
Win32.BCRYPT_TLS1_1_KDF_ALGORITHM = "TLS1_1_KDF";
Win32.BCRYPT_TLS1_2_KDF_ALGORITHM = "TLS1_2_KDF";
Win32.BCRYPT_ECDSA_ALGORITHM = "ECDSA";
Win32.BCRYPT_ECDH_ALGORITHM = "ECDH";
Win32.BCRYPT_XTS_AES_ALGORITHM = "XTS-AES";
Win32.BCRYPT_HKDF_ALGORITHM = "HKDF";
Win32.BCRYPT_CHACHA20_POLY1305_ALGORITHM = "CHACHA20_POLY1305";
Win32.BCRYPT_KEY_DERIVATION_INTERFACE = 7;
Win32.BCRYPT_MD2_ALG_HANDLE = 1;
Win32.BCRYPT_MD4_ALG_HANDLE = 17;
Win32.BCRYPT_MD5_ALG_HANDLE = 33;
Win32.BCRYPT_SHA1_ALG_HANDLE = 49;
Win32.BCRYPT_SHA256_ALG_HANDLE = 65;
Win32.BCRYPT_SHA384_ALG_HANDLE = 81;
Win32.BCRYPT_SHA512_ALG_HANDLE = 97;
Win32.BCRYPT_RC4_ALG_HANDLE = 113;
Win32.BCRYPT_RNG_ALG_HANDLE = 129;
Win32.BCRYPT_HMAC_MD5_ALG_HANDLE = 145;
Win32.BCRYPT_HMAC_SHA1_ALG_HANDLE = 161;
Win32.BCRYPT_HMAC_SHA256_ALG_HANDLE = 177;
Win32.BCRYPT_HMAC_SHA384_ALG_HANDLE = 193;
Win32.BCRYPT_HMAC_SHA512_ALG_HANDLE = 209;
Win32.BCRYPT_RSA_ALG_HANDLE = 225;
Win32.BCRYPT_ECDSA_ALG_HANDLE = 241;
Win32.BCRYPT_AES_CMAC_ALG_HANDLE = 257;
Win32.BCRYPT_AES_GMAC_ALG_HANDLE = 273;
Win32.BCRYPT_HMAC_MD2_ALG_HANDLE = 289;
Win32.BCRYPT_HMAC_MD4_ALG_HANDLE = 305;
Win32.BCRYPT_3DES_CBC_ALG_HANDLE = 321;
Win32.BCRYPT_3DES_ECB_ALG_HANDLE = 337;
Win32.BCRYPT_3DES_CFB_ALG_HANDLE = 353;
Win32.BCRYPT_3DES_112_CBC_ALG_HANDLE = 369;
Win32.BCRYPT_3DES_112_ECB_ALG_HANDLE = 385;
Win32.BCRYPT_3DES_112_CFB_ALG_HANDLE = 401;
Win32.BCRYPT_AES_CBC_ALG_HANDLE = 417;
Win32.BCRYPT_AES_ECB_ALG_HANDLE = 433;
Win32.BCRYPT_AES_CFB_ALG_HANDLE = 449;
Win32.BCRYPT_AES_CCM_ALG_HANDLE = 465;
Win32.BCRYPT_AES_GCM_ALG_HANDLE = 481;
Win32.BCRYPT_DES_CBC_ALG_HANDLE = 497;
Win32.BCRYPT_DES_ECB_ALG_HANDLE = 513;
Win32.BCRYPT_DES_CFB_ALG_HANDLE = 529;
Win32.BCRYPT_DESX_CBC_ALG_HANDLE = 545;
Win32.BCRYPT_DESX_ECB_ALG_HANDLE = 561;
Win32.BCRYPT_DESX_CFB_ALG_HANDLE = 577;
Win32.BCRYPT_RC2_CBC_ALG_HANDLE = 593;
Win32.BCRYPT_RC2_ECB_ALG_HANDLE = 609;
Win32.BCRYPT_RC2_CFB_ALG_HANDLE = 625;
Win32.BCRYPT_DH_ALG_HANDLE = 641;
Win32.BCRYPT_ECDH_ALG_HANDLE = 657;
Win32.BCRYPT_ECDH_P256_ALG_HANDLE = 673;
Win32.BCRYPT_ECDH_P384_ALG_HANDLE = 689;
Win32.BCRYPT_ECDH_P521_ALG_HANDLE = 705;
Win32.BCRYPT_DSA_ALG_HANDLE = 721;
Win32.BCRYPT_ECDSA_P256_ALG_HANDLE = 737;
Win32.BCRYPT_ECDSA_P384_ALG_HANDLE = 753;
Win32.BCRYPT_ECDSA_P521_ALG_HANDLE = 769;
Win32.BCRYPT_RSA_SIGN_ALG_HANDLE = 785;
Win32.BCRYPT_CAPI_KDF_ALG_HANDLE = 801;
Win32.BCRYPT_PBKDF2_ALG_HANDLE = 817;
Win32.BCRYPT_SP800108_CTR_HMAC_ALG_HANDLE = 833;
Win32.BCRYPT_SP80056A_CONCAT_ALG_HANDLE = 849;
Win32.BCRYPT_TLS1_1_KDF_ALG_HANDLE = 865;
Win32.BCRYPT_TLS1_2_KDF_ALG_HANDLE = 881;
Win32.BCRYPT_XTS_AES_ALG_HANDLE = 897;
Win32.BCRYPT_HKDF_ALG_HANDLE = 913;
Win32.BCRYPT_CHACHA20_POLY1305_ALG_HANDLE = 929;
Win32.BCRYPT_CAPI_AES_FLAG = 16;
Win32.BCRYPT_MULTI_FLAG = 64;
Win32.BCRYPT_TLS_CBC_HMAC_VERIFY_FLAG = 4;
Win32.BCRYPT_BUFFERS_LOCKED_FLAG = 64;
Win32.BCRYPT_EXTENDED_KEYSIZE = 128;
Win32.BCRYPT_ENABLE_INCOMPATIBLE_FIPS_CHECKS = 256;
Win32.BCRYPT_KEY_DERIVATION_OPERATION = 64;
Win32.BCRYPT_PUBLIC_KEY_FLAG = 1;
Win32.BCRYPT_PRIVATE_KEY_FLAG = 2;
Win32.BCRYPT_NO_KEY_VALIDATION = 8;
Win32.BCRYPT_KEY_VALIDATION_RANGE = 16;
Win32.BCRYPT_KEY_VALIDATION_RANGE_AND_ORDER = 24;
Win32.BCRYPT_KEY_VALIDATION_REGENERATE = 32;
Win32.BCRYPT_RNG_USE_ENTROPY_IN_BUFFER = 1;
Win32.BCRYPT_USE_SYSTEM_PREFERRED_RNG = 2;
Win32.BCRYPT_HASH_INTERFACE_MAJORVERSION_2 = 2;
Win32.CRYPT_OVERWRITE = 1;
Win32.CRYPT_PRIORITY_TOP = 0;
Win32.CRYPT_PRIORITY_BOTTOM = 4294967295;
Win32.CRYPT_DEFAULT_CONTEXT = "Default";
Win32.wszXMLNS_DIGSIG = "http://www.w3.org/2000/09/xmldsig#";
Win32.wszXMLNS_DIGSIG_SignatureProperties = "http://www.w3.org/2000/09/xmldsig#SignatureProperties";
Win32.wszXMLNS_DIGSIG_Id = "Id";
Win32.wszURI_XMLNS_DIGSIG_BASE64 = "http://www.w3.org/2000/09/xmldsig#base64";
Win32.wszURI_XMLNS_DIGSIG_SHA1 = "http://www.w3.org/2000/09/xmldsig#sha1";
Win32.wszURI_XMLNS_DIGSIG_SHA256 = "http://www.w3.org/2001/04/xmlenc#sha256";
Win32.wszURI_XMLNS_DIGSIG_SHA384 = "http://www.w3.org/2001/04/xmldsig-more#sha384";
Win32.wszURI_XMLNS_DIGSIG_SHA512 = "http://www.w3.org/2001/04/xmlenc#sha512";
Win32.wszURI_XMLNS_DIGSIG_RSA_SHA1 = "http://www.w3.org/2000/09/xmldsig#rsa-sha1";
Win32.wszURI_XMLNS_DIGSIG_DSA_SHA1 = "http://www.w3.org/2000/09/xmldsig#dsa-sha1";
Win32.wszURI_XMLNS_DIGSIG_RSA_SHA256 = "http://www.w3.org/2001/04/xmldsig-more#rsa-sha256";
Win32.wszURI_XMLNS_DIGSIG_RSA_SHA384 = "http://www.w3.org/2001/04/xmldsig-more#rsa-sha384";
Win32.wszURI_XMLNS_DIGSIG_RSA_SHA512 = "http://www.w3.org/2001/04/xmldsig-more#rsa-sha512";
Win32.wszURI_XMLNS_DIGSIG_ECDSA_SHA1 = "http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1";
Win32.wszURI_XMLNS_DIGSIG_ECDSA_SHA256 = "http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256";
Win32.wszURI_XMLNS_DIGSIG_ECDSA_SHA384 = "http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384";
Win32.wszURI_XMLNS_DIGSIG_ECDSA_SHA512 = "http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512";
Win32.wszURI_XMLNS_DIGSIG_HMAC_SHA1 = "http://www.w3.org/2000/09/xmldsig#hmac-sha1";
Win32.wszURI_XMLNS_DIGSIG_HMAC_SHA256 = "http://www.w3.org/2001/04/xmldsig-more#hmac-sha256";
Win32.wszURI_XMLNS_DIGSIG_HMAC_SHA384 = "http://www.w3.org/2001/04/xmldsig-more#hmac-sha384";
Win32.wszURI_XMLNS_DIGSIG_HMAC_SHA512 = "http://www.w3.org/2001/04/xmldsig-more#hmac-sha512";
Win32.wszURI_CANONICALIZATION_C14N = "http://www.w3.org/TR/2001/REC-xml-c14n-20010315";
Win32.wszURI_CANONICALIZATION_C14NC = "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments";
Win32.wszURI_CANONICALIZATION_EXSLUSIVE_C14N = "http://www.w3.org/2001/10/xml-exc-c14n#";
Win32.wszURI_CANONICALIZATION_EXSLUSIVE_C14NC = "http://www.w3.org/2001/10/xml-exc-c14n#WithComments";
Win32.wszURI_TRANSFORM_XPATH = "http://www.w3.org/TR/1999/REC-xpath-19991116";
Win32.wszURI_XMLNS_TRANSFORM_BASE64 = "http://www.w3.org/2000/09/xmldsig#base64";
Win32.wszURI_XMLNS_TRANSFORM_ENVELOPED = "http://www.w3.org/2000/09/xmldsig#enveloped-signature";
Win32.CRYPT_XML_BLOB_MAX = 2147483640;
Win32.CRYPT_XML_ID_MAX = 256;
Win32.CRYPT_XML_SIGNATURES_MAX = 16;
Win32.CRYPT_XML_TRANSFORM_MAX = 16;
Win32.CRYPT_XML_SIGNATURE_VALUE_MAX = 2048;
Win32.CRYPT_XML_DIGEST_VALUE_MAX = 128;
Win32.CRYPT_XML_OBJECTS_MAX = 256;
Win32.CRYPT_XML_REFERENCES_MAX = 32760;
Win32.CRYPT_XML_E_BASE = -2146885376;
Win32.CRYPT_XML_E_LARGE = -2146885375;
Win32.CRYPT_XML_E_TOO_MANY_TRANSFORMS = -2146885374;
Win32.CRYPT_XML_E_ENCODING = -2146885373;
Win32.CRYPT_XML_E_ALGORITHM = -2146885372;
Win32.CRYPT_XML_E_TRANSFORM = -2146885371;
Win32.CRYPT_XML_E_HANDLE = -2146885370;
Win32.CRYPT_XML_E_OPERATION = -2146885369;
Win32.CRYPT_XML_E_UNRESOLVED_REFERENCE = -2146885368;
Win32.CRYPT_XML_E_INVALID_DIGEST = -2146885367;
Win32.CRYPT_XML_E_INVALID_SIGNATURE = -2146885366;
Win32.CRYPT_XML_E_HASH_FAILED = -2146885365;
Win32.CRYPT_XML_E_SIGN_FAILED = -2146885364;
Win32.CRYPT_XML_E_VERIFY_FAILED = -2146885363;
Win32.CRYPT_XML_E_TOO_MANY_SIGNATURES = -2146885362;
Win32.CRYPT_XML_E_INVALID_KEYVALUE = -2146885361;
Win32.CRYPT_XML_E_UNEXPECTED_XML = -2146885360;
Win32.CRYPT_XML_E_SIGNER = -2146885359;
Win32.CRYPT_XML_E_NON_UNIQUE_ID = -2146885358;
Win32.CRYPT_XML_E_LAST = -2146885358;
Win32.CRYPT_XML_FLAG_ALWAYS_RETURN_ENCODED_OBJECT = 1073741824;
Win32.CRYPT_XML_FLAG_ENFORCE_ID_NCNAME_FORMAT = 536870912;
Win32.CRYPT_XML_FLAG_ENFORCE_ID_NAME_FORMAT = 134217728;
Win32.CRYPT_XML_FLAG_ECDSA_DSIG11 = 67108864;
Win32.CRYPT_XML_STATUS_NO_ERROR = 0;
Win32.CRYPT_XML_FLAG_ADD_OBJECT_CREATE_COPY = 1;
Win32.CRYPT_XML_FLAG_CREATE_REFERENCE_AS_OBJECT = 1;
Win32.CRYPT_XML_DIGEST_REFERENCE_DATA_TRANSFORMED = 1;
Win32.CRYPT_XML_ALGORITHM_INFO_FIND_BY_URI = 1;
Win32.CRYPT_XML_ALGORITHM_INFO_FIND_BY_NAME = 2;
Win32.CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_ALGID = 3;
Win32.CRYPT_XML_ALGORITHM_INFO_FIND_BY_CNG_SIGN_ALGID = 4;
Win32.szFORCE_KEY_PROTECTION = "ForceKeyProtection";
Win32.dwFORCE_KEY_PROTECTION_DISABLED = 0;
Win32.dwFORCE_KEY_PROTECTION_USER_SELECT = 1;
Win32.dwFORCE_KEY_PROTECTION_HIGH = 2;
Win32.CRYPTPROTECT_PROMPT_ON_UNPROTECT = 1;
Win32.CRYPTPROTECT_PROMPT_ON_PROTECT = 2;
Win32.CRYPTPROTECT_PROMPT_RESERVED = 4;
Win32.CRYPTPROTECT_PROMPT_STRONG = 8;
Win32.CRYPTPROTECT_PROMPT_REQUIRE_STRONG = 16;
Win32.CRYPTPROTECT_UI_FORBIDDEN = 1;
Win32.CRYPTPROTECT_LOCAL_MACHINE = 4;
Win32.CRYPTPROTECT_CRED_SYNC = 8;
Win32.CRYPTPROTECT_AUDIT = 16;
Win32.CRYPTPROTECT_NO_RECOVERY = 32;
Win32.CRYPTPROTECT_VERIFY_PROTECTION = 64;
Win32.CRYPTPROTECT_CRED_REGENERATE = 128;
Win32.CRYPTPROTECT_FIRST_RESERVED_FLAGVAL = 268435455;
Win32.CRYPTPROTECT_LAST_RESERVED_FLAGVAL = 4294967295;
Win32.CRYPTPROTECTMEMORY_BLOCK_SIZE = 16;
Win32.CRYPTPROTECTMEMORY_SAME_PROCESS = 0;
Win32.CRYPTPROTECTMEMORY_CROSS_PROCESS = 1;
Win32.CRYPTPROTECTMEMORY_SAME_LOGON = 2;
Win32.NCRYPT_MAX_KEY_NAME_LENGTH = 512;
Win32.NCRYPT_MAX_ALG_ID_LENGTH = 512;
Win32.MS_KEY_STORAGE_PROVIDER = "Microsoft Software Key Storage Provider";
Win32.MS_SMART_CARD_KEY_STORAGE_PROVIDER = "Microsoft Smart Card Key Storage Provider";
Win32.MS_PLATFORM_KEY_STORAGE_PROVIDER = "Microsoft Platform Crypto Provider";
Win32.MS_NGC_KEY_STORAGE_PROVIDER = "Microsoft Passport Key Storage Provider";
Win32.TPM_RSA_SRK_SEAL_KEY = "MICROSOFT_PCP_KSP_RSA_SEAL_KEY_3BD1C4BF-004E-4E2F-8A4D-0BF633DCB074";
Win32.NCRYPT_RSA_ALGORITHM = "RSA";
Win32.NCRYPT_RSA_SIGN_ALGORITHM = "RSA_SIGN";
Win32.NCRYPT_DH_ALGORITHM = "DH";
Win32.NCRYPT_DSA_ALGORITHM = "DSA";
Win32.NCRYPT_MD2_ALGORITHM = "MD2";
Win32.NCRYPT_MD4_ALGORITHM = "MD4";
Win32.NCRYPT_MD5_ALGORITHM = "MD5";
Win32.NCRYPT_SHA1_ALGORITHM = "SHA1";
Win32.NCRYPT_SHA256_ALGORITHM = "SHA256";
Win32.NCRYPT_SHA384_ALGORITHM = "SHA384";
Win32.NCRYPT_SHA512_ALGORITHM = "SHA512";
Win32.NCRYPT_ECDSA_P256_ALGORITHM = "ECDSA_P256";
Win32.NCRYPT_ECDSA_P384_ALGORITHM = "ECDSA_P384";
Win32.NCRYPT_ECDSA_P521_ALGORITHM = "ECDSA_P521";
Win32.NCRYPT_ECDH_P256_ALGORITHM = "ECDH_P256";
Win32.NCRYPT_ECDH_P384_ALGORITHM = "ECDH_P384";
Win32.NCRYPT_ECDH_P521_ALGORITHM = "ECDH_P521";
Win32.NCRYPT_AES_ALGORITHM = "AES";
Win32.NCRYPT_RC2_ALGORITHM = "RC2";
Win32.NCRYPT_3DES_ALGORITHM = "3DES";
Win32.NCRYPT_DES_ALGORITHM = "DES";
Win32.NCRYPT_DESX_ALGORITHM = "DESX";
Win32.NCRYPT_3DES_112_ALGORITHM = "3DES_112";
Win32.NCRYPT_SP800108_CTR_HMAC_ALGORITHM = "SP800_108_CTR_HMAC";
Win32.NCRYPT_SP80056A_CONCAT_ALGORITHM = "SP800_56A_CONCAT";
Win32.NCRYPT_PBKDF2_ALGORITHM = "PBKDF2";
Win32.NCRYPT_CAPI_KDF_ALGORITHM = "CAPI_KDF";
Win32.NCRYPT_ECDSA_ALGORITHM = "ECDSA";
Win32.NCRYPT_ECDH_ALGORITHM = "ECDH";
Win32.NCRYPT_KEY_STORAGE_ALGORITHM = "KEY_STORAGE";
Win32.NCRYPT_HMAC_SHA256_ALGORITHM = "HMAC-SHA256";
Win32.NCRYPT_KEY_DERIVATION_INTERFACE = 7;
Win32.NCRYPT_KEY_PROTECTION_INTERFACE = 65540;
Win32.NCRYPT_RSA_ALGORITHM_GROUP = "RSA";
Win32.NCRYPT_DH_ALGORITHM_GROUP = "DH";
Win32.NCRYPT_DSA_ALGORITHM_GROUP = "DSA";
Win32.NCRYPT_ECDSA_ALGORITHM_GROUP = "ECDSA";
Win32.NCRYPT_ECDH_ALGORITHM_GROUP = "ECDH";
Win32.NCRYPT_AES_ALGORITHM_GROUP = "AES";
Win32.NCRYPT_RC2_ALGORITHM_GROUP = "RC2";
Win32.NCRYPT_DES_ALGORITHM_GROUP = "DES";
Win32.NCRYPT_KEY_DERIVATION_GROUP = "KEY_DERIVATION";
Win32.NCRYPTBUFFER_VERSION = 0;
Win32.NCRYPTBUFFER_EMPTY = 0;
Win32.NCRYPTBUFFER_DATA = 1;
Win32.NCRYPTBUFFER_PROTECTION_DESCRIPTOR_STRING = 3;
Win32.NCRYPTBUFFER_PROTECTION_FLAGS = 4;
Win32.NCRYPTBUFFER_SSL_CLIENT_RANDOM = 20;
Win32.NCRYPTBUFFER_SSL_SERVER_RANDOM = 21;
Win32.NCRYPTBUFFER_SSL_HIGHEST_VERSION = 22;
Win32.NCRYPTBUFFER_SSL_CLEAR_KEY = 23;
Win32.NCRYPTBUFFER_SSL_KEY_ARG_DATA = 24;
Win32.NCRYPTBUFFER_SSL_SESSION_HASH = 25;
Win32.NCRYPTBUFFER_PKCS_OID = 40;
Win32.NCRYPTBUFFER_PKCS_ALG_OID = 41;
Win32.NCRYPTBUFFER_PKCS_ALG_PARAM = 42;
Win32.NCRYPTBUFFER_PKCS_ALG_ID = 43;
Win32.NCRYPTBUFFER_PKCS_ATTRS = 44;
Win32.NCRYPTBUFFER_PKCS_KEY_NAME = 45;
Win32.NCRYPTBUFFER_PKCS_SECRET = 46;
Win32.NCRYPTBUFFER_CERT_BLOB = 47;
Win32.NCRYPTBUFFER_CLAIM_IDBINDING_NONCE = 48;
Win32.NCRYPTBUFFER_CLAIM_KEYATTESTATION_NONCE = 49;
Win32.NCRYPTBUFFER_KEY_PROPERTY_FLAGS = 50;
Win32.NCRYPTBUFFER_ATTESTATIONSTATEMENT_BLOB = 51;
Win32.NCRYPTBUFFER_ATTESTATION_CLAIM_TYPE = 52;
Win32.NCRYPTBUFFER_ATTESTATION_CLAIM_CHALLENGE_REQUIRED = 53;
Win32.NCRYPTBUFFER_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS = 54;
Win32.NCRYPTBUFFER_ECC_CURVE_NAME = 60;
Win32.NCRYPTBUFFER_ECC_PARAMETERS = 61;
Win32.NCRYPTBUFFER_TPM_SEAL_PASSWORD = 70;
Win32.NCRYPTBUFFER_TPM_SEAL_POLICYINFO = 71;
Win32.NCRYPTBUFFER_TPM_SEAL_TICKET = 72;
Win32.NCRYPTBUFFER_TPM_SEAL_NO_DA_PROTECTION = 73;
Win32.NCRYPTBUFFER_TPM_PLATFORM_CLAIM_PCR_MASK = 80;
Win32.NCRYPTBUFFER_TPM_PLATFORM_CLAIM_NONCE = 81;
Win32.NCRYPTBUFFER_TPM_PLATFORM_CLAIM_STATIC_CREATE = 82;
Win32.NCRYPT_CIPHER_NO_PADDING_FLAG = 0;
Win32.NCRYPT_CIPHER_BLOCK_PADDING_FLAG = 1;
Win32.NCRYPT_CIPHER_OTHER_PADDING_FLAG = 2;
Win32.NCRYPT_PLATFORM_ATTEST_MAGIC = 1146110288;
Win32.NCRYPT_KEY_ATTEST_MAGIC = 1146110283;
Win32.NCRYPT_CLAIM_AUTHORITY_ONLY = 1;
Win32.NCRYPT_CLAIM_SUBJECT_ONLY = 2;
Win32.NCRYPT_CLAIM_WEB_AUTH_SUBJECT_ONLY = 258;
Win32.NCRYPT_CLAIM_AUTHORITY_AND_SUBJECT = 3;
Win32.NCRYPT_CLAIM_VSM_KEY_ATTESTATION_STATEMENT = 4;
Win32.NCRYPT_CLAIM_UNKNOWN = 4096;
Win32.NCRYPT_CLAIM_PLATFORM = 65536;
Win32.NCRYPT_ISOLATED_KEY_FLAG_CREATED_IN_ISOLATION = 1;
Win32.NCRYPT_ISOLATED_KEY_FLAG_IMPORT_ONLY = 2;
Win32.NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_V0 = 0;
Win32.NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES_CURRENT_VERSION = 0;
Win32.NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_V0 = 0;
Win32.NCRYPT_VSM_KEY_ATTESTATION_STATEMENT_CURRENT_VERSION = 0;
Win32.NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_V0 = 0;
Win32.NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS_CURRENT_VERSION = 0;
Win32.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_V0 = 0;
Win32.NCRYPT_EXPORTED_ISOLATED_KEY_HEADER_CURRENT_VERSION = 0;
Win32.NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_V0 = 0;
Win32.NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT_CURRENT_VERSION = 0;
Win32.NCRYPT_PAD_CIPHER_FLAG = 16;
Win32.NCRYPT_ATTESTATION_FLAG = 32;
Win32.NCRYPT_SEALING_FLAG = 256;
Win32.NCRYPT_DO_NOT_FINALIZE_FLAG = 1024;
Win32.NCRYPT_EXPORT_LEGACY_FLAG = 2048;
Win32.NCRYPT_IGNORE_DEVICE_STATE_FLAG = 4096;
Win32.NCRYPT_TREAT_NIST_AS_GENERIC_ECC_FLAG = 8192;
Win32.NCRYPT_NO_CACHED_PASSWORD = 16384;
Win32.NCRYPT_PROTECT_TO_LOCAL_SYSTEM = 32768;
Win32.NCRYPT_PREFER_VIRTUAL_ISOLATION_FLAG = 65536;
Win32.NCRYPT_USE_VIRTUAL_ISOLATION_FLAG = 131072;
Win32.NCRYPT_USE_PER_BOOT_KEY_FLAG = 262144;
Win32.NCRYPT_KEY_DERIVATION_OPERATION = 64;
Win32.NCRYPT_AUTHORITY_KEY_FLAG = 256;
Win32.NCRYPT_NAME_PROPERTY = "Name";
Win32.NCRYPT_UNIQUE_NAME_PROPERTY = "Unique Name";
Win32.NCRYPT_ALGORITHM_PROPERTY = "Algorithm Name";
Win32.NCRYPT_LENGTH_PROPERTY = "Length";
Win32.NCRYPT_LENGTHS_PROPERTY = "Lengths";
Win32.NCRYPT_BLOCK_LENGTH_PROPERTY = "Block Length";
Win32.NCRYPT_PUBLIC_LENGTH_PROPERTY = "PublicKeyLength";
Win32.NCRYPT_SIGNATURE_LENGTH_PROPERTY = "SignatureLength";
Win32.NCRYPT_CHAINING_MODE_PROPERTY = "Chaining Mode";
Win32.NCRYPT_AUTH_TAG_LENGTH = "AuthTagLength";
Win32.NCRYPT_UI_POLICY_PROPERTY = "UI Policy";
Win32.NCRYPT_EXPORT_POLICY_PROPERTY = "Export Policy";
Win32.NCRYPT_WINDOW_HANDLE_PROPERTY = "HWND Handle";
Win32.NCRYPT_USE_CONTEXT_PROPERTY = "Use Context";
Win32.NCRYPT_IMPL_TYPE_PROPERTY = "Impl Type";
Win32.NCRYPT_KEY_USAGE_PROPERTY = "Key Usage";
Win32.NCRYPT_KEY_TYPE_PROPERTY = "Key Type";
Win32.NCRYPT_VERSION_PROPERTY = "Version";
Win32.NCRYPT_SECURITY_DESCR_SUPPORT_PROPERTY = "Security Descr Support";
Win32.NCRYPT_SECURITY_DESCR_PROPERTY = "Security Descr";
Win32.NCRYPT_USE_COUNT_ENABLED_PROPERTY = "Enabled Use Count";
Win32.NCRYPT_USE_COUNT_PROPERTY = "Use Count";
Win32.NCRYPT_LAST_MODIFIED_PROPERTY = "Modified";
Win32.NCRYPT_MAX_NAME_LENGTH_PROPERTY = "Max Name Length";
Win32.NCRYPT_ALGORITHM_GROUP_PROPERTY = "Algorithm Group";
Win32.NCRYPT_DH_PARAMETERS_PROPERTY = "DHParameters";
Win32.NCRYPT_ECC_PARAMETERS_PROPERTY = "ECCParameters";
Win32.NCRYPT_ECC_CURVE_NAME_PROPERTY = "ECCCurveName";
Win32.NCRYPT_ECC_CURVE_NAME_LIST_PROPERTY = "ECCCurveNameList";
Win32.NCRYPT_USE_VIRTUAL_ISOLATION_PROPERTY = "Virtual Iso";
Win32.NCRYPT_USE_PER_BOOT_KEY_PROPERTY = "Per Boot Key";
Win32.NCRYPT_PROVIDER_HANDLE_PROPERTY = "Provider Handle";
Win32.NCRYPT_PIN_PROPERTY = "SmartCardPin";
Win32.NCRYPT_READER_PROPERTY = "SmartCardReader";
Win32.NCRYPT_SMARTCARD_GUID_PROPERTY = "SmartCardGuid";
Win32.NCRYPT_CERTIFICATE_PROPERTY = "SmartCardKeyCertificate";
Win32.NCRYPT_PIN_PROMPT_PROPERTY = "SmartCardPinPrompt";
Win32.NCRYPT_USER_CERTSTORE_PROPERTY = "SmartCardUserCertStore";
Win32.NCRYPT_ROOT_CERTSTORE_PROPERTY = "SmartcardRootCertStore";
Win32.NCRYPT_SECURE_PIN_PROPERTY = "SmartCardSecurePin";
Win32.NCRYPT_ASSOCIATED_ECDH_KEY = "SmartCardAssociatedECDHKey";
Win32.NCRYPT_SCARD_PIN_ID = "SmartCardPinId";
Win32.NCRYPT_SCARD_PIN_INFO = "SmartCardPinInfo";
Win32.NCRYPT_READER_ICON_PROPERTY = "SmartCardReaderIcon";
Win32.NCRYPT_KDF_SECRET_VALUE = "KDFKeySecret";
Win32.NCRYPT_DISMISS_UI_TIMEOUT_SEC_PROPERTY = "SmartCardDismissUITimeoutSeconds";
Win32.NCRYPT_PCP_PLATFORM_TYPE_PROPERTY = "PCP_PLATFORM_TYPE";
Win32.NCRYPT_PCP_PROVIDER_VERSION_PROPERTY = "PCP_PROVIDER_VERSION";
Win32.NCRYPT_PCP_EKPUB_PROPERTY = "PCP_EKPUB";
Win32.NCRYPT_PCP_EKCERT_PROPERTY = "PCP_EKCERT";
Win32.NCRYPT_PCP_EKNVCERT_PROPERTY = "PCP_EKNVCERT";
Win32.NCRYPT_PCP_RSA_EKPUB_PROPERTY = "PCP_RSA_EKPUB";
Win32.NCRYPT_PCP_RSA_EKCERT_PROPERTY = "PCP_RSA_EKCERT";
Win32.NCRYPT_PCP_RSA_EKNVCERT_PROPERTY = "PCP_RSA_EKNVCERT";
Win32.NCRYPT_PCP_ECC_EKPUB_PROPERTY = "PCP_ECC_EKPUB";
Win32.NCRYPT_PCP_ECC_EKCERT_PROPERTY = "PCP_ECC_EKCERT";
Win32.NCRYPT_PCP_ECC_EKNVCERT_PROPERTY = "PCP_ECC_EKNVCERT";
Win32.NCRYPT_PCP_SRKPUB_PROPERTY = "PCP_SRKPUB";
Win32.NCRYPT_PCP_PCRTABLE_PROPERTY = "PCP_PCRTABLE";
Win32.NCRYPT_PCP_CHANGEPASSWORD_PROPERTY = "PCP_CHANGEPASSWORD";
Win32.NCRYPT_PCP_PASSWORD_REQUIRED_PROPERTY = "PCP_PASSWORD_REQUIRED";
Win32.NCRYPT_PCP_USAGEAUTH_PROPERTY = "PCP_USAGEAUTH";
Win32.NCRYPT_PCP_MIGRATIONPASSWORD_PROPERTY = "PCP_MIGRATIONPASSWORD";
Win32.NCRYPT_PCP_EXPORT_ALLOWED_PROPERTY = "PCP_EXPORT_ALLOWED";
Win32.NCRYPT_PCP_STORAGEPARENT_PROPERTY = "PCP_STORAGEPARENT";
Win32.NCRYPT_PCP_PROVIDERHANDLE_PROPERTY = "PCP_PROVIDERMHANDLE";
Win32.NCRYPT_PCP_PLATFORMHANDLE_PROPERTY = "PCP_PLATFORMHANDLE";
Win32.NCRYPT_PCP_PLATFORM_BINDING_PCRMASK_PROPERTY = "PCP_PLATFORM_BINDING_PCRMASK";
Win32.NCRYPT_PCP_PLATFORM_BINDING_PCRDIGESTLIST_PROPERTY = "PCP_PLATFORM_BINDING_PCRDIGESTLIST";
Win32.NCRYPT_PCP_PLATFORM_BINDING_PCRDIGEST_PROPERTY = "PCP_PLATFORM_BINDING_PCRDIGEST";
Win32.NCRYPT_PCP_KEY_USAGE_POLICY_PROPERTY = "PCP_KEY_USAGE_POLICY";
Win32.NCRYPT_PCP_RSA_SCHEME_PROPERTY = "PCP_RSA_SCHEME";
Win32.NCRYPT_PCP_TPM12_IDBINDING_PROPERTY = "PCP_TPM12_IDBINDING";
Win32.NCRYPT_PCP_TPM12_IDBINDING_DYNAMIC_PROPERTY = "PCP_TPM12_IDBINDING_DYNAMIC";
Win32.NCRYPT_PCP_TPM12_IDACTIVATION_PROPERTY = "PCP_TPM12_IDACTIVATION";
Win32.NCRYPT_PCP_KEYATTESTATION_PROPERTY = "PCP_TPM12_KEYATTESTATION";
Win32.NCRYPT_PCP_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY = "PCP_ALTERNATE_KEY_STORAGE_LOCATION";
Win32.NCRYPT_PCP_PLATFORM_BINDING_PCRALGID_PROPERTY = "PCP_PLATFORM_BINDING_PCRALGID";
Win32.NCRYPT_PCP_HMAC_AUTH_POLICYREF = "PCP_HMAC_AUTH_POLICYREF";
Win32.NCRYPT_PCP_HMAC_AUTH_POLICYINFO = "PCP_HMAC_AUTH_POLICYINFO";
Win32.NCRYPT_PCP_HMAC_AUTH_NONCE = "PCP_HMAC_AUTH_NONCE";
Win32.NCRYPT_PCP_HMAC_AUTH_SIGNATURE = "PCP_HMAC_AUTH_SIGNATURE";
Win32.NCRYPT_PCP_HMAC_AUTH_TICKET = "PCP_HMAC_AUTH_TICKET";
Win32.NCRYPT_PCP_NO_DA_PROTECTION_PROPERTY = "PCP_NO_DA_PROTECTION";
Win32.NCRYPT_PCP_TPM_MANUFACTURER_ID_PROPERTY = "PCP_TPM_MANUFACTURER_ID";
Win32.NCRYPT_PCP_TPM_FW_VERSION_PROPERTY = "PCP_TPM_FW_VERSION";
Win32.NCRYPT_PCP_TPM2BNAME_PROPERTY = "PCP_TPM2BNAME";
Win32.NCRYPT_PCP_TPM_VERSION_PROPERTY = "PCP_TPM_VERSION";
Win32.NCRYPT_PCP_RAW_POLICYDIGEST_PROPERTY = "PCP_RAW_POLICYDIGEST";
Win32.NCRYPT_PCP_KEY_CREATIONHASH_PROPERTY = "PCP_KEY_CREATIONHASH";
Win32.NCRYPT_PCP_KEY_CREATIONTICKET_PROPERTY = "PCP_KEY_CREATIONTICKET";
Win32.NCRYPT_PCP_RSA_SCHEME_HASH_ALG_PROPERTY = "PCP_RSA_SCHEME_HASH_ALG";
Win32.NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED_PROPERTY = "PCP_TPM_IFX_RSA_KEYGEN_PROHIBITED";
Win32.NCRYPT_PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY_PROPERTY = "PCP_TPM_IFX_RSA_KEYGEN_VULNERABILITY";
Win32.IFX_RSA_KEYGEN_VUL_NOT_AFFECTED = 0;
Win32.IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_1 = 1;
Win32.IFX_RSA_KEYGEN_VUL_AFFECTED_LEVEL_2 = 2;
Win32.NCRYPT_PCP_SESSIONID_PROPERTY = "PCP_SESSIONID";
Win32.NCRYPT_PCP_PSS_SALT_SIZE_PROPERTY = "PSS Salt Size";
Win32.NCRYPT_TPM_PSS_SALT_SIZE_UNKNOWN = 0;
Win32.NCRYPT_TPM_PSS_SALT_SIZE_MAXIMUM = 1;
Win32.NCRYPT_TPM_PSS_SALT_SIZE_HASHSIZE = 2;
Win32.NCRYPT_PCP_INTERMEDIATE_CA_EKCERT_PROPERTY = "PCP_INTERMEDIATE_CA_EKCERT";
Win32.NCRYPT_PCP_PCRTABLE_ALGORITHM_PROPERTY = "PCP_PCRTABLE_ALGORITHM";
Win32.NCRYPT_PCP_SYMMETRIC_KEYBITS_PROPERTY = "PCP_SYMMETRIC_KEYBITS";
Win32.NCRYPT_TPM_PAD_PSS_IGNORE_SALT = 32;
Win32.NCRYPT_TPM12_PROVIDER = 65536;
Win32.NCRYPT_PCP_SIGNATURE_KEY = 1;
Win32.NCRYPT_PCP_ENCRYPTION_KEY = 2;
Win32.NCRYPT_PCP_STORAGE_KEY = 4;
Win32.NCRYPT_PCP_IDENTITY_KEY = 8;
Win32.NCRYPT_PCP_HMACVERIFICATION_KEY = 16;
Win32.NCRYPT_SCARD_NGC_KEY_NAME = "SmartCardNgcKeyName";
Win32.NCRYPT_INITIALIZATION_VECTOR = "IV";
Win32.NCRYPT_CHANGEPASSWORD_PROPERTY = "PCP_CHANGEPASSWORD";
Win32.NCRYPT_ALTERNATE_KEY_STORAGE_LOCATION_PROPERTY = "PCP_ALTERNATE_KEY_STORAGE_LOCATION";
Win32.NCRYPT_KEY_ACCESS_POLICY_PROPERTY = "Key Access Policy";
Win32.NCRYPT_MAX_PROPERTY_NAME = 64;
Win32.NCRYPT_MAX_PROPERTY_DATA = 1048576;
Win32.NCRYPT_ALLOW_EXPORT_FLAG = 1;
Win32.NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG = 2;
Win32.NCRYPT_ALLOW_ARCHIVING_FLAG = 4;
Win32.NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG = 8;
Win32.NCRYPT_IMPL_HARDWARE_FLAG = 1;
Win32.NCRYPT_IMPL_SOFTWARE_FLAG = 2;
Win32.NCRYPT_IMPL_REMOVABLE_FLAG = 8;
Win32.NCRYPT_IMPL_HARDWARE_RNG_FLAG = 16;
Win32.NCRYPT_IMPL_VIRTUAL_ISOLATION_FLAG = 32;
Win32.NCRYPT_ALLOW_DECRYPT_FLAG = 1;
Win32.NCRYPT_ALLOW_SIGNING_FLAG = 2;
Win32.NCRYPT_ALLOW_KEY_AGREEMENT_FLAG = 4;
Win32.NCRYPT_ALLOW_KEY_IMPORT_FLAG = 8;
Win32.NCRYPT_ALLOW_ALL_USAGES = 16777215;
Win32.NCRYPT_UI_PROTECT_KEY_FLAG = 1;
Win32.NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG = 2;
Win32.NCRYPT_UI_FINGERPRINT_PROTECTION_FLAG = 4;
Win32.NCRYPT_UI_APPCONTAINER_ACCESS_MEDIUM_FLAG = 8;
Win32.NCRYPT_PIN_CACHE_FREE_APPLICATION_TICKET_PROPERTY = "PinCacheFreeApplicationTicket";
Win32.NCRYPT_PIN_CACHE_FLAGS_PROPERTY = "PinCacheFlags";
Win32.NCRYPT_PIN_CACHE_DISABLE_DPL_FLAG = 1;
Win32.NCRYPT_PIN_CACHE_APPLICATION_TICKET_PROPERTY = "PinCacheApplicationTicket";
Win32.NCRYPT_PIN_CACHE_APPLICATION_IMAGE_PROPERTY = "PinCacheApplicationImage";
Win32.NCRYPT_PIN_CACHE_APPLICATION_STATUS_PROPERTY = "PinCacheApplicationStatus";
Win32.NCRYPT_PIN_CACHE_PIN_PROPERTY = "PinCachePin";
Win32.NCRYPT_PIN_CACHE_IS_GESTURE_REQUIRED_PROPERTY = "PinCacheIsGestureRequired";
Win32.NCRYPT_PIN_CACHE_REQUIRE_GESTURE_FLAG = 1;
Win32.NCRYPT_PIN_CACHE_APPLICATION_TICKET_BYTE_LENGTH = 90;
Win32.NCRYPT_PIN_CACHE_CLEAR_PROPERTY = "PinCacheClear";
Win32.NCRYPT_PIN_CACHE_CLEAR_FOR_CALLING_PROCESS_OPTION = 1;
Win32.NCRYPT_KEY_ACCESS_POLICY_VERSION = 1;
Win32.NCRYPT_ALLOW_SILENT_KEY_ACCESS = 1;
Win32.NCRYPT_CIPHER_KEY_BLOB_MAGIC = 1380470851;
Win32.NCRYPT_KDF_KEY_BLOB_MAGIC = 826688587;
Win32.NCRYPT_PROTECTED_KEY_BLOB_MAGIC = 1263817296;
Win32.NCRYPT_CIPHER_KEY_BLOB = "CipherKeyBlob";
Win32.NCRYPT_KDF_KEY_BLOB = "KDFKeyBlob";
Win32.NCRYPT_PROTECTED_KEY_BLOB = "ProtectedKeyBlob";
Win32.NCRYPT_TPM_LOADABLE_KEY_BLOB = "PcpTpmProtectedKeyBlob";
Win32.NCRYPT_TPM_LOADABLE_KEY_BLOB_MAGIC = 1297371211;
Win32.NCRYPT_PKCS7_ENVELOPE_BLOB = "PKCS7_ENVELOPE";
Win32.NCRYPT_PKCS8_PRIVATE_KEY_BLOB = "PKCS8_PRIVATEKEY";
Win32.NCRYPT_OPAQUETRANSPORT_BLOB = "OpaqueTransport";
Win32.NCRYPT_ISOLATED_KEY_ENVELOPE_BLOB = "ISOLATED_KEY_ENVELOPE";
Win32.NCRYPT_DESCR_DELIMITER_OR = "OR";
Win32.NCRYPT_DESCR_DELIMITER_AND = "AND";
Win32.NCRYPT_DESCR_EQUAL = "=";
Win32.MS_KEY_PROTECTION_PROVIDER = "Microsoft Key Protection Provider";
Win32.NCRYPT_KEY_PROTECTION_ALGORITHM_SID = "SID";
Win32.NCRYPT_KEY_PROTECTION_ALGORITHM_LOCAL = "LOCAL";
Win32.NCRYPT_KEY_PROTECTION_LOCAL_LOGON = "logon";
Win32.NCRYPT_KEY_PROTECTION_LOCAL_USER = "user";
Win32.NCRYPT_KEY_PROTECTION_LOCAL_MACHINE = "machine";
Win32.NCRYPT_KEY_PROTECTION_ALGORITHM_SDDL = "SDDL";
Win32.NCRYPT_KEY_PROTECTION_ALGORITHM_WEBCREDENTIALS = "WEBCREDENTIALS";
Win32.NCRYPT_KEY_PROTECTION_ALGORITHM_LOCKEDCREDENTIALS = "LOCKEDCREDENTIALS";
Win32.NCRYPT_KEY_PROTECTION_ALGORITHM_CERTIFICATE = "CERTIFICATE";
Win32.NCRYPT_KEY_PROTECTION_CERT_HASHID = "HashId";
Win32.NCRYPT_KEY_PROTECTION_CERT_CERTBLOB = "CertBlob";
Win32.NCRYPT_NAMED_DESCRIPTOR_FLAG = 1;
Win32.NCRYPT_PROTECTION_INFO_TYPE_DESCRIPTOR_STRING = 1;
Win32.ALG_CLASS_ANY = 0;
Win32.ALG_CLASS_SIGNATURE = 8192;
Win32.ALG_CLASS_MSG_ENCRYPT = 16384;
Win32.ALG_CLASS_DATA_ENCRYPT = 24576;
Win32.ALG_CLASS_HASH = 32768;
Win32.ALG_CLASS_KEY_EXCHANGE = 40960;
Win32.ALG_CLASS_ALL = 57344;
Win32.ALG_TYPE_ANY = 0;
Win32.ALG_TYPE_DSS = 512;
Win32.ALG_TYPE_RSA = 1024;
Win32.ALG_TYPE_BLOCK = 1536;
Win32.ALG_TYPE_STREAM = 2048;
Win32.ALG_TYPE_DH = 2560;
Win32.ALG_TYPE_SECURECHANNEL = 3072;
Win32.ALG_TYPE_ECDH = 3584;
Win32.ALG_TYPE_THIRDPARTY = 4096;
Win32.ALG_SID_ANY = 0;
Win32.ALG_SID_THIRDPARTY_ANY = 0;
Win32.ALG_SID_RSA_ANY = 0;
Win32.ALG_SID_RSA_PKCS = 1;
Win32.ALG_SID_RSA_MSATWORK = 2;
Win32.ALG_SID_RSA_ENTRUST = 3;
Win32.ALG_SID_RSA_PGP = 4;
Win32.ALG_SID_DSS_ANY = 0;
Win32.ALG_SID_DSS_PKCS = 1;
Win32.ALG_SID_DSS_DMS = 2;
Win32.ALG_SID_ECDSA = 3;
Win32.ALG_SID_DES = 1;
Win32.ALG_SID_3DES = 3;
Win32.ALG_SID_DESX = 4;
Win32.ALG_SID_IDEA = 5;
Win32.ALG_SID_CAST = 6;
Win32.ALG_SID_SAFERSK64 = 7;
Win32.ALG_SID_SAFERSK128 = 8;
Win32.ALG_SID_3DES_112 = 9;
Win32.ALG_SID_CYLINK_MEK = 12;
Win32.ALG_SID_RC5 = 13;
Win32.ALG_SID_AES_128 = 14;
Win32.ALG_SID_AES_192 = 15;
Win32.ALG_SID_AES_256 = 16;
Win32.ALG_SID_AES = 17;
Win32.ALG_SID_SKIPJACK = 10;
Win32.ALG_SID_TEK = 11;
Win32.CRYPT_MODE_CBCI = 6;
Win32.CRYPT_MODE_CFBP = 7;
Win32.CRYPT_MODE_OFBP = 8;
Win32.CRYPT_MODE_CBCOFM = 9;
Win32.CRYPT_MODE_CBCOFMI = 10;
Win32.ALG_SID_RC2 = 2;
Win32.ALG_SID_RC4 = 1;
Win32.ALG_SID_SEAL = 2;
Win32.ALG_SID_DH_SANDF = 1;
Win32.ALG_SID_DH_EPHEM = 2;
Win32.ALG_SID_AGREED_KEY_ANY = 3;
Win32.ALG_SID_KEA = 4;
Win32.ALG_SID_ECDH = 5;
Win32.ALG_SID_ECDH_EPHEM = 6;
Win32.ALG_SID_MD2 = 1;
Win32.ALG_SID_MD4 = 2;
Win32.ALG_SID_MD5 = 3;
Win32.ALG_SID_SHA = 4;
Win32.ALG_SID_SHA1 = 4;
Win32.ALG_SID_MAC = 5;
Win32.ALG_SID_RIPEMD = 6;
Win32.ALG_SID_RIPEMD160 = 7;
Win32.ALG_SID_SSL3SHAMD5 = 8;
Win32.ALG_SID_HMAC = 9;
Win32.ALG_SID_TLS1PRF = 10;
Win32.ALG_SID_HASH_REPLACE_OWF = 11;
Win32.ALG_SID_SHA_256 = 12;
Win32.ALG_SID_SHA_384 = 13;
Win32.ALG_SID_SHA_512 = 14;
Win32.ALG_SID_SSL3_MASTER = 1;
Win32.ALG_SID_SCHANNEL_MASTER_HASH = 2;
Win32.ALG_SID_SCHANNEL_MAC_KEY = 3;
Win32.ALG_SID_PCT1_MASTER = 4;
Win32.ALG_SID_SSL2_MASTER = 5;
Win32.ALG_SID_TLS1_MASTER = 6;
Win32.ALG_SID_SCHANNEL_ENC_KEY = 7;
Win32.ALG_SID_ECMQV = 1;
Win32.ALG_SID_EXAMPLE = 80;
Win32.SIGNATURE_RESOURCE_NUMBER = 666;
Win32.CRYPT_VERIFYCONTEXT = 4026531840;
Win32.CRYPT_NEWKEYSET = 8;
Win32.CRYPT_DELETEKEYSET = 16;
Win32.CRYPT_SILENT = 64;
Win32.CRYPT_DEFAULT_CONTAINER_OPTIONAL = 128;
Win32.CRYPT_UPDATE_KEY = 8;
Win32.CRYPT_USER_PROTECTED_STRONG = 1048576;
Win32.RSA1024BIT_KEY = 67108864;
Win32.CRYPT_SERVER = 1024;
Win32.KEY_LENGTH_MASK = 4294901760;
Win32.CRYPT_DECRYPT_RSA_NO_PADDING_CHECK = 32;
Win32.CRYPT_SECRETDIGEST = 1;
Win32.CRYPT_OWF_REPL_LM_HASH = 1;
Win32.CRYPT_LITTLE_ENDIAN = 1;
Win32.CRYPT_NOHASHOID = 1;
Win32.CRYPT_TYPE2_FORMAT = 2;
Win32.CRYPT_X931_FORMAT = 4;
Win32.CRYPT_MACHINE_DEFAULT = 1;
Win32.CRYPT_USER_DEFAULT = 2;
Win32.CRYPT_DELETE_DEFAULT = 4;
Win32.SIMPLEBLOB = 1;
Win32.PUBLICKEYBLOB = 6;
Win32.PRIVATEKEYBLOB = 7;
Win32.PLAINTEXTKEYBLOB = 8;
Win32.OPAQUEKEYBLOB = 9;
Win32.PUBLICKEYBLOBEX = 10;
Win32.SYMMETRICWRAPKEYBLOB = 11;
Win32.KEYSTATEBLOB = 12;
Win32.CRYPT_USERDATA = 1;
Win32.KP_IV = 1;
Win32.KP_PADDING = 3;
Win32.KP_MODE = 4;
Win32.KP_MODE_BITS = 5;
Win32.KP_P = 11;
Win32.KP_G = 12;
Win32.KP_Q = 13;
Win32.KP_X = 14;
Win32.KP_Y = 15;
Win32.KP_RA = 16;
Win32.KP_RB = 17;
Win32.KP_INFO = 18;
Win32.KP_EFFECTIVE_KEYLEN = 19;
Win32.KP_SCHANNEL_ALG = 20;
Win32.KP_CLIENT_RANDOM = 21;
Win32.KP_SERVER_RANDOM = 22;
Win32.KP_RP = 23;
Win32.KP_PRECOMP_MD5 = 24;
Win32.KP_PRECOMP_SHA = 25;
Win32.KP_CLEAR_KEY = 27;
Win32.KP_PUB_EX_LEN = 28;
Win32.KP_PUB_EX_VAL = 29;
Win32.KP_KEYVAL = 30;
Win32.KP_ADMIN_PIN = 31;
Win32.KP_KEYEXCHANGE_PIN = 32;
Win32.KP_SIGNATURE_PIN = 33;
Win32.KP_PREHASH = 34;
Win32.KP_ROUNDS = 35;
Win32.KP_OAEP_PARAMS = 36;
Win32.KP_CMS_KEY_INFO = 37;
Win32.KP_CMS_DH_KEY_INFO = 38;
Win32.KP_PUB_PARAMS = 39;
Win32.KP_VERIFY_PARAMS = 40;
Win32.KP_HIGHEST_VERSION = 41;
Win32.KP_PIN_ID = 43;
Win32.KP_PIN_INFO = 44;
Win32.PKCS5_PADDING = 1;
Win32.RANDOM_PADDING = 2;
Win32.ZERO_PADDING = 3;
Win32.CRYPT_MODE_CBC = 1;
Win32.CRYPT_MODE_ECB = 2;
Win32.CRYPT_MODE_OFB = 3;
Win32.CRYPT_MODE_CFB = 4;
Win32.CRYPT_MODE_CTS = 5;
Win32.CRYPT_ENCRYPT = 1;
Win32.CRYPT_DECRYPT = 2;
Win32.CRYPT_EXPORT = 4;
Win32.CRYPT_READ = 8;
Win32.CRYPT_WRITE = 16;
Win32.CRYPT_MAC = 32;
Win32.CRYPT_EXPORT_KEY = 64;
Win32.CRYPT_IMPORT_KEY = 128;
Win32.CRYPT_ARCHIVE = 256;
Win32.HP_ALGID = 1;
Win32.HP_HASHSIZE = 4;
Win32.HP_TLS1PRF_LABEL = 6;
Win32.HP_TLS1PRF_SEED = 7;
Win32.CRYPT_FAILED = 0;
Win32.CRYPT_SUCCEED = 1;
Win32.PP_ENUMALGS = 1;
Win32.PP_ENUMCONTAINERS = 2;
Win32.PP_IMPTYPE = 3;
Win32.PP_NAME = 4;
Win32.PP_VERSION = 5;
Win32.PP_CONTAINER = 6;
Win32.PP_CHANGE_PASSWORD = 7;
Win32.PP_CERTCHAIN = 9;
Win32.PP_KEY_TYPE_SUBTYPE = 10;
Win32.PP_PROVTYPE = 16;
Win32.PP_KEYSTORAGE = 17;
Win32.PP_APPLI_CERT = 18;
Win32.PP_SYM_KEYSIZE = 19;
Win32.PP_SESSION_KEYSIZE = 20;
Win32.PP_ENUMALGS_EX = 22;
Win32.PP_ENUMMANDROOTS = 25;
Win32.PP_ENUMELECTROOTS = 26;
Win32.PP_KEYSET_TYPE = 27;
Win32.PP_ADMIN_PIN = 31;
Win32.PP_SIG_KEYSIZE_INC = 34;
Win32.PP_KEYX_KEYSIZE_INC = 35;
Win32.PP_UNIQUE_CONTAINER = 36;
Win32.PP_SGC_INFO = 37;
Win32.PP_KEYSPEC = 39;
Win32.PP_ENUMEX_SIGNING_PROT = 40;
Win32.PP_CRYPT_COUNT_KEY_USE = 41;
Win32.PP_SMARTCARD_GUID = 45;
Win32.PP_SMARTCARD_READER_ICON = 47;
Win32.CRYPT_FIRST = 1;
Win32.CRYPT_NEXT = 2;
Win32.CRYPT_SGC_ENUM = 4;
Win32.CRYPT_IMPL_HARDWARE = 1;
Win32.CRYPT_IMPL_SOFTWARE = 2;
Win32.CRYPT_IMPL_MIXED = 3;
Win32.CRYPT_IMPL_UNKNOWN = 4;
Win32.CRYPT_IMPL_REMOVABLE = 8;
Win32.CRYPT_SEC_DESCR = 1;
Win32.CRYPT_PSTORE = 2;
Win32.CRYPT_UI_PROMPT = 4;
Win32.CRYPT_FLAG_PCT1 = 1;
Win32.CRYPT_FLAG_SSL2 = 2;
Win32.CRYPT_FLAG_SSL3 = 4;
Win32.CRYPT_FLAG_TLS1 = 8;
Win32.CRYPT_FLAG_IPSEC = 16;
Win32.CRYPT_FLAG_SIGNING = 32;
Win32.CRYPT_SGC = 1;
Win32.CRYPT_FASTSGC = 2;
Win32.PP_CONTEXT_INFO = 11;
Win32.PP_DISMISS_PIN_UI_SEC = 49;
Win32.PROV_RSA_FULL = 1;
Win32.PROV_RSA_SIG = 2;
Win32.PROV_DSS = 3;
Win32.PROV_FORTEZZA = 4;
Win32.PROV_MS_EXCHANGE = 5;
Win32.PROV_SSL = 6;
Win32.PROV_RSA_SCHANNEL = 12;
Win32.PROV_DSS_DH = 13;
Win32.PROV_EC_ECDSA_SIG = 14;
Win32.PROV_EC_ECNRA_SIG = 15;
Win32.PROV_EC_ECDSA_FULL = 16;
Win32.PROV_EC_ECNRA_FULL = 17;
Win32.PROV_DH_SCHANNEL = 18;
Win32.PROV_SPYRUS_LYNKS = 20;
Win32.PROV_RNG = 21;
Win32.PROV_INTEL_SEC = 22;
Win32.PROV_REPLACE_OWF = 23;
Win32.PROV_RSA_AES = 24;
Win32.PROV_STT_MER = 7;
Win32.PROV_STT_ACQ = 8;
Win32.PROV_STT_BRND = 9;
Win32.PROV_STT_ROOT = 10;
Win32.PROV_STT_ISS = 11;
Win32.MS_DEF_PROV_A = "Microsoft Base Cryptographic Provider v1.0";
Win32.MS_DEF_PROV_W = "Microsoft Base Cryptographic Provider v1.0";
Win32.MS_DEF_PROV = "Microsoft Base Cryptographic Provider v1.0";
Win32.MS_ENHANCED_PROV_A = "Microsoft Enhanced Cryptographic Provider v1.0";
Win32.MS_ENHANCED_PROV_W = "Microsoft Enhanced Cryptographic Provider v1.0";
Win32.MS_ENHANCED_PROV = "Microsoft Enhanced Cryptographic Provider v1.0";
Win32.MS_STRONG_PROV_A = "Microsoft Strong Cryptographic Provider";
Win32.MS_STRONG_PROV_W = "Microsoft Strong Cryptographic Provider";
Win32.MS_STRONG_PROV = "Microsoft Strong Cryptographic Provider";
Win32.MS_DEF_RSA_SIG_PROV_A = "Microsoft RSA Signature Cryptographic Provider";
Win32.MS_DEF_RSA_SIG_PROV_W = "Microsoft RSA Signature Cryptographic Provider";
Win32.MS_DEF_RSA_SIG_PROV = "Microsoft RSA Signature Cryptographic Provider";
Win32.MS_DEF_RSA_SCHANNEL_PROV_A = "Microsoft RSA SChannel Cryptographic Provider";
Win32.MS_DEF_RSA_SCHANNEL_PROV_W = "Microsoft RSA SChannel Cryptographic Provider";
Win32.MS_DEF_RSA_SCHANNEL_PROV = "Microsoft RSA SChannel Cryptographic Provider";
Win32.MS_DEF_DSS_PROV_A = "Microsoft Base DSS Cryptographic Provider";
Win32.MS_DEF_DSS_PROV_W = "Microsoft Base DSS Cryptographic Provider";
Win32.MS_DEF_DSS_PROV = "Microsoft Base DSS Cryptographic Provider";
Win32.MS_DEF_DSS_DH_PROV_A = "Microsoft Base DSS and Diffie-Hellman Cryptographic Provider";
Win32.MS_DEF_DSS_DH_PROV_W = "Microsoft Base DSS and Diffie-Hellman Cryptographic Provider";
Win32.MS_DEF_DSS_DH_PROV = "Microsoft Base DSS and Diffie-Hellman Cryptographic Provider";
Win32.MS_ENH_DSS_DH_PROV_A = "Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider";
Win32.MS_ENH_DSS_DH_PROV_W = "Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider";
Win32.MS_ENH_DSS_DH_PROV = "Microsoft Enhanced DSS and Diffie-Hellman Cryptographic Provider";
Win32.MS_DEF_DH_SCHANNEL_PROV_A = "Microsoft DH SChannel Cryptographic Provider";
Win32.MS_DEF_DH_SCHANNEL_PROV_W = "Microsoft DH SChannel Cryptographic Provider";
Win32.MS_DEF_DH_SCHANNEL_PROV = "Microsoft DH SChannel Cryptographic Provider";
Win32.MS_SCARD_PROV_A = "Microsoft Base Smart Card Crypto Provider";
Win32.MS_SCARD_PROV_W = "Microsoft Base Smart Card Crypto Provider";
Win32.MS_SCARD_PROV = "Microsoft Base Smart Card Crypto Provider";
Win32.MS_ENH_RSA_AES_PROV_A = "Microsoft Enhanced RSA and AES Cryptographic Provider";
Win32.MS_ENH_RSA_AES_PROV_W = "Microsoft Enhanced RSA and AES Cryptographic Provider";
Win32.MS_ENH_RSA_AES_PROV_XP_A = "Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)";
Win32.MS_ENH_RSA_AES_PROV_XP_W = "Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)";
Win32.MS_ENH_RSA_AES_PROV_XP = "Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype)";
Win32.MS_ENH_RSA_AES_PROV = "Microsoft Enhanced RSA and AES Cryptographic Provider";
Win32.MAXUIDLEN = 64;
Win32.EXPO_OFFLOAD_REG_VALUE = "ExpoOffload";
Win32.EXPO_OFFLOAD_FUNC_NAME = "OffloadModExpo";
Win32.szKEY_CRYPTOAPI_PRIVATE_KEY_OPTIONS = "Software\\Policies\\Microsoft\\Cryptography";
Win32.szKEY_CACHE_ENABLED = "CachePrivateKeys";
Win32.szKEY_CACHE_SECONDS = "PrivateKeyLifetimeSeconds";
Win32.szPRIV_KEY_CACHE_MAX_ITEMS = "PrivKeyCacheMaxItems";
Win32.cPRIV_KEY_CACHE_MAX_ITEMS_DEFAULT = 20;
Win32.szPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS = "PrivKeyCachePurgeIntervalSeconds";
Win32.cPRIV_KEY_CACHE_PURGE_INTERVAL_SECONDS_DEFAULT = 86400;
Win32.CUR_BLOB_VERSION = 2;
Win32.SCHANNEL_MAC_KEY = 0;
Win32.SCHANNEL_ENC_KEY = 1;
Win32.INTERNATIONAL_USAGE = 1;
Win32.szOID_RSA = "1.2.840.113549";
Win32.szOID_PKCS = "1.2.840.113549.1";
Win32.szOID_RSA_HASH = "1.2.840.113549.2";
Win32.szOID_RSA_ENCRYPT = "1.2.840.113549.3";
Win32.szOID_PKCS_1 = "1.2.840.113549.1.1";
Win32.szOID_PKCS_2 = "1.2.840.113549.1.2";
Win32.szOID_PKCS_3 = "1.2.840.113549.1.3";
Win32.szOID_PKCS_4 = "1.2.840.113549.1.4";
Win32.szOID_PKCS_5 = "1.2.840.113549.1.5";
Win32.szOID_PKCS_6 = "1.2.840.113549.1.6";
Win32.szOID_PKCS_7 = "1.2.840.113549.1.7";
Win32.szOID_PKCS_8 = "1.2.840.113549.1.8";
Win32.szOID_PKCS_9 = "1.2.840.113549.1.9";
Win32.szOID_PKCS_10 = "1.2.840.113549.1.10";
Win32.szOID_PKCS_12 = "1.2.840.113549.1.12";
Win32.szOID_RSA_RSA = "1.2.840.113549.1.1.1";
Win32.szOID_RSA_MD2RSA = "1.2.840.113549.1.1.2";
Win32.szOID_RSA_MD4RSA = "1.2.840.113549.1.1.3";
Win32.szOID_RSA_MD5RSA = "1.2.840.113549.1.1.4";
Win32.szOID_RSA_SHA1RSA = "1.2.840.113549.1.1.5";
Win32.szOID_RSA_SETOAEP_RSA = "1.2.840.113549.1.1.6";
Win32.szOID_RSAES_OAEP = "1.2.840.113549.1.1.7";
Win32.szOID_RSA_MGF1 = "1.2.840.113549.1.1.8";
Win32.szOID_RSA_PSPECIFIED = "1.2.840.113549.1.1.9";
Win32.szOID_RSA_SSA_PSS = "1.2.840.113549.1.1.10";
Win32.szOID_RSA_SHA256RSA = "1.2.840.113549.1.1.11";
Win32.szOID_RSA_SHA384RSA = "1.2.840.113549.1.1.12";
Win32.szOID_RSA_SHA512RSA = "1.2.840.113549.1.1.13";
Win32.szOID_RSA_DH = "1.2.840.113549.1.3.1";
Win32.szOID_RSA_data = "1.2.840.113549.1.7.1";
Win32.szOID_RSA_signedData = "1.2.840.113549.1.7.2";
Win32.szOID_RSA_envelopedData = "1.2.840.113549.1.7.3";
Win32.szOID_RSA_signEnvData = "1.2.840.113549.1.7.4";
Win32.szOID_RSA_digestedData = "1.2.840.113549.1.7.5";
Win32.szOID_RSA_hashedData = "1.2.840.113549.1.7.5";
Win32.szOID_RSA_encryptedData = "1.2.840.113549.1.7.6";
Win32.szOID_RSA_emailAddr = "1.2.840.113549.1.9.1";
Win32.szOID_RSA_unstructName = "1.2.840.113549.1.9.2";
Win32.szOID_RSA_contentType = "1.2.840.113549.1.9.3";
Win32.szOID_RSA_messageDigest = "1.2.840.113549.1.9.4";
Win32.szOID_RSA_signingTime = "1.2.840.113549.1.9.5";
Win32.szOID_RSA_counterSign = "1.2.840.113549.1.9.6";
Win32.szOID_RSA_challengePwd = "1.2.840.113549.1.9.7";
Win32.szOID_RSA_unstructAddr = "1.2.840.113549.1.9.8";
Win32.szOID_RSA_extCertAttrs = "1.2.840.113549.1.9.9";
Win32.szOID_RSA_certExtensions = "1.2.840.113549.1.9.14";
Win32.szOID_RSA_SMIMECapabilities = "1.2.840.113549.1.9.15";
Win32.szOID_RSA_preferSignedData = "1.2.840.113549.1.9.15.1";
Win32.szOID_TIMESTAMP_TOKEN = "1.2.840.113549.1.9.16.1.4";
Win32.szOID_RFC3161_counterSign = "1.3.6.1.4.1.311.3.3.1";
Win32.szOID_RSA_SMIMEalg = "1.2.840.113549.1.9.16.3";
Win32.szOID_RSA_SMIMEalgESDH = "1.2.840.113549.1.9.16.3.5";
Win32.szOID_RSA_SMIMEalgCMS3DESwrap = "1.2.840.113549.1.9.16.3.6";
Win32.szOID_RSA_SMIMEalgCMSRC2wrap = "1.2.840.113549.1.9.16.3.7";
Win32.szOID_RSA_MD2 = "1.2.840.113549.2.2";
Win32.szOID_RSA_MD4 = "1.2.840.113549.2.4";
Win32.szOID_RSA_MD5 = "1.2.840.113549.2.5";
Win32.szOID_RSA_RC2CBC = "1.2.840.113549.3.2";
Win32.szOID_RSA_RC4 = "1.2.840.113549.3.4";
Win32.szOID_RSA_DES_EDE3_CBC = "1.2.840.113549.3.7";
Win32.szOID_RSA_RC5_CBCPad = "1.2.840.113549.3.9";
Win32.szOID_ANSI_X942 = "1.2.840.10046";
Win32.szOID_ANSI_X942_DH = "1.2.840.10046.2.1";
Win32.szOID_X957 = "1.2.840.10040";
Win32.szOID_X957_DSA = "1.2.840.10040.4.1";
Win32.szOID_X957_SHA1DSA = "1.2.840.10040.4.3";
Win32.szOID_ECC_PUBLIC_KEY = "1.2.840.10045.2.1";
Win32.szOID_ECC_CURVE_P256 = "1.2.840.10045.3.1.7";
Win32.szOID_ECC_CURVE_P384 = "1.3.132.0.34";
Win32.szOID_ECC_CURVE_P521 = "1.3.132.0.35";
Win32.szOID_ECC_CURVE_BRAINPOOLP160R1 = "1.3.36.3.3.2.8.1.1.1";
Win32.szOID_ECC_CURVE_BRAINPOOLP160T1 = "1.3.36.3.3.2.8.1.1.2";
Win32.szOID_ECC_CURVE_BRAINPOOLP192R1 = "1.3.36.3.3.2.8.1.1.3";
Win32.szOID_ECC_CURVE_BRAINPOOLP192T1 = "1.3.36.3.3.2.8.1.1.4";
Win32.szOID_ECC_CURVE_BRAINPOOLP224R1 = "1.3.36.3.3.2.8.1.1.5";
Win32.szOID_ECC_CURVE_BRAINPOOLP224T1 = "1.3.36.3.3.2.8.1.1.6";
Win32.szOID_ECC_CURVE_BRAINPOOLP256R1 = "1.3.36.3.3.2.8.1.1.7";
Win32.szOID_ECC_CURVE_BRAINPOOLP256T1 = "1.3.36.3.3.2.8.1.1.8";
Win32.szOID_ECC_CURVE_BRAINPOOLP320R1 = "1.3.36.3.3.2.8.1.1.9";
Win32.szOID_ECC_CURVE_BRAINPOOLP320T1 = "1.3.36.3.3.2.8.1.1.10";
Win32.szOID_ECC_CURVE_BRAINPOOLP384R1 = "1.3.36.3.3.2.8.1.1.11";
Win32.szOID_ECC_CURVE_BRAINPOOLP384T1 = "1.3.36.3.3.2.8.1.1.12";
Win32.szOID_ECC_CURVE_BRAINPOOLP512R1 = "1.3.36.3.3.2.8.1.1.13";
Win32.szOID_ECC_CURVE_BRAINPOOLP512T1 = "1.3.36.3.3.2.8.1.1.14";
Win32.szOID_ECC_CURVE_EC192WAPI = "1.2.156.11235.1.1.2.1";
Win32.szOID_CN_ECDSA_SHA256 = "1.2.156.11235.1.1.1";
Win32.szOID_ECC_CURVE_NISTP192 = "1.2.840.10045.3.1.1";
Win32.szOID_ECC_CURVE_NISTP224 = "1.3.132.0.33";
Win32.szOID_ECC_CURVE_NISTP256 = "1.2.840.10045.3.1.7";
Win32.szOID_ECC_CURVE_NISTP384 = "1.3.132.0.34";
Win32.szOID_ECC_CURVE_NISTP521 = "1.3.132.0.35";
Win32.szOID_ECC_CURVE_SECP160K1 = "1.3.132.0.9";
Win32.szOID_ECC_CURVE_SECP160R1 = "1.3.132.0.8";
Win32.szOID_ECC_CURVE_SECP160R2 = "1.3.132.0.30";
Win32.szOID_ECC_CURVE_SECP192K1 = "1.3.132.0.31";
Win32.szOID_ECC_CURVE_SECP192R1 = "1.2.840.10045.3.1.1";
Win32.szOID_ECC_CURVE_SECP224K1 = "1.3.132.0.32";
Win32.szOID_ECC_CURVE_SECP224R1 = "1.3.132.0.33";
Win32.szOID_ECC_CURVE_SECP256K1 = "1.3.132.0.10";
Win32.szOID_ECC_CURVE_SECP256R1 = "1.2.840.10045.3.1.7";
Win32.szOID_ECC_CURVE_SECP384R1 = "1.3.132.0.34";
Win32.szOID_ECC_CURVE_SECP521R1 = "1.3.132.0.35";
Win32.szOID_ECC_CURVE_WTLS7 = "1.3.132.0.30";
Win32.szOID_ECC_CURVE_WTLS9 = "2.23.43.1.4.9";
Win32.szOID_ECC_CURVE_WTLS12 = "1.3.132.0.33";
Win32.szOID_ECC_CURVE_X962P192V1 = "1.2.840.10045.3.1.1";
Win32.szOID_ECC_CURVE_X962P192V2 = "1.2.840.10045.3.1.2";
Win32.szOID_ECC_CURVE_X962P192V3 = "1.2.840.10045.3.1.3";
Win32.szOID_ECC_CURVE_X962P239V1 = "1.2.840.10045.3.1.4";
Win32.szOID_ECC_CURVE_X962P239V2 = "1.2.840.10045.3.1.5";
Win32.szOID_ECC_CURVE_X962P239V3 = "1.2.840.10045.3.1.6";
Win32.szOID_ECC_CURVE_X962P256V1 = "1.2.840.10045.3.1.7";
Win32.szOID_ECDSA_SHA1 = "1.2.840.10045.4.1";
Win32.szOID_ECDSA_SPECIFIED = "1.2.840.10045.4.3";
Win32.szOID_ECDSA_SHA256 = "1.2.840.10045.4.3.2";
Win32.szOID_ECDSA_SHA384 = "1.2.840.10045.4.3.3";
Win32.szOID_ECDSA_SHA512 = "1.2.840.10045.4.3.4";
Win32.szOID_NIST_AES128_CBC = "2.16.840.1.101.3.4.1.2";
Win32.szOID_NIST_AES192_CBC = "2.16.840.1.101.3.4.1.22";
Win32.szOID_NIST_AES256_CBC = "2.16.840.1.101.3.4.1.42";
Win32.szOID_NIST_AES128_WRAP = "2.16.840.1.101.3.4.1.5";
Win32.szOID_NIST_AES192_WRAP = "2.16.840.1.101.3.4.1.25";
Win32.szOID_NIST_AES256_WRAP = "2.16.840.1.101.3.4.1.45";
Win32.szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF = "1.3.133.16.840.63.0.2";
Win32.szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF = "1.3.132.1.11.1";
Win32.szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF = "1.3.132.1.11.2";
Win32.szOID_DS = "2.5";
Win32.szOID_DSALG = "2.5.8";
Win32.szOID_DSALG_CRPT = "2.5.8.1";
Win32.szOID_DSALG_HASH = "2.5.8.2";
Win32.szOID_DSALG_SIGN = "2.5.8.3";
Win32.szOID_DSALG_RSA = "2.5.8.1.1";
Win32.szOID_OIW = "1.3.14";
Win32.szOID_OIWSEC = "1.3.14.3.2";
Win32.szOID_OIWSEC_md4RSA = "1.3.14.3.2.2";
Win32.szOID_OIWSEC_md5RSA = "1.3.14.3.2.3";
Win32.szOID_OIWSEC_md4RSA2 = "1.3.14.3.2.4";
Win32.szOID_OIWSEC_desECB = "1.3.14.3.2.6";
Win32.szOID_OIWSEC_desCBC = "1.3.14.3.2.7";
Win32.szOID_OIWSEC_desOFB = "1.3.14.3.2.8";
Win32.szOID_OIWSEC_desCFB = "1.3.14.3.2.9";
Win32.szOID_OIWSEC_desMAC = "1.3.14.3.2.10";
Win32.szOID_OIWSEC_rsaSign = "1.3.14.3.2.11";
Win32.szOID_OIWSEC_dsa = "1.3.14.3.2.12";
Win32.szOID_OIWSEC_shaDSA = "1.3.14.3.2.13";
Win32.szOID_OIWSEC_mdc2RSA = "1.3.14.3.2.14";
Win32.szOID_OIWSEC_shaRSA = "1.3.14.3.2.15";
Win32.szOID_OIWSEC_dhCommMod = "1.3.14.3.2.16";
Win32.szOID_OIWSEC_desEDE = "1.3.14.3.2.17";
Win32.szOID_OIWSEC_sha = "1.3.14.3.2.18";
Win32.szOID_OIWSEC_mdc2 = "1.3.14.3.2.19";
Win32.szOID_OIWSEC_dsaComm = "1.3.14.3.2.20";
Win32.szOID_OIWSEC_dsaCommSHA = "1.3.14.3.2.21";
Win32.szOID_OIWSEC_rsaXchg = "1.3.14.3.2.22";
Win32.szOID_OIWSEC_keyHashSeal = "1.3.14.3.2.23";
Win32.szOID_OIWSEC_md2RSASign = "1.3.14.3.2.24";
Win32.szOID_OIWSEC_md5RSASign = "1.3.14.3.2.25";
Win32.szOID_OIWSEC_sha1 = "1.3.14.3.2.26";
Win32.szOID_OIWSEC_dsaSHA1 = "1.3.14.3.2.27";
Win32.szOID_OIWSEC_dsaCommSHA1 = "1.3.14.3.2.28";
Win32.szOID_OIWSEC_sha1RSASign = "1.3.14.3.2.29";
Win32.szOID_OIWDIR = "1.3.14.7.2";
Win32.szOID_OIWDIR_CRPT = "1.3.14.7.2.1";
Win32.szOID_OIWDIR_HASH = "1.3.14.7.2.2";
Win32.szOID_OIWDIR_SIGN = "1.3.14.7.2.3";
Win32.szOID_OIWDIR_md2 = "1.3.14.7.2.2.1";
Win32.szOID_OIWDIR_md2RSA = "1.3.14.7.2.3.1";
Win32.szOID_INFOSEC = "2.16.840.1.101.2.1";
Win32.szOID_INFOSEC_sdnsSignature = "2.16.840.1.101.2.1.1.1";
Win32.szOID_INFOSEC_mosaicSignature = "2.16.840.1.101.2.1.1.2";
Win32.szOID_INFOSEC_sdnsConfidentiality = "2.16.840.1.101.2.1.1.3";
Win32.szOID_INFOSEC_mosaicConfidentiality = "2.16.840.1.101.2.1.1.4";
Win32.szOID_INFOSEC_sdnsIntegrity = "2.16.840.1.101.2.1.1.5";
Win32.szOID_INFOSEC_mosaicIntegrity = "2.16.840.1.101.2.1.1.6";
Win32.szOID_INFOSEC_sdnsTokenProtection = "2.16.840.1.101.2.1.1.7";
Win32.szOID_INFOSEC_mosaicTokenProtection = "2.16.840.1.101.2.1.1.8";
Win32.szOID_INFOSEC_sdnsKeyManagement = "2.16.840.1.101.2.1.1.9";
Win32.szOID_INFOSEC_mosaicKeyManagement = "2.16.840.1.101.2.1.1.10";
Win32.szOID_INFOSEC_sdnsKMandSig = "2.16.840.1.101.2.1.1.11";
Win32.szOID_INFOSEC_mosaicKMandSig = "2.16.840.1.101.2.1.1.12";
Win32.szOID_INFOSEC_SuiteASignature = "2.16.840.1.101.2.1.1.13";
Win32.szOID_INFOSEC_SuiteAConfidentiality = "2.16.840.1.101.2.1.1.14";
Win32.szOID_INFOSEC_SuiteAIntegrity = "2.16.840.1.101.2.1.1.15";
Win32.szOID_INFOSEC_SuiteATokenProtection = "2.16.840.1.101.2.1.1.16";
Win32.szOID_INFOSEC_SuiteAKeyManagement = "2.16.840.1.101.2.1.1.17";
Win32.szOID_INFOSEC_SuiteAKMandSig = "2.16.840.1.101.2.1.1.18";
Win32.szOID_INFOSEC_mosaicUpdatedSig = "2.16.840.1.101.2.1.1.19";
Win32.szOID_INFOSEC_mosaicKMandUpdSig = "2.16.840.1.101.2.1.1.20";
Win32.szOID_INFOSEC_mosaicUpdatedInteg = "2.16.840.1.101.2.1.1.21";
Win32.szOID_NIST_sha256 = "2.16.840.1.101.3.4.2.1";
Win32.szOID_NIST_sha384 = "2.16.840.1.101.3.4.2.2";
Win32.szOID_NIST_sha512 = "2.16.840.1.101.3.4.2.3";
Win32.szOID_COMMON_NAME = "2.5.4.3";
Win32.szOID_SUR_NAME = "2.5.4.4";
Win32.szOID_DEVICE_SERIAL_NUMBER = "2.5.4.5";
Win32.szOID_COUNTRY_NAME = "2.5.4.6";
Win32.szOID_LOCALITY_NAME = "2.5.4.7";
Win32.szOID_STATE_OR_PROVINCE_NAME = "2.5.4.8";
Win32.szOID_STREET_ADDRESS = "2.5.4.9";
Win32.szOID_ORGANIZATION_NAME = "2.5.4.10";
Win32.szOID_ORGANIZATIONAL_UNIT_NAME = "2.5.4.11";
Win32.szOID_TITLE = "2.5.4.12";
Win32.szOID_DESCRIPTION = "2.5.4.13";
Win32.szOID_SEARCH_GUIDE = "2.5.4.14";
Win32.szOID_BUSINESS_CATEGORY = "2.5.4.15";
Win32.szOID_POSTAL_ADDRESS = "2.5.4.16";
Win32.szOID_POSTAL_CODE = "2.5.4.17";
Win32.szOID_POST_OFFICE_BOX = "2.5.4.18";
Win32.szOID_PHYSICAL_DELIVERY_OFFICE_NAME = "2.5.4.19";
Win32.szOID_TELEPHONE_NUMBER = "2.5.4.20";
Win32.szOID_TELEX_NUMBER = "2.5.4.21";
Win32.szOID_TELETEXT_TERMINAL_IDENTIFIER = "2.5.4.22";
Win32.szOID_FACSIMILE_TELEPHONE_NUMBER = "2.5.4.23";
Win32.szOID_X21_ADDRESS = "2.5.4.24";
Win32.szOID_INTERNATIONAL_ISDN_NUMBER = "2.5.4.25";
Win32.szOID_REGISTERED_ADDRESS = "2.5.4.26";
Win32.szOID_DESTINATION_INDICATOR = "2.5.4.27";
Win32.szOID_PREFERRED_DELIVERY_METHOD = "2.5.4.28";
Win32.szOID_PRESENTATION_ADDRESS = "2.5.4.29";
Win32.szOID_SUPPORTED_APPLICATION_CONTEXT = "2.5.4.30";
Win32.szOID_MEMBER = "2.5.4.31";
Win32.szOID_OWNER = "2.5.4.32";
Win32.szOID_ROLE_OCCUPANT = "2.5.4.33";
Win32.szOID_SEE_ALSO = "2.5.4.34";
Win32.szOID_USER_PASSWORD = "2.5.4.35";
Win32.szOID_USER_CERTIFICATE = "2.5.4.36";
Win32.szOID_CA_CERTIFICATE = "2.5.4.37";
Win32.szOID_AUTHORITY_REVOCATION_LIST = "2.5.4.38";
Win32.szOID_CERTIFICATE_REVOCATION_LIST = "2.5.4.39";
Win32.szOID_CROSS_CERTIFICATE_PAIR = "2.5.4.40";
Win32.szOID_GIVEN_NAME = "2.5.4.42";
Win32.szOID_INITIALS = "2.5.4.43";
Win32.szOID_DN_QUALIFIER = "2.5.4.46";
Win32.szOID_DOMAIN_COMPONENT = "0.9.2342.19200300.100.1.25";
Win32.szOID_PKCS_12_FRIENDLY_NAME_ATTR = "1.2.840.113549.1.9.20";
Win32.szOID_PKCS_12_LOCAL_KEY_ID = "1.2.840.113549.1.9.21";
Win32.szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR = "1.3.6.1.4.1.311.17.1";
Win32.szOID_LOCAL_MACHINE_KEYSET = "1.3.6.1.4.1.311.17.2";
Win32.szOID_PKCS_12_EXTENDED_ATTRIBUTES = "1.3.6.1.4.1.311.17.3";
Win32.szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID = "1.3.6.1.4.1.311.17.4";
Win32.szOID_KEYID_RDN = "1.3.6.1.4.1.311.10.7.1";
Win32.szOID_EV_RDN_LOCALE = "1.3.6.1.4.1.311.60.2.1.1";
Win32.szOID_EV_RDN_STATE_OR_PROVINCE = "1.3.6.1.4.1.311.60.2.1.2";
Win32.szOID_EV_RDN_COUNTRY = "1.3.6.1.4.1.311.60.2.1.3";
Win32.CERT_RDN_TYPE_MASK = 255;
Win32.CERT_RDN_FLAGS_MASK = 4278190080;
Win32.CERT_RDN_ENABLE_T61_UNICODE_FLAG = 2147483648;
Win32.CERT_RDN_ENABLE_UTF8_UNICODE_FLAG = 536870912;
Win32.CERT_RDN_FORCE_UTF8_UNICODE_FLAG = 268435456;
Win32.CERT_RDN_DISABLE_CHECK_TYPE_FLAG = 1073741824;
Win32.CERT_RDN_DISABLE_IE4_UTF8_FLAG = 16777216;
Win32.CERT_RDN_ENABLE_PUNYCODE_FLAG = 33554432;
Win32.CERT_RSA_PUBLIC_KEY_OBJID = "1.2.840.113549.1.1.1";
Win32.CERT_DEFAULT_OID_PUBLIC_KEY_SIGN = "1.2.840.113549.1.1.1";
Win32.CERT_DEFAULT_OID_PUBLIC_KEY_XCHG = "1.2.840.113549.1.1.1";
Win32.CRYPT_ECC_PRIVATE_KEY_INFO_v1 = 1;
Win32.CERT_V1 = 0;
Win32.CERT_V2 = 1;
Win32.CERT_V3 = 2;
Win32.CERT_INFO_VERSION_FLAG = 1;
Win32.CERT_INFO_SERIAL_NUMBER_FLAG = 2;
Win32.CERT_INFO_SIGNATURE_ALGORITHM_FLAG = 3;
Win32.CERT_INFO_ISSUER_FLAG = 4;
Win32.CERT_INFO_NOT_BEFORE_FLAG = 5;
Win32.CERT_INFO_NOT_AFTER_FLAG = 6;
Win32.CERT_INFO_SUBJECT_FLAG = 7;
Win32.CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG = 8;
Win32.CERT_INFO_ISSUER_UNIQUE_ID_FLAG = 9;
Win32.CERT_INFO_SUBJECT_UNIQUE_ID_FLAG = 10;
Win32.CERT_INFO_EXTENSION_FLAG = 11;
Win32.CRL_V1 = 0;
Win32.CRL_V2 = 1;
Win32.CERT_BUNDLE_CERTIFICATE = 0;
Win32.CERT_BUNDLE_CRL = 1;
Win32.CERT_REQUEST_V1 = 0;
Win32.CERT_KEYGEN_REQUEST_V1 = 0;
Win32.CTL_V1 = 0;
Win32.CERT_ENCODING_TYPE_MASK = 65535;
Win32.CMSG_ENCODING_TYPE_MASK = 4294901760;
Win32.CRYPT_ASN_ENCODING = 1;
Win32.CRYPT_NDR_ENCODING = 2;
Win32.X509_NDR_ENCODING = 2;
Win32.PKCS_7_NDR_ENCODING = 131072;
Win32.CRYPT_FORMAT_STR_MULTI_LINE = 1;
Win32.CRYPT_FORMAT_STR_NO_HEX = 16;
Win32.CRYPT_FORMAT_SIMPLE = 1;
Win32.CRYPT_FORMAT_X509 = 2;
Win32.CRYPT_FORMAT_OID = 4;
Win32.CRYPT_FORMAT_RDN_SEMICOLON = 256;
Win32.CRYPT_FORMAT_RDN_CRLF = 512;
Win32.CRYPT_FORMAT_RDN_UNQUOTE = 1024;
Win32.CRYPT_FORMAT_RDN_REVERSE = 2048;
Win32.CRYPT_FORMAT_COMMA = 4096;
Win32.CRYPT_FORMAT_SEMICOLON = 256;
Win32.CRYPT_FORMAT_CRLF = 512;
Win32.CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG = 8;
Win32.CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG = 268435456;
Win32.CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG = 65536;
Win32.CRYPT_ENCODE_ENABLE_UTF8PERCENT_FLAG = 262144;
Win32.CRYPT_DECODE_NOCOPY_FLAG = 1;
Win32.CRYPT_DECODE_TO_BE_SIGNED_FLAG = 2;
Win32.CRYPT_DECODE_SHARE_OID_STRING_FLAG = 4;
Win32.CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG = 8;
Win32.CRYPT_DECODE_ALLOC_FLAG = 32768;
Win32.CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG = 16777216;
Win32.CRYPT_DECODE_ENABLE_PUNYCODE_FLAG = 33554432;
Win32.CRYPT_DECODE_ENABLE_UTF8PERCENT_FLAG = 67108864;
Win32.CRYPT_ENCODE_DECODE_NONE = 0;
Win32.X509_CERT = 1;
Win32.X509_CERT_TO_BE_SIGNED = 2;
Win32.X509_CERT_CRL_TO_BE_SIGNED = 3;
Win32.X509_CERT_REQUEST_TO_BE_SIGNED = 4;
Win32.X509_EXTENSIONS = 5;
Win32.X509_NAME_VALUE = 6;
Win32.X509_NAME = 7;
Win32.X509_PUBLIC_KEY_INFO = 8;
Win32.X509_AUTHORITY_KEY_ID = 9;
Win32.X509_KEY_ATTRIBUTES = 10;
Win32.X509_KEY_USAGE_RESTRICTION = 11;
Win32.X509_ALTERNATE_NAME = 12;
Win32.X509_BASIC_CONSTRAINTS = 13;
Win32.X509_KEY_USAGE = 14;
Win32.X509_BASIC_CONSTRAINTS2 = 15;
Win32.X509_CERT_POLICIES = 16;
Win32.PKCS_UTC_TIME = 17;
Win32.PKCS_TIME_REQUEST = 18;
Win32.RSA_CSP_PUBLICKEYBLOB = 19;
Win32.X509_UNICODE_NAME = 20;
Win32.X509_KEYGEN_REQUEST_TO_BE_SIGNED = 21;
Win32.PKCS_ATTRIBUTE = 22;
Win32.PKCS_CONTENT_INFO_SEQUENCE_OF_ANY = 23;
Win32.X509_UNICODE_NAME_VALUE = 24;
Win32.X509_ANY_STRING = 6;
Win32.X509_UNICODE_ANY_STRING = 24;
Win32.X509_OCTET_STRING = 25;
Win32.X509_BITS = 26;
Win32.X509_INTEGER = 27;
Win32.X509_MULTI_BYTE_INTEGER = 28;
Win32.X509_ENUMERATED = 29;
Win32.X509_CHOICE_OF_TIME = 30;
Win32.X509_AUTHORITY_KEY_ID2 = 31;
Win32.X509_AUTHORITY_INFO_ACCESS = 32;
Win32.X509_SUBJECT_INFO_ACCESS = 32;
Win32.X509_CRL_REASON_CODE = 29;
Win32.PKCS_CONTENT_INFO = 33;
Win32.X509_SEQUENCE_OF_ANY = 34;
Win32.X509_CRL_DIST_POINTS = 35;
Win32.X509_ENHANCED_KEY_USAGE = 36;
Win32.PKCS_CTL = 37;
Win32.X509_MULTI_BYTE_UINT = 38;
Win32.X509_DSS_PUBLICKEY = 38;
Win32.X509_DSS_PARAMETERS = 39;
Win32.X509_DSS_SIGNATURE = 40;
Win32.PKCS_RC2_CBC_PARAMETERS = 41;
Win32.PKCS_SMIME_CAPABILITIES = 42;
Win32.X509_QC_STATEMENTS_EXT = 42;
Win32.PKCS_RSA_PRIVATE_KEY = 43;
Win32.PKCS_PRIVATE_KEY_INFO = 44;
Win32.PKCS_ENCRYPTED_PRIVATE_KEY_INFO = 45;
Win32.X509_PKIX_POLICY_QUALIFIER_USERNOTICE = 46;
Win32.X509_DH_PUBLICKEY = 38;
Win32.X509_DH_PARAMETERS = 47;
Win32.PKCS_ATTRIBUTES = 48;
Win32.PKCS_SORTED_CTL = 49;
Win32.X509_ECC_SIGNATURE = 47;
Win32.X942_DH_PARAMETERS = 50;
Win32.X509_BITS_WITHOUT_TRAILING_ZEROES = 51;
Win32.X942_OTHER_INFO = 52;
Win32.X509_CERT_PAIR = 53;
Win32.X509_ISSUING_DIST_POINT = 54;
Win32.X509_NAME_CONSTRAINTS = 55;
Win32.X509_POLICY_MAPPINGS = 56;
Win32.X509_POLICY_CONSTRAINTS = 57;
Win32.X509_CROSS_CERT_DIST_POINTS = 58;
Win32.CMC_DATA = 59;
Win32.CMC_RESPONSE = 60;
Win32.CMC_STATUS = 61;
Win32.CMC_ADD_EXTENSIONS = 62;
Win32.CMC_ADD_ATTRIBUTES = 63;
Win32.X509_CERTIFICATE_TEMPLATE = 64;
Win32.OCSP_SIGNED_REQUEST = 65;
Win32.OCSP_REQUEST = 66;
Win32.OCSP_RESPONSE = 67;
Win32.OCSP_BASIC_SIGNED_RESPONSE = 68;
Win32.OCSP_BASIC_RESPONSE = 69;
Win32.X509_LOGOTYPE_EXT = 70;
Win32.X509_BIOMETRIC_EXT = 71;
Win32.CNG_RSA_PUBLIC_KEY_BLOB = 72;
Win32.X509_OBJECT_IDENTIFIER = 73;
Win32.X509_ALGORITHM_IDENTIFIER = 74;
Win32.PKCS_RSA_SSA_PSS_PARAMETERS = 75;
Win32.PKCS_RSAES_OAEP_PARAMETERS = 76;
Win32.ECC_CMS_SHARED_INFO = 77;
Win32.TIMESTAMP_REQUEST = 78;
Win32.TIMESTAMP_RESPONSE = 79;
Win32.TIMESTAMP_INFO = 80;
Win32.X509_CERT_BUNDLE = 81;
Win32.X509_ECC_PRIVATE_KEY = 82;
Win32.CNG_RSA_PRIVATE_KEY_BLOB = 83;
Win32.X509_SUBJECT_DIR_ATTRS = 84;
Win32.X509_ECC_PARAMETERS = 85;
Win32.PKCS7_SIGNER_INFO = 500;
Win32.CMS_SIGNER_INFO = 501;
Win32.szOID_AUTHORITY_KEY_IDENTIFIER = "2.5.29.1";
Win32.szOID_KEY_ATTRIBUTES = "2.5.29.2";
Win32.szOID_CERT_POLICIES_95 = "2.5.29.3";
Win32.szOID_KEY_USAGE_RESTRICTION = "2.5.29.4";
Win32.szOID_SUBJECT_ALT_NAME = "2.5.29.7";
Win32.szOID_ISSUER_ALT_NAME = "2.5.29.8";
Win32.szOID_BASIC_CONSTRAINTS = "2.5.29.10";
Win32.szOID_KEY_USAGE = "2.5.29.15";
Win32.szOID_PRIVATEKEY_USAGE_PERIOD = "2.5.29.16";
Win32.szOID_BASIC_CONSTRAINTS2 = "2.5.29.19";
Win32.szOID_CERT_POLICIES = "2.5.29.32";
Win32.szOID_ANY_CERT_POLICY = "2.5.29.32.0";
Win32.szOID_INHIBIT_ANY_POLICY = "2.5.29.54";
Win32.szOID_AUTHORITY_KEY_IDENTIFIER2 = "2.5.29.35";
Win32.szOID_SUBJECT_KEY_IDENTIFIER = "2.5.29.14";
Win32.szOID_SUBJECT_ALT_NAME2 = "2.5.29.17";
Win32.szOID_ISSUER_ALT_NAME2 = "2.5.29.18";
Win32.szOID_CRL_REASON_CODE = "2.5.29.21";
Win32.szOID_REASON_CODE_HOLD = "2.5.29.23";
Win32.szOID_CRL_DIST_POINTS = "2.5.29.31";
Win32.szOID_ENHANCED_KEY_USAGE = "2.5.29.37";
Win32.szOID_ANY_ENHANCED_KEY_USAGE = "2.5.29.37.0";
Win32.szOID_CRL_NUMBER = "2.5.29.20";
Win32.szOID_DELTA_CRL_INDICATOR = "2.5.29.27";
Win32.szOID_ISSUING_DIST_POINT = "2.5.29.28";
Win32.szOID_FRESHEST_CRL = "2.5.29.46";
Win32.szOID_NAME_CONSTRAINTS = "2.5.29.30";
Win32.szOID_POLICY_MAPPINGS = "2.5.29.33";
Win32.szOID_LEGACY_POLICY_MAPPINGS = "2.5.29.5";
Win32.szOID_POLICY_CONSTRAINTS = "2.5.29.36";
Win32.szOID_RENEWAL_CERTIFICATE = "1.3.6.1.4.1.311.13.1";
Win32.szOID_ENROLLMENT_NAME_VALUE_PAIR = "1.3.6.1.4.1.311.13.2.1";
Win32.szOID_ENROLLMENT_CSP_PROVIDER = "1.3.6.1.4.1.311.13.2.2";
Win32.szOID_OS_VERSION = "1.3.6.1.4.1.311.13.2.3";
Win32.szOID_ENROLLMENT_AGENT = "1.3.6.1.4.1.311.20.2.1";
Win32.szOID_PKIX = "1.3.6.1.5.5.7";
Win32.szOID_PKIX_PE = "1.3.6.1.5.5.7.1";
Win32.szOID_AUTHORITY_INFO_ACCESS = "1.3.6.1.5.5.7.1.1";
Win32.szOID_SUBJECT_INFO_ACCESS = "1.3.6.1.5.5.7.1.11";
Win32.szOID_BIOMETRIC_EXT = "1.3.6.1.5.5.7.1.2";
Win32.szOID_QC_STATEMENTS_EXT = "1.3.6.1.5.5.7.1.3";
Win32.szOID_LOGOTYPE_EXT = "1.3.6.1.5.5.7.1.12";
Win32.szOID_TLS_FEATURES_EXT = "1.3.6.1.5.5.7.1.24";
Win32.szOID_CERT_EXTENSIONS = "1.3.6.1.4.1.311.2.1.14";
Win32.szOID_NEXT_UPDATE_LOCATION = "1.3.6.1.4.1.311.10.2";
Win32.szOID_REMOVE_CERTIFICATE = "1.3.6.1.4.1.311.10.8.1";
Win32.szOID_CROSS_CERT_DIST_POINTS = "1.3.6.1.4.1.311.10.9.1";
Win32.szOID_CTL = "1.3.6.1.4.1.311.10.1";
Win32.szOID_SORTED_CTL = "1.3.6.1.4.1.311.10.1.1";
Win32.szOID_SERIALIZED = "1.3.6.1.4.1.311.10.3.3.1";
Win32.szOID_NT_PRINCIPAL_NAME = "1.3.6.1.4.1.311.20.2.3";
Win32.szOID_INTERNATIONALIZED_EMAIL_ADDRESS = "1.3.6.1.4.1.311.20.2.4";
Win32.szOID_PRODUCT_UPDATE = "1.3.6.1.4.1.311.31.1";
Win32.szOID_ANY_APPLICATION_POLICY = "1.3.6.1.4.1.311.10.12.1";
Win32.szOID_AUTO_ENROLL_CTL_USAGE = "1.3.6.1.4.1.311.20.1";
Win32.szOID_ENROLL_CERTTYPE_EXTENSION = "1.3.6.1.4.1.311.20.2";
Win32.szOID_CERT_MANIFOLD = "1.3.6.1.4.1.311.20.3";
Win32.szOID_CERTSRV_CA_VERSION = "1.3.6.1.4.1.311.21.1";
Win32.szOID_CERTSRV_PREVIOUS_CERT_HASH = "1.3.6.1.4.1.311.21.2";
Win32.szOID_CRL_VIRTUAL_BASE = "1.3.6.1.4.1.311.21.3";
Win32.szOID_CRL_NEXT_PUBLISH = "1.3.6.1.4.1.311.21.4";
Win32.szOID_KP_CA_EXCHANGE = "1.3.6.1.4.1.311.21.5";
Win32.szOID_KP_PRIVACY_CA = "1.3.6.1.4.1.311.21.36";
Win32.szOID_KP_KEY_RECOVERY_AGENT = "1.3.6.1.4.1.311.21.6";
Win32.szOID_CERTIFICATE_TEMPLATE = "1.3.6.1.4.1.311.21.7";
Win32.szOID_ENTERPRISE_OID_ROOT = "1.3.6.1.4.1.311.21.8";
Win32.szOID_RDN_DUMMY_SIGNER = "1.3.6.1.4.1.311.21.9";
Win32.szOID_APPLICATION_CERT_POLICIES = "1.3.6.1.4.1.311.21.10";
Win32.szOID_APPLICATION_POLICY_MAPPINGS = "1.3.6.1.4.1.311.21.11";
Win32.szOID_APPLICATION_POLICY_CONSTRAINTS = "1.3.6.1.4.1.311.21.12";
Win32.szOID_ARCHIVED_KEY_ATTR = "1.3.6.1.4.1.311.21.13";
Win32.szOID_CRL_SELF_CDP = "1.3.6.1.4.1.311.21.14";
Win32.szOID_REQUIRE_CERT_CHAIN_POLICY = "1.3.6.1.4.1.311.21.15";
Win32.szOID_ARCHIVED_KEY_CERT_HASH = "1.3.6.1.4.1.311.21.16";
Win32.szOID_ISSUED_CERT_HASH = "1.3.6.1.4.1.311.21.17";
Win32.szOID_DS_EMAIL_REPLICATION = "1.3.6.1.4.1.311.21.19";
Win32.szOID_REQUEST_CLIENT_INFO = "1.3.6.1.4.1.311.21.20";
Win32.szOID_ENCRYPTED_KEY_HASH = "1.3.6.1.4.1.311.21.21";
Win32.szOID_CERTSRV_CROSSCA_VERSION = "1.3.6.1.4.1.311.21.22";
Win32.szOID_NTDS_REPLICATION = "1.3.6.1.4.1.311.25.1";
Win32.szOID_SUBJECT_DIR_ATTRS = "2.5.29.9";
Win32.szOID_PKIX_KP = "1.3.6.1.5.5.7.3";
Win32.szOID_PKIX_KP_SERVER_AUTH = "1.3.6.1.5.5.7.3.1";
Win32.szOID_PKIX_KP_CLIENT_AUTH = "1.3.6.1.5.5.7.3.2";
Win32.szOID_PKIX_KP_CODE_SIGNING = "1.3.6.1.5.5.7.3.3";
Win32.szOID_PKIX_KP_EMAIL_PROTECTION = "1.3.6.1.5.5.7.3.4";
Win32.szOID_PKIX_KP_IPSEC_END_SYSTEM = "1.3.6.1.5.5.7.3.5";
Win32.szOID_PKIX_KP_IPSEC_TUNNEL = "1.3.6.1.5.5.7.3.6";
Win32.szOID_PKIX_KP_IPSEC_USER = "1.3.6.1.5.5.7.3.7";
Win32.szOID_PKIX_KP_TIMESTAMP_SIGNING = "1.3.6.1.5.5.7.3.8";
Win32.szOID_PKIX_KP_OCSP_SIGNING = "1.3.6.1.5.5.7.3.9";
Win32.szOID_PKIX_OCSP_NOCHECK = "1.3.6.1.5.5.7.48.1.5";
Win32.szOID_PKIX_OCSP_NONCE = "1.3.6.1.5.5.7.48.1.2";
Win32.szOID_IPSEC_KP_IKE_INTERMEDIATE = "1.3.6.1.5.5.8.2.2";
Win32.szOID_PKINIT_KP_KDC = "1.3.6.1.5.2.3.5";
Win32.szOID_KP_CTL_USAGE_SIGNING = "1.3.6.1.4.1.311.10.3.1";
Win32.szOID_KP_TIME_STAMP_SIGNING = "1.3.6.1.4.1.311.10.3.2";
Win32.szOID_SERVER_GATED_CRYPTO = "1.3.6.1.4.1.311.10.3.3";
Win32.szOID_SGC_NETSCAPE = "2.16.840.1.113730.4.1";
Win32.szOID_KP_EFS = "1.3.6.1.4.1.311.10.3.4";
Win32.szOID_EFS_RECOVERY = "1.3.6.1.4.1.311.10.3.4.1";
Win32.szOID_WHQL_CRYPTO = "1.3.6.1.4.1.311.10.3.5";
Win32.szOID_ATTEST_WHQL_CRYPTO = "1.3.6.1.4.1.311.10.3.5.1";
Win32.szOID_NT5_CRYPTO = "1.3.6.1.4.1.311.10.3.6";
Win32.szOID_OEM_WHQL_CRYPTO = "1.3.6.1.4.1.311.10.3.7";
Win32.szOID_EMBEDDED_NT_CRYPTO = "1.3.6.1.4.1.311.10.3.8";
Win32.szOID_ROOT_LIST_SIGNER = "1.3.6.1.4.1.311.10.3.9";
Win32.szOID_KP_QUALIFIED_SUBORDINATION = "1.3.6.1.4.1.311.10.3.10";
Win32.szOID_KP_KEY_RECOVERY = "1.3.6.1.4.1.311.10.3.11";
Win32.szOID_KP_DOCUMENT_SIGNING = "1.3.6.1.4.1.311.10.3.12";
Win32.szOID_KP_LIFETIME_SIGNING = "1.3.6.1.4.1.311.10.3.13";
Win32.szOID_KP_MOBILE_DEVICE_SOFTWARE = "1.3.6.1.4.1.311.10.3.14";
Win32.szOID_KP_SMART_DISPLAY = "1.3.6.1.4.1.311.10.3.15";
Win32.szOID_KP_CSP_SIGNATURE = "1.3.6.1.4.1.311.10.3.16";
Win32.szOID_KP_FLIGHT_SIGNING = "1.3.6.1.4.1.311.10.3.27";
Win32.szOID_PLATFORM_MANIFEST_BINARY_ID = "1.3.6.1.4.1.311.10.3.28";
Win32.szOID_DRM = "1.3.6.1.4.1.311.10.5.1";
Win32.szOID_DRM_INDIVIDUALIZATION = "1.3.6.1.4.1.311.10.5.2";
Win32.szOID_LICENSES = "1.3.6.1.4.1.311.10.6.1";
Win32.szOID_LICENSE_SERVER = "1.3.6.1.4.1.311.10.6.2";
Win32.szOID_KP_SMARTCARD_LOGON = "1.3.6.1.4.1.311.20.2.2";
Win32.szOID_KP_KERNEL_MODE_CODE_SIGNING = "1.3.6.1.4.1.311.61.1.1";
Win32.szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING = "1.3.6.1.4.1.311.61.4.1";
Win32.szOID_REVOKED_LIST_SIGNER = "1.3.6.1.4.1.311.10.3.19";
Win32.szOID_WINDOWS_KITS_SIGNER = "1.3.6.1.4.1.311.10.3.20";
Win32.szOID_WINDOWS_RT_SIGNER = "1.3.6.1.4.1.311.10.3.21";
Win32.szOID_PROTECTED_PROCESS_LIGHT_SIGNER = "1.3.6.1.4.1.311.10.3.22";
Win32.szOID_WINDOWS_TCB_SIGNER = "1.3.6.1.4.1.311.10.3.23";
Win32.szOID_PROTECTED_PROCESS_SIGNER = "1.3.6.1.4.1.311.10.3.24";
Win32.szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER = "1.3.6.1.4.1.311.10.3.25";
Win32.szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER = "1.3.6.1.4.1.311.10.3.26";
Win32.szOID_DISALLOWED_LIST = "1.3.6.1.4.1.311.10.3.30";
Win32.szOID_PIN_RULES_SIGNER = "1.3.6.1.4.1.311.10.3.31";
Win32.szOID_PIN_RULES_CTL = "1.3.6.1.4.1.311.10.3.32";
Win32.szOID_PIN_RULES_EXT = "1.3.6.1.4.1.311.10.3.33";
Win32.szOID_PIN_RULES_DOMAIN_NAME = "1.3.6.1.4.1.311.10.3.34";
Win32.szOID_PIN_RULES_LOG_END_DATE_EXT = "1.3.6.1.4.1.311.10.3.35";
Win32.szOID_IUM_SIGNING = "1.3.6.1.4.1.311.10.3.37";
Win32.szOID_EV_WHQL_CRYPTO = "1.3.6.1.4.1.311.10.3.39";
Win32.szOID_BIOMETRIC_SIGNING = "1.3.6.1.4.1.311.10.3.41";
Win32.szOID_ENCLAVE_SIGNING = "1.3.6.1.4.1.311.10.3.42";
Win32.szOID_SYNC_ROOT_CTL_EXT = "1.3.6.1.4.1.311.10.3.50";
Win32.szOID_HPKP_DOMAIN_NAME_CTL = "1.3.6.1.4.1.311.10.3.60";
Win32.szOID_HPKP_HEADER_VALUE_CTL = "1.3.6.1.4.1.311.10.3.61";
Win32.szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING = "1.3.6.1.4.1.311.61.5.1";
Win32.szOID_WINDOWS_STORE_SIGNER = "1.3.6.1.4.1.311.76.3.1";
Win32.szOID_DYNAMIC_CODE_GEN_SIGNER = "1.3.6.1.4.1.311.76.5.1";
Win32.szOID_MICROSOFT_PUBLISHER_SIGNER = "1.3.6.1.4.1.311.76.8.1";
Win32.szOID_YESNO_TRUST_ATTR = "1.3.6.1.4.1.311.10.4.1";
Win32.szOID_SITE_PIN_RULES_INDEX_ATTR = "1.3.6.1.4.1.311.10.4.2";
Win32.szOID_SITE_PIN_RULES_FLAGS_ATTR = "1.3.6.1.4.1.311.10.4.3";
Win32.SITE_PIN_RULES_ALL_SUBDOMAINS_FLAG = 1;
Win32.szOID_PKIX_POLICY_QUALIFIER_CPS = "1.3.6.1.5.5.7.2.1";
Win32.szOID_PKIX_POLICY_QUALIFIER_USERNOTICE = "1.3.6.1.5.5.7.2.2";
Win32.szOID_ROOT_PROGRAM_FLAGS = "1.3.6.1.4.1.311.60.1.1";
Win32.CERT_ROOT_PROGRAM_FLAG_OU = 16;
Win32.CERT_ROOT_PROGRAM_FLAG_ADDRESS = 8;
Win32.szOID_CERT_POLICIES_95_QUALIFIER1 = "2.16.840.1.113733.1.7.1.1";
Win32.szOID_RDN_TPM_MANUFACTURER = "2.23.133.2.1";
Win32.szOID_RDN_TPM_MODEL = "2.23.133.2.2";
Win32.szOID_RDN_TPM_VERSION = "2.23.133.2.3";
Win32.szOID_RDN_TCG_PLATFORM_MANUFACTURER = "2.23.133.2.4";
Win32.szOID_RDN_TCG_PLATFORM_MODEL = "2.23.133.2.5";
Win32.szOID_RDN_TCG_PLATFORM_VERSION = "2.23.133.2.6";
Win32.szOID_CT_CERT_SCTLIST = "1.3.6.1.4.1.11129.2.4.2";
Win32.szOID_ENROLL_EK_INFO = "1.3.6.1.4.1.311.21.23";
Win32.szOID_ENROLL_AIK_INFO = "1.3.6.1.4.1.311.21.39";
Win32.szOID_ENROLL_ATTESTATION_STATEMENT = "1.3.6.1.4.1.311.21.24";
Win32.szOID_ENROLL_KSP_NAME = "1.3.6.1.4.1.311.21.25";
Win32.szOID_ENROLL_EKPUB_CHALLENGE = "1.3.6.1.4.1.311.21.26";
Win32.szOID_ENROLL_CAXCHGCERT_HASH = "1.3.6.1.4.1.311.21.27";
Win32.szOID_ENROLL_ATTESTATION_CHALLENGE = "1.3.6.1.4.1.311.21.28";
Win32.szOID_ENROLL_ENCRYPTION_ALGORITHM = "1.3.6.1.4.1.311.21.29";
Win32.szOID_KP_TPM_EK_CERTIFICATE = "2.23.133.8.1";
Win32.szOID_KP_TPM_PLATFORM_CERTIFICATE = "2.23.133.8.2";
Win32.szOID_KP_TPM_AIK_CERTIFICATE = "2.23.133.8.3";
Win32.szOID_ENROLL_EKVERIFYKEY = "1.3.6.1.4.1.311.21.30";
Win32.szOID_ENROLL_EKVERIFYCERT = "1.3.6.1.4.1.311.21.31";
Win32.szOID_ENROLL_EKVERIFYCREDS = "1.3.6.1.4.1.311.21.32";
Win32.szOID_ENROLL_SCEP_ERROR = "1.3.6.1.4.1.311.21.33";
Win32.szOID_ENROLL_SCEP_SERVER_STATE = "1.3.6.1.4.1.311.21.34";
Win32.szOID_ENROLL_SCEP_CHALLENGE_ANSWER = "1.3.6.1.4.1.311.21.35";
Win32.szOID_ENROLL_SCEP_CLIENT_REQUEST = "1.3.6.1.4.1.311.21.37";
Win32.szOID_ENROLL_SCEP_SERVER_MESSAGE = "1.3.6.1.4.1.311.21.38";
Win32.szOID_ENROLL_SCEP_SERVER_SECRET = "1.3.6.1.4.1.311.21.40";
Win32.szOID_ENROLL_KEY_AFFINITY = "1.3.6.1.4.1.311.21.41";
Win32.szOID_ENROLL_SCEP_SIGNER_HASH = "1.3.6.1.4.1.311.21.42";
Win32.szOID_ENROLL_EK_CA_KEYID = "1.3.6.1.4.1.311.21.43";
Win32.szOID_ATTR_SUPPORTED_ALGORITHMS = "2.5.4.52";
Win32.szOID_ATTR_TPM_SPECIFICATION = "2.23.133.2.16";
Win32.szOID_ATTR_PLATFORM_SPECIFICATION = "2.23.133.2.17";
Win32.szOID_ATTR_TPM_SECURITY_ASSERTIONS = "2.23.133.2.18";
Win32.CERT_UNICODE_RDN_ERR_INDEX_MASK = 1023;
Win32.CERT_UNICODE_RDN_ERR_INDEX_SHIFT = 22;
Win32.CERT_UNICODE_ATTR_ERR_INDEX_MASK = 63;
Win32.CERT_UNICODE_ATTR_ERR_INDEX_SHIFT = 16;
Win32.CERT_UNICODE_VALUE_ERR_INDEX_MASK = 65535;
Win32.CERT_UNICODE_VALUE_ERR_INDEX_SHIFT = 0;
Win32.CERT_DIGITAL_SIGNATURE_KEY_USAGE = 128;
Win32.CERT_NON_REPUDIATION_KEY_USAGE = 64;
Win32.CERT_KEY_ENCIPHERMENT_KEY_USAGE = 32;
Win32.CERT_DATA_ENCIPHERMENT_KEY_USAGE = 16;
Win32.CERT_KEY_AGREEMENT_KEY_USAGE = 8;
Win32.CERT_KEY_CERT_SIGN_KEY_USAGE = 4;
Win32.CERT_OFFLINE_CRL_SIGN_KEY_USAGE = 2;
Win32.CERT_CRL_SIGN_KEY_USAGE = 2;
Win32.CERT_ENCIPHER_ONLY_KEY_USAGE = 1;
Win32.CERT_DECIPHER_ONLY_KEY_USAGE = 128;
Win32.CERT_ALT_NAME_X400_ADDRESS = 4;
Win32.CERT_ALT_NAME_EDI_PARTY_NAME = 6;
Win32.CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK = 255;
Win32.CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT = 16;
Win32.CERT_ALT_NAME_VALUE_ERR_INDEX_MASK = 65535;
Win32.CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT = 0;
Win32.CERT_CA_SUBJECT_FLAG = 128;
Win32.CERT_END_ENTITY_SUBJECT_FLAG = 64;
Win32.szOID_PKIX_ACC_DESCR = "1.3.6.1.5.5.7.48";
Win32.szOID_PKIX_OCSP = "1.3.6.1.5.5.7.48.1";
Win32.szOID_PKIX_CA_ISSUERS = "1.3.6.1.5.5.7.48.2";
Win32.szOID_PKIX_TIME_STAMPING = "1.3.6.1.5.5.7.48.3";
Win32.szOID_PKIX_CA_REPOSITORY = "1.3.6.1.5.5.7.48.5";
Win32.CRL_REASON_PRIVILEGE_WITHDRAWN = 9;
Win32.CRL_REASON_AA_COMPROMISE = 10;
Win32.CRL_DIST_POINT_NO_NAME = 0;
Win32.CRL_DIST_POINT_FULL_NAME = 1;
Win32.CRL_DIST_POINT_ISSUER_RDN_NAME = 2;
Win32.CRL_REASON_UNUSED_FLAG = 128;
Win32.CRL_REASON_KEY_COMPROMISE_FLAG = 64;
Win32.CRL_REASON_CA_COMPROMISE_FLAG = 32;
Win32.CRL_REASON_AFFILIATION_CHANGED_FLAG = 16;
Win32.CRL_REASON_SUPERSEDED_FLAG = 8;
Win32.CRL_REASON_CESSATION_OF_OPERATION_FLAG = 4;
Win32.CRL_REASON_CERTIFICATE_HOLD_FLAG = 2;
Win32.CRL_REASON_PRIVILEGE_WITHDRAWN_FLAG = 1;
Win32.CRL_REASON_AA_COMPROMISE_FLAG = 128;
Win32.CRL_DIST_POINT_ERR_INDEX_MASK = 127;
Win32.CRL_DIST_POINT_ERR_INDEX_SHIFT = 24;
Win32.CRL_DIST_POINT_ERR_CRL_ISSUER_BIT = -2147483648;
Win32.CROSS_CERT_DIST_POINT_ERR_INDEX_MASK = 255;
Win32.CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT = 24;
Win32.CERT_EXCLUDED_SUBTREE_BIT = -2147483648;
Win32.SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG = 1;
Win32.CERT_DSS_R_LEN = 20;
Win32.CERT_DSS_S_LEN = 20;
Win32.CRYPT_X942_COUNTER_BYTE_LENGTH = 4;
Win32.CRYPT_X942_KEY_LENGTH_BYTE_LENGTH = 4;
Win32.CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH = 4;
Win32.CRYPT_RC2_40BIT_VERSION = 160;
Win32.CRYPT_RC2_56BIT_VERSION = 52;
Win32.CRYPT_RC2_64BIT_VERSION = 120;
Win32.CRYPT_RC2_128BIT_VERSION = 58;
Win32.szOID_QC_EU_COMPLIANCE = "0.4.0.1862.1.1";
Win32.szOID_QC_SSCD = "0.4.0.1862.1.4";
Win32.PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC = 1;
Win32.szOID_VERISIGN_PRIVATE_6_9 = "2.16.840.1.113733.1.6.9";
Win32.szOID_VERISIGN_ONSITE_JURISDICTION_HASH = "2.16.840.1.113733.1.6.11";
Win32.szOID_VERISIGN_BITSTRING_6_13 = "2.16.840.1.113733.1.6.13";
Win32.szOID_VERISIGN_ISS_STRONG_CRYPTO = "2.16.840.1.113733.1.8.1";
Win32.szOIDVerisign_MessageType = "2.16.840.1.113733.1.9.2";
Win32.szOIDVerisign_PkiStatus = "2.16.840.1.113733.1.9.3";
Win32.szOIDVerisign_FailInfo = "2.16.840.1.113733.1.9.4";
Win32.szOIDVerisign_SenderNonce = "2.16.840.1.113733.1.9.5";
Win32.szOIDVerisign_RecipientNonce = "2.16.840.1.113733.1.9.6";
Win32.szOIDVerisign_TransactionID = "2.16.840.1.113733.1.9.7";
Win32.szOID_NETSCAPE = "2.16.840.1.113730";
Win32.szOID_NETSCAPE_CERT_EXTENSION = "2.16.840.1.113730.1";
Win32.szOID_NETSCAPE_CERT_TYPE = "2.16.840.1.113730.1.1";
Win32.szOID_NETSCAPE_BASE_URL = "2.16.840.1.113730.1.2";
Win32.szOID_NETSCAPE_REVOCATION_URL = "2.16.840.1.113730.1.3";
Win32.szOID_NETSCAPE_CA_REVOCATION_URL = "2.16.840.1.113730.1.4";
Win32.szOID_NETSCAPE_CERT_RENEWAL_URL = "2.16.840.1.113730.1.7";
Win32.szOID_NETSCAPE_CA_POLICY_URL = "2.16.840.1.113730.1.8";
Win32.szOID_NETSCAPE_SSL_SERVER_NAME = "2.16.840.1.113730.1.12";
Win32.szOID_NETSCAPE_COMMENT = "2.16.840.1.113730.1.13";
Win32.szOID_NETSCAPE_DATA_TYPE = "2.16.840.1.113730.2";
Win32.szOID_NETSCAPE_CERT_SEQUENCE = "2.16.840.1.113730.2.5";
Win32.NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE = 128;
Win32.NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE = 64;
Win32.NETSCAPE_SMIME_CERT_TYPE = 32;
Win32.NETSCAPE_SIGN_CERT_TYPE = 16;
Win32.NETSCAPE_SSL_CA_CERT_TYPE = 4;
Win32.NETSCAPE_SMIME_CA_CERT_TYPE = 2;
Win32.NETSCAPE_SIGN_CA_CERT_TYPE = 1;
Win32.szOID_CT_PKI_DATA = "1.3.6.1.5.5.7.12.2";
Win32.szOID_CT_PKI_RESPONSE = "1.3.6.1.5.5.7.12.3";
Win32.szOID_PKIX_NO_SIGNATURE = "1.3.6.1.5.5.7.6.2";
Win32.szOID_CMC = "1.3.6.1.5.5.7.7";
Win32.szOID_CMC_STATUS_INFO = "1.3.6.1.5.5.7.7.1";
Win32.szOID_CMC_IDENTIFICATION = "1.3.6.1.5.5.7.7.2";
Win32.szOID_CMC_IDENTITY_PROOF = "1.3.6.1.5.5.7.7.3";
Win32.szOID_CMC_DATA_RETURN = "1.3.6.1.5.5.7.7.4";
Win32.szOID_CMC_TRANSACTION_ID = "1.3.6.1.5.5.7.7.5";
Win32.szOID_CMC_SENDER_NONCE = "1.3.6.1.5.5.7.7.6";
Win32.szOID_CMC_RECIPIENT_NONCE = "1.3.6.1.5.5.7.7.7";
Win32.szOID_CMC_ADD_EXTENSIONS = "1.3.6.1.5.5.7.7.8";
Win32.szOID_CMC_ENCRYPTED_POP = "1.3.6.1.5.5.7.7.9";
Win32.szOID_CMC_DECRYPTED_POP = "1.3.6.1.5.5.7.7.10";
Win32.szOID_CMC_LRA_POP_WITNESS = "1.3.6.1.5.5.7.7.11";
Win32.szOID_CMC_GET_CERT = "1.3.6.1.5.5.7.7.15";
Win32.szOID_CMC_GET_CRL = "1.3.6.1.5.5.7.7.16";
Win32.szOID_CMC_REVOKE_REQUEST = "1.3.6.1.5.5.7.7.17";
Win32.szOID_CMC_REG_INFO = "1.3.6.1.5.5.7.7.18";
Win32.szOID_CMC_RESPONSE_INFO = "1.3.6.1.5.5.7.7.19";
Win32.szOID_CMC_QUERY_PENDING = "1.3.6.1.5.5.7.7.21";
Win32.szOID_CMC_ID_POP_LINK_RANDOM = "1.3.6.1.5.5.7.7.22";
Win32.szOID_CMC_ID_POP_LINK_WITNESS = "1.3.6.1.5.5.7.7.23";
Win32.szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE = "1.3.6.1.5.5.7.7.24";
Win32.szOID_CMC_ADD_ATTRIBUTES = "1.3.6.1.4.1.311.10.10.1";
Win32.CMC_TAGGED_CERT_REQUEST_CHOICE = 1;
Win32.CMC_OTHER_INFO_NO_CHOICE = 0;
Win32.CMC_OTHER_INFO_FAIL_CHOICE = 1;
Win32.CMC_OTHER_INFO_PEND_CHOICE = 2;
Win32.CMC_STATUS_SUCCESS = 0;
Win32.CMC_STATUS_FAILED = 2;
Win32.CMC_STATUS_PENDING = 3;
Win32.CMC_STATUS_NO_SUPPORT = 4;
Win32.CMC_STATUS_CONFIRM_REQUIRED = 5;
Win32.CMC_FAIL_BAD_ALG = 0;
Win32.CMC_FAIL_BAD_MESSAGE_CHECK = 1;
Win32.CMC_FAIL_BAD_REQUEST = 2;
Win32.CMC_FAIL_BAD_TIME = 3;
Win32.CMC_FAIL_BAD_CERT_ID = 4;
Win32.CMC_FAIL_UNSUPORTED_EXT = 5;
Win32.CMC_FAIL_MUST_ARCHIVE_KEYS = 6;
Win32.CMC_FAIL_BAD_IDENTITY = 7;
Win32.CMC_FAIL_POP_REQUIRED = 8;
Win32.CMC_FAIL_POP_FAILED = 9;
Win32.CMC_FAIL_NO_KEY_REUSE = 10;
Win32.CMC_FAIL_INTERNAL_CA_ERROR = 11;
Win32.CMC_FAIL_TRY_LATER = 12;
Win32.szOID_LOYALTY_OTHER_LOGOTYPE = "1.3.6.1.5.5.7.20.1";
Win32.szOID_BACKGROUND_OTHER_LOGOTYPE = "1.3.6.1.5.5.7.20.2";
Win32.CERT_BIOMETRIC_PICTURE_TYPE = 0;
Win32.CERT_BIOMETRIC_SIGNATURE_TYPE = 1;
Win32.OCSP_REQUEST_V1 = 0;
Win32.OCSP_SUCCESSFUL_RESPONSE = 0;
Win32.OCSP_MALFORMED_REQUEST_RESPONSE = 1;
Win32.OCSP_INTERNAL_ERROR_RESPONSE = 2;
Win32.OCSP_TRY_LATER_RESPONSE = 3;
Win32.OCSP_SIG_REQUIRED_RESPONSE = 5;
Win32.OCSP_UNAUTHORIZED_RESPONSE = 6;
Win32.szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE = "1.3.6.1.5.5.7.48.1.1";
Win32.OCSP_BASIC_GOOD_CERT_STATUS = 0;
Win32.OCSP_BASIC_REVOKED_CERT_STATUS = 1;
Win32.OCSP_BASIC_UNKNOWN_CERT_STATUS = 2;
Win32.OCSP_BASIC_RESPONSE_V1 = 0;
Win32.OCSP_BASIC_BY_NAME_RESPONDER_ID = 1;
Win32.OCSP_BASIC_BY_KEY_RESPONDER_ID = 2;
Win32.CRYPT_OID_ENCODE_OBJECT_FUNC = "CryptDllEncodeObject";
Win32.CRYPT_OID_DECODE_OBJECT_FUNC = "CryptDllDecodeObject";
Win32.CRYPT_OID_ENCODE_OBJECT_EX_FUNC = "CryptDllEncodeObjectEx";
Win32.CRYPT_OID_DECODE_OBJECT_EX_FUNC = "CryptDllDecodeObjectEx";
Win32.CRYPT_OID_CREATE_COM_OBJECT_FUNC = "CryptDllCreateCOMObject";
Win32.CRYPT_OID_VERIFY_REVOCATION_FUNC = "CertDllVerifyRevocation";
Win32.CRYPT_OID_VERIFY_CTL_USAGE_FUNC = "CertDllVerifyCTLUsage";
Win32.CRYPT_OID_FORMAT_OBJECT_FUNC = "CryptDllFormatObject";
Win32.CRYPT_OID_FIND_OID_INFO_FUNC = "CryptDllFindOIDInfo";
Win32.CRYPT_OID_FIND_LOCALIZED_NAME_FUNC = "CryptDllFindLocalizedName";
Win32.CRYPT_OID_REGPATH = "Software\\Microsoft\\Cryptography\\OID";
Win32.CRYPT_OID_REG_ENCODING_TYPE_PREFIX = "EncodingType ";
Win32.CRYPT_OID_REG_DLL_VALUE_NAME = "Dll";
Win32.CRYPT_OID_REG_FUNC_NAME_VALUE_NAME = "FuncName";
Win32.CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A = "FuncName";
Win32.CRYPT_OID_REG_FLAGS_VALUE_NAME = "CryptFlags";
Win32.CRYPT_DEFAULT_OID = "DEFAULT";
Win32.CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG = 1;
Win32.CRYPT_GET_INSTALLED_OID_FUNC_FLAG = 1;
Win32.CRYPT_REGISTER_FIRST_INDEX = 0;
Win32.CRYPT_REGISTER_LAST_INDEX = 4294967295;
Win32.CRYPT_MATCH_ANY_ENCODING_TYPE = 4294967295;
Win32.CALG_OID_INFO_CNG_ONLY = 4294967295;
Win32.CALG_OID_INFO_PARAMETERS = 4294967294;
Win32.CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM = "CryptOIDInfoHashParameters";
Win32.CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM = "CryptOIDInfoECCParameters";
Win32.CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM = "CryptOIDInfoMgf1Parameters";
Win32.CRYPT_OID_INFO_NO_SIGN_ALGORITHM = "CryptOIDInfoNoSign";
Win32.CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM = "CryptOIDInfoOAEPParameters";
Win32.CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM = "CryptOIDInfoECCWrapParameters";
Win32.CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM = "CryptOIDInfoNoParameters";
Win32.CRYPT_HASH_ALG_OID_GROUP_ID = 1;
Win32.CRYPT_ENCRYPT_ALG_OID_GROUP_ID = 2;
Win32.CRYPT_PUBKEY_ALG_OID_GROUP_ID = 3;
Win32.CRYPT_SIGN_ALG_OID_GROUP_ID = 4;
Win32.CRYPT_RDN_ATTR_OID_GROUP_ID = 5;
Win32.CRYPT_EXT_OR_ATTR_OID_GROUP_ID = 6;
Win32.CRYPT_ENHKEY_USAGE_OID_GROUP_ID = 7;
Win32.CRYPT_POLICY_OID_GROUP_ID = 8;
Win32.CRYPT_TEMPLATE_OID_GROUP_ID = 9;
Win32.CRYPT_KDF_OID_GROUP_ID = 10;
Win32.CRYPT_LAST_OID_GROUP_ID = 10;
Win32.CRYPT_FIRST_ALG_OID_GROUP_ID = 1;
Win32.CRYPT_LAST_ALG_OID_GROUP_ID = 4;
Win32.CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG = 1;
Win32.CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG = 2;
Win32.CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG = 4;
Win32.CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG = 2147483648;
Win32.CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG = 1073741824;
Win32.CRYPT_OID_USE_CURVE_NAME_FOR_ENCODE_FLAG = 536870912;
Win32.CRYPT_OID_USE_CURVE_PARAMETERS_FOR_ENCODE_FLAG = 268435456;
Win32.CRYPT_OID_INFO_OID_KEY = 1;
Win32.CRYPT_OID_INFO_NAME_KEY = 2;
Win32.CRYPT_OID_INFO_ALGID_KEY = 3;
Win32.CRYPT_OID_INFO_SIGN_KEY = 4;
Win32.CRYPT_OID_INFO_CNG_ALGID_KEY = 5;
Win32.CRYPT_OID_INFO_CNG_SIGN_KEY = 6;
Win32.CRYPT_OID_INFO_OID_KEY_FLAGS_MASK = 4294901760;
Win32.CRYPT_OID_DISABLE_SEARCH_DS_FLAG = 2147483648;
Win32.CRYPT_OID_PREFER_CNG_ALGID_FLAG = 1073741824;
Win32.CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK = 268369920;
Win32.CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT = 16;
Win32.CRYPT_INSTALL_OID_INFO_BEFORE_FLAG = 1;
Win32.CRYPT_LOCALIZED_NAME_ENCODING_TYPE = 0;
Win32.CRYPT_LOCALIZED_NAME_OID = "LocalizedNames";
Win32.CERT_STRONG_SIGN_ECDSA_ALGORITHM = "ECDSA";
Win32.CERT_STRONG_SIGN_SERIALIZED_INFO_CHOICE = 1;
Win32.CERT_STRONG_SIGN_OID_INFO_CHOICE = 2;
Win32.szOID_CERT_STRONG_SIGN_OS_PREFIX = "1.3.6.1.4.1.311.72.1.";
Win32.szOID_CERT_STRONG_SIGN_OS_1 = "1.3.6.1.4.1.311.72.1.1";
Win32.szOID_CERT_STRONG_SIGN_OS_CURRENT = "1.3.6.1.4.1.311.72.1.1";
Win32.szOID_CERT_STRONG_KEY_OS_PREFIX = "1.3.6.1.4.1.311.72.2.";
Win32.szOID_CERT_STRONG_KEY_OS_1 = "1.3.6.1.4.1.311.72.2.1";
Win32.szOID_CERT_STRONG_KEY_OS_CURRENT = "1.3.6.1.4.1.311.72.2.1";
Win32.szOID_PKCS_7_DATA = "1.2.840.113549.1.7.1";
Win32.szOID_PKCS_7_SIGNED = "1.2.840.113549.1.7.2";
Win32.szOID_PKCS_7_ENVELOPED = "1.2.840.113549.1.7.3";
Win32.szOID_PKCS_7_SIGNEDANDENVELOPED = "1.2.840.113549.1.7.4";
Win32.szOID_PKCS_7_DIGESTED = "1.2.840.113549.1.7.5";
Win32.szOID_PKCS_7_ENCRYPTED = "1.2.840.113549.1.7.6";
Win32.szOID_PKCS_9_CONTENT_TYPE = "1.2.840.113549.1.9.3";
Win32.szOID_PKCS_9_MESSAGE_DIGEST = "1.2.840.113549.1.9.4";
Win32.CMSG_ENCRYPTED = 6;
Win32.CMSG_MAIL_LIST_HANDLE_KEY_CHOICE = 1;
Win32.CMSG_KEY_TRANS_RECIPIENT = 1;
Win32.CMSG_KEY_AGREE_RECIPIENT = 2;
Win32.CMSG_MAIL_LIST_RECIPIENT = 3;
Win32.CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG = 2147483648;
Win32.CMSG_RC4_NO_SALT_FLAG = 1073741824;
Win32.CMSG_INDEFINITE_LENGTH = 4294967295;
Win32.CMSG_BARE_CONTENT_FLAG = 1;
Win32.CMSG_LENGTH_ONLY_FLAG = 2;
Win32.CMSG_DETACHED_FLAG = 4;
Win32.CMSG_AUTHENTICATED_ATTRIBUTES_FLAG = 8;
Win32.CMSG_CONTENTS_OCTETS_FLAG = 16;
Win32.CMSG_MAX_LENGTH_FLAG = 32;
Win32.CMSG_CMS_ENCAPSULATED_CONTENT_FLAG = 64;
Win32.CMSG_SIGNED_DATA_NO_SIGN_FLAG = 128;
Win32.CMSG_CRYPT_RELEASE_CONTEXT_FLAG = 32768;
Win32.CMSG_TYPE_PARAM = 1;
Win32.CMSG_CONTENT_PARAM = 2;
Win32.CMSG_BARE_CONTENT_PARAM = 3;
Win32.CMSG_INNER_CONTENT_TYPE_PARAM = 4;
Win32.CMSG_SIGNER_COUNT_PARAM = 5;
Win32.CMSG_SIGNER_INFO_PARAM = 6;
Win32.CMSG_SIGNER_CERT_INFO_PARAM = 7;
Win32.CMSG_SIGNER_HASH_ALGORITHM_PARAM = 8;
Win32.CMSG_SIGNER_AUTH_ATTR_PARAM = 9;
Win32.CMSG_SIGNER_UNAUTH_ATTR_PARAM = 10;
Win32.CMSG_CERT_COUNT_PARAM = 11;
Win32.CMSG_CERT_PARAM = 12;
Win32.CMSG_CRL_COUNT_PARAM = 13;
Win32.CMSG_CRL_PARAM = 14;
Win32.CMSG_ENVELOPE_ALGORITHM_PARAM = 15;
Win32.CMSG_RECIPIENT_COUNT_PARAM = 17;
Win32.CMSG_RECIPIENT_INDEX_PARAM = 18;
Win32.CMSG_RECIPIENT_INFO_PARAM = 19;
Win32.CMSG_HASH_ALGORITHM_PARAM = 20;
Win32.CMSG_HASH_DATA_PARAM = 21;
Win32.CMSG_COMPUTED_HASH_PARAM = 22;
Win32.CMSG_ENCRYPT_PARAM = 26;
Win32.CMSG_ENCRYPTED_DIGEST = 27;
Win32.CMSG_ENCODED_SIGNER = 28;
Win32.CMSG_ENCODED_MESSAGE = 29;
Win32.CMSG_VERSION_PARAM = 30;
Win32.CMSG_ATTR_CERT_COUNT_PARAM = 31;
Win32.CMSG_ATTR_CERT_PARAM = 32;
Win32.CMSG_CMS_RECIPIENT_COUNT_PARAM = 33;
Win32.CMSG_CMS_RECIPIENT_INDEX_PARAM = 34;
Win32.CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM = 35;
Win32.CMSG_CMS_RECIPIENT_INFO_PARAM = 36;
Win32.CMSG_UNPROTECTED_ATTR_PARAM = 37;
Win32.CMSG_SIGNER_CERT_ID_PARAM = 38;
Win32.CMSG_CMS_SIGNER_INFO_PARAM = 39;
Win32.CMSG_SIGNED_DATA_V1 = 1;
Win32.CMSG_SIGNED_DATA_V3 = 3;
Win32.CMSG_SIGNED_DATA_PKCS_1_5_VERSION = 1;
Win32.CMSG_SIGNED_DATA_CMS_VERSION = 3;
Win32.CMSG_SIGNER_INFO_V1 = 1;
Win32.CMSG_SIGNER_INFO_V3 = 3;
Win32.CMSG_SIGNER_INFO_PKCS_1_5_VERSION = 1;
Win32.CMSG_SIGNER_INFO_CMS_VERSION = 3;
Win32.CMSG_HASHED_DATA_V0 = 0;
Win32.CMSG_HASHED_DATA_V2 = 2;
Win32.CMSG_HASHED_DATA_PKCS_1_5_VERSION = 0;
Win32.CMSG_HASHED_DATA_CMS_VERSION = 2;
Win32.CMSG_ENVELOPED_DATA_V0 = 0;
Win32.CMSG_ENVELOPED_DATA_V2 = 2;
Win32.CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION = 0;
Win32.CMSG_ENVELOPED_DATA_CMS_VERSION = 2;
Win32.CMSG_ENVELOPED_RECIPIENT_V0 = 0;
Win32.CMSG_ENVELOPED_RECIPIENT_V2 = 2;
Win32.CMSG_ENVELOPED_RECIPIENT_V3 = 3;
Win32.CMSG_ENVELOPED_RECIPIENT_V4 = 4;
Win32.CMSG_KEY_TRANS_PKCS_1_5_VERSION = 0;
Win32.CMSG_KEY_TRANS_CMS_VERSION = 2;
Win32.CMSG_KEY_AGREE_VERSION = 3;
Win32.CMSG_MAIL_LIST_VERSION = 4;
Win32.CMSG_CTRL_VERIFY_SIGNATURE = 1;
Win32.CMSG_CTRL_DECRYPT = 2;
Win32.CMSG_CTRL_VERIFY_HASH = 5;
Win32.CMSG_CTRL_ADD_SIGNER = 6;
Win32.CMSG_CTRL_DEL_SIGNER = 7;
Win32.CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR = 8;
Win32.CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR = 9;
Win32.CMSG_CTRL_ADD_CERT = 10;
Win32.CMSG_CTRL_DEL_CERT = 11;
Win32.CMSG_CTRL_ADD_CRL = 12;
Win32.CMSG_CTRL_DEL_CRL = 13;
Win32.CMSG_CTRL_ADD_ATTR_CERT = 14;
Win32.CMSG_CTRL_DEL_ATTR_CERT = 15;
Win32.CMSG_CTRL_KEY_TRANS_DECRYPT = 16;
Win32.CMSG_CTRL_KEY_AGREE_DECRYPT = 17;
Win32.CMSG_CTRL_MAIL_LIST_DECRYPT = 18;
Win32.CMSG_CTRL_VERIFY_SIGNATURE_EX = 19;
Win32.CMSG_CTRL_ADD_CMS_SIGNER_INFO = 20;
Win32.CMSG_CTRL_ENABLE_STRONG_SIGNATURE = 21;
Win32.CMSG_VERIFY_SIGNER_PUBKEY = 1;
Win32.CMSG_VERIFY_SIGNER_CERT = 2;
Win32.CMSG_VERIFY_SIGNER_CHAIN = 3;
Win32.CMSG_VERIFY_SIGNER_NULL = 4;
Win32.CMSG_VERIFY_COUNTER_SIGN_ENABLE_STRONG_FLAG = 1;
Win32.CMSG_OID_GEN_ENCRYPT_KEY_FUNC = "CryptMsgDllGenEncryptKey";
Win32.CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC = "CryptMsgDllExportEncryptKey";
Win32.CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC = "CryptMsgDllImportEncryptKey";
Win32.CMSG_DEFAULT_INSTALLABLE_FUNC_OID = 1;
Win32.CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG = 1;
Win32.CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG = 1;
Win32.CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG = 2;
Win32.CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG = 32768;
Win32.CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC = "CryptMsgDllGenContentEncryptKey";
Win32.CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC = "CryptMsgDllGenContentEncryptKey";
Win32.CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC = "CryptMsgDllCNGGenContentEncryptKey";
Win32.CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG = 1;
Win32.CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG = 2;
Win32.CMSG_OID_EXPORT_KEY_TRANS_FUNC = "CryptMsgDllExportKeyTrans";
Win32.CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC = "CryptMsgDllExportKeyTrans";
Win32.CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC = "CryptMsgDllCNGExportKeyTrans";
Win32.CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG = 1;
Win32.CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG = 2;
Win32.CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG = 4;
Win32.CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG = 8;
Win32.CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG = 16;
Win32.CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG = 32;
Win32.CMSG_OID_EXPORT_KEY_AGREE_FUNC = "CryptMsgDllExportKeyAgree";
Win32.CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC = "CryptMsgDllExportKeyAgree";
Win32.CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC = "CryptMsgDllCNGExportKeyAgree";
Win32.CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG = 1;
Win32.CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG = 2;
Win32.CMSG_OID_EXPORT_MAIL_LIST_FUNC = "CryptMsgDllExportMailList";
Win32.CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC = "CryptMsgDllExportMailList";
Win32.CMSG_OID_IMPORT_KEY_TRANS_FUNC = "CryptMsgDllImportKeyTrans";
Win32.CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC = "CryptMsgDllImportKeyTrans";
Win32.CMSG_OID_IMPORT_KEY_AGREE_FUNC = "CryptMsgDllImportKeyAgree";
Win32.CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC = "CryptMsgDllImportKeyAgree";
Win32.CMSG_OID_IMPORT_MAIL_LIST_FUNC = "CryptMsgDllImportMailList";
Win32.CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC = "CryptMsgDllImportMailList";
Win32.CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC = "CryptMsgDllCNGImportKeyTrans";
Win32.CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC = "CryptMsgDllCNGImportKeyAgree";
Win32.CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC = "CryptMsgDllCNGImportContentEncryptKey";
Win32.CERT_KEY_PROV_HANDLE_PROP_ID = 1;
Win32.CERT_KEY_PROV_INFO_PROP_ID = 2;
Win32.CERT_SHA1_HASH_PROP_ID = 3;
Win32.CERT_MD5_HASH_PROP_ID = 4;
Win32.CERT_HASH_PROP_ID = 3;
Win32.CERT_KEY_CONTEXT_PROP_ID = 5;
Win32.CERT_KEY_SPEC_PROP_ID = 6;
Win32.CERT_IE30_RESERVED_PROP_ID = 7;
Win32.CERT_PUBKEY_HASH_RESERVED_PROP_ID = 8;
Win32.CERT_ENHKEY_USAGE_PROP_ID = 9;
Win32.CERT_CTL_USAGE_PROP_ID = 9;
Win32.CERT_NEXT_UPDATE_LOCATION_PROP_ID = 10;
Win32.CERT_FRIENDLY_NAME_PROP_ID = 11;
Win32.CERT_PVK_FILE_PROP_ID = 12;
Win32.CERT_DESCRIPTION_PROP_ID = 13;
Win32.CERT_ACCESS_STATE_PROP_ID = 14;
Win32.CERT_SIGNATURE_HASH_PROP_ID = 15;
Win32.CERT_SMART_CARD_DATA_PROP_ID = 16;
Win32.CERT_EFS_PROP_ID = 17;
Win32.CERT_FORTEZZA_DATA_PROP_ID = 18;
Win32.CERT_ARCHIVED_PROP_ID = 19;
Win32.CERT_KEY_IDENTIFIER_PROP_ID = 20;
Win32.CERT_AUTO_ENROLL_PROP_ID = 21;
Win32.CERT_PUBKEY_ALG_PARA_PROP_ID = 22;
Win32.CERT_CROSS_CERT_DIST_POINTS_PROP_ID = 23;
Win32.CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID = 24;
Win32.CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID = 25;
Win32.CERT_ENROLLMENT_PROP_ID = 26;
Win32.CERT_DATE_STAMP_PROP_ID = 27;
Win32.CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = 28;
Win32.CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = 29;
Win32.CERT_EXTENDED_ERROR_INFO_PROP_ID = 30;
Win32.CERT_RENEWAL_PROP_ID = 64;
Win32.CERT_ARCHIVED_KEY_HASH_PROP_ID = 65;
Win32.CERT_AUTO_ENROLL_RETRY_PROP_ID = 66;
Win32.CERT_AIA_URL_RETRIEVED_PROP_ID = 67;
Win32.CERT_AUTHORITY_INFO_ACCESS_PROP_ID = 68;
Win32.CERT_BACKED_UP_PROP_ID = 69;
Win32.CERT_OCSP_RESPONSE_PROP_ID = 70;
Win32.CERT_REQUEST_ORIGINATOR_PROP_ID = 71;
Win32.CERT_SOURCE_LOCATION_PROP_ID = 72;
Win32.CERT_SOURCE_URL_PROP_ID = 73;
Win32.CERT_NEW_KEY_PROP_ID = 74;
Win32.CERT_OCSP_CACHE_PREFIX_PROP_ID = 75;
Win32.CERT_SMART_CARD_ROOT_INFO_PROP_ID = 76;
Win32.CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID = 77;
Win32.CERT_NCRYPT_KEY_HANDLE_PROP_ID = 78;
Win32.CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID = 79;
Win32.CERT_SUBJECT_INFO_ACCESS_PROP_ID = 80;
Win32.CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 81;
Win32.CERT_CA_DISABLE_CRL_PROP_ID = 82;
Win32.CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID = 83;
Win32.CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID = 84;
Win32.CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID = 85;
Win32.CERT_SUBJECT_DISABLE_CRL_PROP_ID = 86;
Win32.CERT_CEP_PROP_ID = 87;
Win32.CERT_SIGN_HASH_CNG_ALG_PROP_ID = 89;
Win32.CERT_SCARD_PIN_ID_PROP_ID = 90;
Win32.CERT_SCARD_PIN_INFO_PROP_ID = 91;
Win32.CERT_SUBJECT_PUB_KEY_BIT_LENGTH_PROP_ID = 92;
Win32.CERT_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 93;
Win32.CERT_ISSUER_PUB_KEY_BIT_LENGTH_PROP_ID = 94;
Win32.CERT_ISSUER_CHAIN_SIGN_HASH_CNG_ALG_PROP_ID = 95;
Win32.CERT_ISSUER_CHAIN_PUB_KEY_CNG_ALG_BIT_LENGTH_PROP_ID = 96;
Win32.CERT_NO_EXPIRE_NOTIFICATION_PROP_ID = 97;
Win32.CERT_AUTH_ROOT_SHA256_HASH_PROP_ID = 98;
Win32.CERT_NCRYPT_KEY_HANDLE_TRANSFER_PROP_ID = 99;
Win32.CERT_HCRYPTPROV_TRANSFER_PROP_ID = 100;
Win32.CERT_SMART_CARD_READER_PROP_ID = 101;
Win32.CERT_SEND_AS_TRUSTED_ISSUER_PROP_ID = 102;
Win32.CERT_KEY_REPAIR_ATTEMPTED_PROP_ID = 103;
Win32.CERT_DISALLOWED_FILETIME_PROP_ID = 104;
Win32.CERT_ROOT_PROGRAM_CHAIN_POLICIES_PROP_ID = 105;
Win32.CERT_SMART_CARD_READER_NON_REMOVABLE_PROP_ID = 106;
Win32.CERT_SHA256_HASH_PROP_ID = 107;
Win32.CERT_SCEP_SERVER_CERTS_PROP_ID = 108;
Win32.CERT_SCEP_RA_SIGNATURE_CERT_PROP_ID = 109;
Win32.CERT_SCEP_RA_ENCRYPTION_CERT_PROP_ID = 110;
Win32.CERT_SCEP_CA_CERT_PROP_ID = 111;
Win32.CERT_SCEP_SIGNER_CERT_PROP_ID = 112;
Win32.CERT_SCEP_NONCE_PROP_ID = 113;
Win32.CERT_SCEP_ENCRYPT_HASH_CNG_ALG_PROP_ID = 114;
Win32.CERT_SCEP_FLAGS_PROP_ID = 115;
Win32.CERT_SCEP_GUID_PROP_ID = 116;
Win32.CERT_SERIALIZABLE_KEY_CONTEXT_PROP_ID = 117;
Win32.CERT_ISOLATED_KEY_PROP_ID = 118;
Win32.CERT_SERIAL_CHAIN_PROP_ID = 119;
Win32.CERT_KEY_CLASSIFICATION_PROP_ID = 120;
Win32.CERT_OCSP_MUST_STAPLE_PROP_ID = 121;
Win32.CERT_DISALLOWED_ENHKEY_USAGE_PROP_ID = 122;
Win32.CERT_NONCOMPLIANT_ROOT_URL_PROP_ID = 123;
Win32.CERT_PIN_SHA256_HASH_PROP_ID = 124;
Win32.CERT_CLR_DELETE_KEY_PROP_ID = 125;
Win32.CERT_NOT_BEFORE_FILETIME_PROP_ID = 126;
Win32.CERT_NOT_BEFORE_ENHKEY_USAGE_PROP_ID = 127;
Win32.CERT_FIRST_RESERVED_PROP_ID = 128;
Win32.CERT_LAST_RESERVED_PROP_ID = 32767;
Win32.CERT_FIRST_USER_PROP_ID = 32768;
Win32.CERT_LAST_USER_PROP_ID = 65535;
Win32.szOID_CERT_PROP_ID_PREFIX = "1.3.6.1.4.1.311.10.11.";
Win32.szOID_CERT_KEY_IDENTIFIER_PROP_ID = "1.3.6.1.4.1.311.10.11.20";
Win32.szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID = "1.3.6.1.4.1.311.10.11.28";
Win32.szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID = "1.3.6.1.4.1.311.10.11.29";
Win32.szOID_CERT_MD5_HASH_PROP_ID = "1.3.6.1.4.1.311.10.11.4";
Win32.szOID_CERT_SIGNATURE_HASH_PROP_ID = "1.3.6.1.4.1.311.10.11.15";
Win32.szOID_DISALLOWED_HASH = "1.3.6.1.4.1.311.10.11.15";
Win32.szOID_CERT_DISALLOWED_FILETIME_PROP_ID = "1.3.6.1.4.1.311.10.11.104";
Win32.CERT_ACCESS_STATE_WRITE_PERSIST_FLAG = 1;
Win32.CERT_ACCESS_STATE_SYSTEM_STORE_FLAG = 2;
Win32.CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG = 4;
Win32.CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG = 8;
Win32.CERT_ACCESS_STATE_SHARED_USER_FLAG = 16;
Win32.szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION = "1.3.6.1.4.1.311.60.3.1";
Win32.szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION = "1.3.6.1.4.1.311.60.3.2";
Win32.szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL = "1.3.6.1.4.1.311.60.3.3";
Win32.CERT_STORE_PROV_MSG = 1;
Win32.CERT_STORE_PROV_MEMORY = 2;
Win32.CERT_STORE_PROV_FILE = 3;
Win32.CERT_STORE_PROV_REG = 4;
Win32.CERT_STORE_PROV_PKCS7 = 5;
Win32.CERT_STORE_PROV_SERIALIZED = 6;
Win32.CERT_STORE_PROV_FILENAME_A = 7;
Win32.CERT_STORE_PROV_FILENAME_W = 8;
Win32.CERT_STORE_PROV_FILENAME = 8;
Win32.CERT_STORE_PROV_SYSTEM_A = 9;
Win32.CERT_STORE_PROV_SYSTEM_W = 10;
Win32.CERT_STORE_PROV_SYSTEM = 10;
Win32.CERT_STORE_PROV_COLLECTION = 11;
Win32.CERT_STORE_PROV_SYSTEM_REGISTRY_A = 12;
Win32.CERT_STORE_PROV_SYSTEM_REGISTRY_W = 13;
Win32.CERT_STORE_PROV_SYSTEM_REGISTRY = 13;
Win32.CERT_STORE_PROV_PHYSICAL_W = 14;
Win32.CERT_STORE_PROV_PHYSICAL = 14;
Win32.CERT_STORE_PROV_SMART_CARD_W = 15;
Win32.CERT_STORE_PROV_SMART_CARD = 15;
Win32.CERT_STORE_PROV_LDAP_W = 16;
Win32.CERT_STORE_PROV_LDAP = 16;
Win32.CERT_STORE_PROV_PKCS12 = 17;
Win32.sz_CERT_STORE_PROV_MEMORY = "Memory";
Win32.sz_CERT_STORE_PROV_FILENAME_W = "File";
Win32.sz_CERT_STORE_PROV_FILENAME = "File";
Win32.sz_CERT_STORE_PROV_SYSTEM_W = "System";
Win32.sz_CERT_STORE_PROV_SYSTEM = "System";
Win32.sz_CERT_STORE_PROV_PKCS7 = "PKCS7";
Win32.sz_CERT_STORE_PROV_PKCS12 = "PKCS12";
Win32.sz_CERT_STORE_PROV_SERIALIZED = "Serialized";
Win32.sz_CERT_STORE_PROV_COLLECTION = "Collection";
Win32.sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W = "SystemRegistry";
Win32.sz_CERT_STORE_PROV_SYSTEM_REGISTRY = "SystemRegistry";
Win32.sz_CERT_STORE_PROV_PHYSICAL_W = "Physical";
Win32.sz_CERT_STORE_PROV_PHYSICAL = "Physical";
Win32.sz_CERT_STORE_PROV_SMART_CARD_W = "SmartCard";
Win32.sz_CERT_STORE_PROV_SMART_CARD = "SmartCard";
Win32.sz_CERT_STORE_PROV_LDAP_W = "Ldap";
Win32.sz_CERT_STORE_PROV_LDAP = "Ldap";
Win32.CERT_STORE_SIGNATURE_FLAG = 1;
Win32.CERT_STORE_TIME_VALIDITY_FLAG = 2;
Win32.CERT_STORE_REVOCATION_FLAG = 4;
Win32.CERT_STORE_NO_CRL_FLAG = 65536;
Win32.CERT_STORE_NO_ISSUER_FLAG = 131072;
Win32.CERT_STORE_BASE_CRL_FLAG = 256;
Win32.CERT_STORE_DELTA_CRL_FLAG = 512;
Win32.CERT_STORE_UNSAFE_PHYSICAL_FLAG = 32;
Win32.CERT_STORE_SHARE_STORE_FLAG = 64;
Win32.CERT_STORE_MANIFOLD_FLAG = 256;
Win32.CERT_SYSTEM_STORE_MASK = 4294901760;
Win32.CERT_SYSTEM_STORE_UNPROTECTED_FLAG = 1073741824;
Win32.CERT_SYSTEM_STORE_DEFER_READ_FLAG = 536870912;
Win32.CERT_SYSTEM_STORE_LOCATION_SHIFT = 16;
Win32.CERT_SYSTEM_STORE_CURRENT_USER_ID = 1;
Win32.CERT_SYSTEM_STORE_LOCAL_MACHINE_ID = 2;
Win32.CERT_SYSTEM_STORE_CURRENT_SERVICE_ID = 4;
Win32.CERT_SYSTEM_STORE_SERVICES_ID = 5;
Win32.CERT_SYSTEM_STORE_USERS_ID = 6;
Win32.CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID = 7;
Win32.CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID = 8;
Win32.CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID = 9;
Win32.CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS_ID = 10;
Win32.CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH = "Software\\Policies\\Microsoft\\SystemCertificates";
Win32.CERT_EFSBLOB_VALUE_NAME = "EFSBlob";
Win32.CERT_PROT_ROOT_FLAGS_VALUE_NAME = "Flags";
Win32.CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG = 1;
Win32.CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG = 2;
Win32.CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG = 4;
Win32.CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG = 8;
Win32.CERT_PROT_ROOT_ONLY_LM_GPT_FLAG = 8;
Win32.CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG = 16;
Win32.CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG = 32;
Win32.CERT_PROT_ROOT_DISABLE_PEER_TRUST = 65536;
Win32.CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME = "PeerUsages";
Win32.CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A = "PeerUsages";
Win32.CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH = "Software\\Microsoft\\SystemCertificates";
Win32.CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME = "AuthenticodeFlags";
Win32.CERT_TRUST_PUB_ALLOW_TRUST_MASK = 3;
Win32.CERT_TRUST_PUB_ALLOW_END_USER_TRUST = 0;
Win32.CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST = 1;
Win32.CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST = 2;
Win32.CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG = 256;
Win32.CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG = 512;
Win32.CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\OC Manager\\Subcomponents";
Win32.CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME = "RootAutoUpdate";
Win32.CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME = "DisableRootAutoUpdate";
Win32.CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME = "EnableDisallowedCertAutoUpdate";
Win32.CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME = "DisablePinRulesAutoUpdate";
Win32.CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME = "RootDirUrl";
Win32.CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME = "SyncFromDirUrl";
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME = "RootDirUrl";
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME = "SyncDeltaTime";
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME = "Flags";
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG = 1;
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG = 2;
Win32.CERT_AUTO_UPDATE_DISABLE_RANDOM_QUERY_STRING_FLAG = 4;
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME = "LastSyncTime";
Win32.CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME = "EncodedCtl";
Win32.CERT_AUTH_ROOT_CTL_FILENAME = "authroot.stl";
Win32.CERT_AUTH_ROOT_CTL_FILENAME_A = "authroot.stl";
Win32.CERT_AUTH_ROOT_CAB_FILENAME = "authrootstl.cab";
Win32.CERT_AUTH_ROOT_SEQ_FILENAME = "authrootseq.txt";
Win32.CERT_AUTH_ROOT_CERT_EXT = ".crt";
Win32.CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME = "DisallowedCertSyncDeltaTime";
Win32.CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME = "DisallowedCertLastSyncTime";
Win32.CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME = "DisallowedCertEncodedCtl";
Win32.CERT_DISALLOWED_CERT_CTL_FILENAME = "disallowedcert.stl";
Win32.CERT_DISALLOWED_CERT_CTL_FILENAME_A = "disallowedcert.stl";
Win32.CERT_DISALLOWED_CERT_CAB_FILENAME = "disallowedcertstl.cab";
Win32.CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER = "DisallowedCert_AutoUpdate_1";
Win32.CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME = "PinRulesSyncDeltaTime";
Win32.CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME = "PinRulesLastSyncTime";
Win32.CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME = "PinRulesEncodedCtl";
Win32.CERT_PIN_RULES_CTL_FILENAME = "pinrules.stl";
Win32.CERT_PIN_RULES_CTL_FILENAME_A = "pinrules.stl";
Win32.CERT_PIN_RULES_CAB_FILENAME = "pinrulesstl.cab";
Win32.CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER = "PinRules_AutoUpdate_1";
Win32.CERT_REGISTRY_STORE_REMOTE_FLAG = 65536;
Win32.CERT_REGISTRY_STORE_SERIALIZED_FLAG = 131072;
Win32.CERT_REGISTRY_STORE_CLIENT_GPT_FLAG = 2147483648;
Win32.CERT_REGISTRY_STORE_LM_GPT_FLAG = 16777216;
Win32.CERT_REGISTRY_STORE_ROAMING_FLAG = 262144;
Win32.CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG = 524288;
Win32.CERT_REGISTRY_STORE_EXTERNAL_FLAG = 1048576;
Win32.CERT_IE_DIRTY_FLAGS_REGPATH = "Software\\Microsoft\\Cryptography\\IEDirtyFlags";
Win32.CERT_FILE_STORE_COMMIT_ENABLE_FLAG = 65536;
Win32.CERT_LDAP_STORE_SIGN_FLAG = 65536;
Win32.CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG = 131072;
Win32.CERT_LDAP_STORE_OPENED_FLAG = 262144;
Win32.CERT_LDAP_STORE_UNBIND_FLAG = 524288;
Win32.CRYPT_OID_OPEN_STORE_PROV_FUNC = "CertDllOpenStoreProv";
Win32.CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG = 32;
Win32.CERT_STORE_PROV_SHARED_USER_FLAG = 64;
Win32.CERT_STORE_PROV_CLOSE_FUNC = 0;
Win32.CERT_STORE_PROV_READ_CERT_FUNC = 1;
Win32.CERT_STORE_PROV_WRITE_CERT_FUNC = 2;
Win32.CERT_STORE_PROV_DELETE_CERT_FUNC = 3;
Win32.CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC = 4;
Win32.CERT_STORE_PROV_READ_CRL_FUNC = 5;
Win32.CERT_STORE_PROV_WRITE_CRL_FUNC = 6;
Win32.CERT_STORE_PROV_DELETE_CRL_FUNC = 7;
Win32.CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC = 8;
Win32.CERT_STORE_PROV_READ_CTL_FUNC = 9;
Win32.CERT_STORE_PROV_WRITE_CTL_FUNC = 10;
Win32.CERT_STORE_PROV_DELETE_CTL_FUNC = 11;
Win32.CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC = 12;
Win32.CERT_STORE_PROV_CONTROL_FUNC = 13;
Win32.CERT_STORE_PROV_FIND_CERT_FUNC = 14;
Win32.CERT_STORE_PROV_FREE_FIND_CERT_FUNC = 15;
Win32.CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC = 16;
Win32.CERT_STORE_PROV_FIND_CRL_FUNC = 17;
Win32.CERT_STORE_PROV_FREE_FIND_CRL_FUNC = 18;
Win32.CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC = 19;
Win32.CERT_STORE_PROV_FIND_CTL_FUNC = 20;
Win32.CERT_STORE_PROV_FREE_FIND_CTL_FUNC = 21;
Win32.CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC = 22;
Win32.CERT_STORE_PROV_WRITE_ADD_FLAG = 1;
Win32.CERT_STORE_SAVE_AS_PKCS12 = 3;
Win32.CERT_CLOSE_STORE_FORCE_FLAG = 1;
Win32.CERT_CLOSE_STORE_CHECK_FLAG = 2;
Win32.CERT_COMPARE_MASK = 65535;
Win32.CERT_COMPARE_ANY = 0;
Win32.CERT_COMPARE_SHA1_HASH = 1;
Win32.CERT_COMPARE_NAME = 2;
Win32.CERT_COMPARE_ATTR = 3;
Win32.CERT_COMPARE_MD5_HASH = 4;
Win32.CERT_COMPARE_PROPERTY = 5;
Win32.CERT_COMPARE_PUBLIC_KEY = 6;
Win32.CERT_COMPARE_HASH = 1;
Win32.CERT_COMPARE_NAME_STR_A = 7;
Win32.CERT_COMPARE_NAME_STR_W = 8;
Win32.CERT_COMPARE_KEY_SPEC = 9;
Win32.CERT_COMPARE_ENHKEY_USAGE = 10;
Win32.CERT_COMPARE_CTL_USAGE = 10;
Win32.CERT_COMPARE_SUBJECT_CERT = 11;
Win32.CERT_COMPARE_ISSUER_OF = 12;
Win32.CERT_COMPARE_EXISTING = 13;
Win32.CERT_COMPARE_SIGNATURE_HASH = 14;
Win32.CERT_COMPARE_KEY_IDENTIFIER = 15;
Win32.CERT_COMPARE_CERT_ID = 16;
Win32.CERT_COMPARE_CROSS_CERT_DIST_POINTS = 17;
Win32.CERT_COMPARE_PUBKEY_MD5_HASH = 18;
Win32.CERT_COMPARE_SUBJECT_INFO_ACCESS = 19;
Win32.CERT_COMPARE_HASH_STR = 20;
Win32.CERT_COMPARE_HAS_PRIVATE_KEY = 21;
Win32.CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG = 2147483648;
Win32.CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG = 1073741824;
Win32.CTL_ENTRY_FROM_PROP_CHAIN_FLAG = 1;
Win32.CRL_FIND_ANY = 0;
Win32.CRL_FIND_ISSUED_BY = 1;
Win32.CRL_FIND_EXISTING = 2;
Win32.CRL_FIND_ISSUED_FOR = 3;
Win32.CRL_FIND_ISSUED_BY_AKI_FLAG = 1;
Win32.CRL_FIND_ISSUED_BY_SIGNATURE_FLAG = 2;
Win32.CRL_FIND_ISSUED_BY_DELTA_FLAG = 4;
Win32.CRL_FIND_ISSUED_BY_BASE_FLAG = 8;
Win32.CRL_FIND_ISSUED_FOR_SET_STRONG_PROPERTIES_FLAG = 16;
Win32.CERT_STORE_ADD_NEW = 1;
Win32.CERT_STORE_ADD_USE_EXISTING = 2;
Win32.CERT_STORE_ADD_REPLACE_EXISTING = 3;
Win32.CERT_STORE_ADD_ALWAYS = 4;
Win32.CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES = 5;
Win32.CERT_STORE_ADD_NEWER = 6;
Win32.CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES = 7;
Win32.CERT_STORE_CERTIFICATE_CONTEXT = 1;
Win32.CERT_STORE_CRL_CONTEXT = 2;
Win32.CERT_STORE_CTL_CONTEXT = 3;
Win32.CTL_ANY_SUBJECT_TYPE = 1;
Win32.CTL_CERT_SUBJECT_TYPE = 2;
Win32.CTL_FIND_NO_LIST_ID_CBDATA = 4294967295;
Win32.CERT_STORE_CTRL_RESYNC = 1;
Win32.CERT_STORE_CTRL_NOTIFY_CHANGE = 2;
Win32.CERT_STORE_CTRL_COMMIT = 3;
Win32.CERT_STORE_CTRL_AUTO_RESYNC = 4;
Win32.CERT_STORE_CTRL_CANCEL_NOTIFY = 5;
Win32.CERT_STORE_LOCALIZED_NAME_PROP_ID = 4096;
Win32.CERT_CREATE_CONTEXT_NOCOPY_FLAG = 1;
Win32.CERT_CREATE_CONTEXT_SORTED_FLAG = 2;
Win32.CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG = 4;
Win32.CERT_CREATE_CONTEXT_NO_ENTRY_FLAG = 8;
Win32.CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG = 1;
Win32.CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG = 2;
Win32.CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG = 4;
Win32.CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG = 8;
Win32.CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG = 1;
Win32.CERT_PHYSICAL_STORE_DEFAULT_NAME = ".Default";
Win32.CERT_PHYSICAL_STORE_GROUP_POLICY_NAME = ".GroupPolicy";
Win32.CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME = ".LocalMachine";
Win32.CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME = ".UserCertificate";
Win32.CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME = ".LocalMachineGroupPolicy";
Win32.CERT_PHYSICAL_STORE_ENTERPRISE_NAME = ".Enterprise";
Win32.CERT_PHYSICAL_STORE_AUTH_ROOT_NAME = ".AuthRoot";
Win32.CERT_PHYSICAL_STORE_SMART_CARD_NAME = ".SmartCard";
Win32.CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC = "CertDllOpenSystemStoreProv";
Win32.CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC = "CertDllRegisterSystemStore";
Win32.CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC = "CertDllUnregisterSystemStore";
Win32.CRYPT_OID_ENUM_SYSTEM_STORE_FUNC = "CertDllEnumSystemStore";
Win32.CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC = "CertDllRegisterPhysicalStore";
Win32.CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC = "CertDllUnregisterPhysicalStore";
Win32.CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC = "CertDllEnumPhysicalStore";
Win32.CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME = "SystemStoreLocation";
Win32.CMSG_TRUSTED_SIGNER_FLAG = 1;
Win32.CMSG_SIGNER_ONLY_FLAG = 2;
Win32.CMSG_USE_SIGNER_INDEX_FLAG = 4;
Win32.CMSG_CMS_ENCAPSULATED_CTL_FLAG = 32768;
Win32.CMSG_ENCODE_SORTED_CTL_FLAG = 1;
Win32.CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG = 2;
Win32.CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG = 1;
Win32.CERT_VERIFY_TRUSTED_SIGNERS_FLAG = 2;
Win32.CERT_VERIFY_NO_TIME_CHECK_FLAG = 4;
Win32.CERT_VERIFY_ALLOW_MORE_USAGE_FLAG = 8;
Win32.CERT_VERIFY_UPDATED_CTL_FLAG = 1;
Win32.CERT_CONTEXT_REVOCATION_TYPE = 1;
Win32.CERT_VERIFY_REV_CHAIN_FLAG = 1;
Win32.CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION = 2;
Win32.CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG = 4;
Win32.CERT_VERIFY_REV_SERVER_OCSP_FLAG = 8;
Win32.CERT_VERIFY_REV_NO_OCSP_FAILOVER_TO_CRL_FLAG = 16;
Win32.CERT_VERIFY_REV_SERVER_OCSP_WIRE_ONLY_FLAG = 32;
Win32.CERT_UNICODE_IS_RDN_ATTRS_FLAG = 1;
Win32.CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG = 2;
Win32.CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB = 1;
Win32.CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT = 2;
Win32.CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL = 3;
Win32.CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE = 4;
Win32.CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY = 1;
Win32.CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT = 2;
Win32.CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN = 3;
Win32.CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL = 4;
Win32.CRYPT_VERIFY_CERT_SIGN_CHECK_WEAK_HASH_FLAG = 8;
Win32.CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC = "CryptDllExtractEncodedSignatureParameters";
Win32.CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC = "CryptDllSignAndEncodeHash";
Win32.CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC = "CryptDllVerifyEncodedSignature";
Win32.CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC = "CryptDllExportPublicKeyInfoEx";
Win32.CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC = "CryptDllExportPublicKeyInfoEx2";
Win32.CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC = "CryptDllExportPublicKeyInfoFromBCryptKeyHandle";
Win32.CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC = "CryptDllImportPublicKeyInfoEx";
Win32.CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC = "CryptDllImportPublicKeyInfoEx2";
Win32.CRYPT_ACQUIRE_WINDOW_HANDLE_FLAG = 128;
Win32.CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK = 458752;
Win32.CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG = 65536;
Win32.CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG = 131072;
Win32.CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG = 262144;
Win32.CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC = "CryptDllImportPrivateKeyInfoEx";
Win32.CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC = "CryptDllExportPrivateKeyInfoEx";
Win32.CRYPT_DELETE_KEYSET = 16;
Win32.CERT_XML_NAME_STR = 4;
Win32.CERT_NAME_STR_SEMICOLON_FLAG = 1073741824;
Win32.CERT_NAME_STR_NO_PLUS_FLAG = 536870912;
Win32.CERT_NAME_STR_NO_QUOTING_FLAG = 268435456;
Win32.CERT_NAME_STR_CRLF_FLAG = 134217728;
Win32.CERT_NAME_STR_COMMA_FLAG = 67108864;
Win32.CERT_NAME_STR_REVERSE_FLAG = 33554432;
Win32.CERT_NAME_STR_FORWARD_FLAG = 16777216;
Win32.CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG = 65536;
Win32.CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG = 131072;
Win32.CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG = 262144;
Win32.CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG = 524288;
Win32.CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG = 1048576;
Win32.CERT_NAME_STR_ENABLE_PUNYCODE_FLAG = 2097152;
Win32.CERT_NAME_EMAIL_TYPE = 1;
Win32.CERT_NAME_RDN_TYPE = 2;
Win32.CERT_NAME_ATTR_TYPE = 3;
Win32.CERT_NAME_SIMPLE_DISPLAY_TYPE = 4;
Win32.CERT_NAME_FRIENDLY_DISPLAY_TYPE = 5;
Win32.CERT_NAME_DNS_TYPE = 6;
Win32.CERT_NAME_URL_TYPE = 7;
Win32.CERT_NAME_UPN_TYPE = 8;
Win32.CERT_NAME_ISSUER_FLAG = 1;
Win32.CERT_NAME_DISABLE_IE4_UTF8_FLAG = 65536;
Win32.CERT_NAME_SEARCH_ALL_NAMES_FLAG = 2;
Win32.CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG = 1;
Win32.CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG = 2;
Win32.CRYPT_MESSAGE_KEYID_SIGNER_FLAG = 4;
Win32.CRYPT_MESSAGE_SILENT_KEYSET_FLAG = 64;
Win32.CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG = 4;
Win32.CREDENTIAL_OID_PASSWORD_CREDENTIALS_A = 1;
Win32.CREDENTIAL_OID_PASSWORD_CREDENTIALS_W = 2;
Win32.CREDENTIAL_OID_PASSWORD_CREDENTIALS = 2;
Win32.SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC = "SchemeDllRetrieveEncodedObject";
Win32.SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC = "SchemeDllRetrieveEncodedObjectW";
Win32.CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC = "ContextDllCreateObjectContext";
Win32.CONTEXT_OID_CERTIFICATE = 1;
Win32.CONTEXT_OID_CRL = 2;
Win32.CONTEXT_OID_CTL = 3;
Win32.CONTEXT_OID_PKCS7 = 4;
Win32.CONTEXT_OID_CAPI2_ANY = 5;
Win32.CONTEXT_OID_OCSP_RESP = 6;
Win32.CRYPT_RETRIEVE_MULTIPLE_OBJECTS = 1;
Win32.CRYPT_CACHE_ONLY_RETRIEVAL = 2;
Win32.CRYPT_WIRE_ONLY_RETRIEVAL = 4;
Win32.CRYPT_DONT_CACHE_RESULT = 8;
Win32.CRYPT_ASYNC_RETRIEVAL = 16;
Win32.CRYPT_STICKY_CACHE_RETRIEVAL = 4096;
Win32.CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL = 8192;
Win32.CRYPT_OFFLINE_CHECK_RETRIEVAL = 16384;
Win32.CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE = 32768;
Win32.CRYPT_LDAP_SIGN_RETRIEVAL = 65536;
Win32.CRYPT_NO_AUTH_RETRIEVAL = 131072;
Win32.CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL = 262144;
Win32.CRYPT_AIA_RETRIEVAL = 524288;
Win32.CRYPT_HTTP_POST_RETRIEVAL = 1048576;
Win32.CRYPT_PROXY_CACHE_RETRIEVAL = 2097152;
Win32.CRYPT_NOT_MODIFIED_RETRIEVAL = 4194304;
Win32.CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL = 8388608;
Win32.CRYPT_RANDOM_QUERY_STRING_RETRIEVAL = 67108864;
Win32.CRYPT_ENABLE_FILE_RETRIEVAL = 134217728;
Win32.CRYPT_CREATE_NEW_FLUSH_ENTRY = 268435456;
Win32.CRYPT_VERIFY_CONTEXT_SIGNATURE = 32;
Win32.CRYPT_VERIFY_DATA_HASH = 64;
Win32.CRYPT_KEEP_TIME_VALID = 128;
Win32.CRYPT_DONT_VERIFY_SIGNATURE = 256;
Win32.CRYPT_DONT_CHECK_TIME_VALIDITY = 512;
Win32.CRYPT_CHECK_FRESHNESS_TIME_VALIDITY = 1024;
Win32.CRYPT_ACCUMULATIVE_TIMEOUT = 2048;
Win32.CRYPT_OCSP_ONLY_RETRIEVAL = 16777216;
Win32.CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL = 33554432;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_NONE = 0;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_BLOB = 1;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_CRL = 2;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_OCSP = 3;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB = 5;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB = 6;
Win32.CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB = 7;
Win32.CRYPTNET_URL_CACHE_DEFAULT_FLUSH = 0;
Win32.CRYPTNET_URL_CACHE_DISABLE_FLUSH = 4294967295;
Win32.CRYPTNET_URL_CACHE_RESPONSE_NONE = 0;
Win32.CRYPTNET_URL_CACHE_RESPONSE_HTTP = 1;
Win32.CRYPTNET_URL_CACHE_RESPONSE_VALIDATED = 32768;
Win32.CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH = 4096;
Win32.CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION = 1;
Win32.CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL = 2;
Win32.URL_OID_GET_OBJECT_URL_FUNC = "UrlDllGetObjectUrl";
Win32.URL_OID_CERTIFICATE_ISSUER = 1;
Win32.URL_OID_CERTIFICATE_CRL_DIST_POINT = 2;
Win32.URL_OID_CTL_ISSUER = 3;
Win32.URL_OID_CTL_NEXT_UPDATE = 4;
Win32.URL_OID_CRL_ISSUER = 5;
Win32.URL_OID_CERTIFICATE_FRESHEST_CRL = 6;
Win32.URL_OID_CRL_FRESHEST_CRL = 7;
Win32.URL_OID_CROSS_CERT_DIST_POINT = 8;
Win32.URL_OID_CERTIFICATE_OCSP = 9;
Win32.URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT = 10;
Win32.URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP = 11;
Win32.URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS = 12;
Win32.URL_OID_CERTIFICATE_ONLY_OCSP = 13;
Win32.TIME_VALID_OID_GET_OBJECT_FUNC = "TimeValidDllGetObject";
Win32.TIME_VALID_OID_GET_CTL = 1;
Win32.TIME_VALID_OID_GET_CRL = 2;
Win32.TIME_VALID_OID_GET_CRL_FROM_CERT = 3;
Win32.TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT = 4;
Win32.TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL = 5;
Win32.TIME_VALID_OID_FLUSH_OBJECT_FUNC = "TimeValidDllFlushObject";
Win32.TIME_VALID_OID_FLUSH_CTL = 1;
Win32.TIME_VALID_OID_FLUSH_CRL = 2;
Win32.TIME_VALID_OID_FLUSH_CRL_FROM_CERT = 3;
Win32.TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT = 4;
Win32.TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL = 5;
Win32.CRYPT_KEYID_MACHINE_FLAG = 32;
Win32.CRYPT_KEYID_ALLOC_FLAG = 32768;
Win32.CRYPT_KEYID_DELETE_FLAG = 16;
Win32.CRYPT_KEYID_SET_NEW_FLAG = 8192;
Win32.CERT_CHAIN_CONFIG_REGPATH = "Software\\Microsoft\\Cryptography\\OID\\EncodingType 0\\CertDllCreateCertificateChainEngine\\Config";
Win32.CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME = "MaxUrlRetrievalByteCount";
Win32.CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME = "ChainCacheResyncFiletime";
Win32.CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME = "DisableMandatoryBasicConstraints";
Win32.CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME = "DisableCANameConstraints";
Win32.CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME = "DisableUnsupportedCriticalExtensions";
Win32.CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME = "MaxAIAUrlCountInCert";
Win32.CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT = 5;
Win32.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME = "MaxAIAUrlRetrievalCountPerChain";
Win32.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT = 3;
Win32.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME = "MaxAIAUrlRetrievalByteCount";
Win32.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT = 100000;
Win32.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME = "MaxAIAUrlRetrievalCertCount";
Win32.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT = 10;
Win32.CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME = "OcspValiditySeconds";
Win32.CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME = "DisableSerialChain";
Win32.CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME = "SerialChainLogFileName";
Win32.CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME = "DisableSyncWithSslTime";
Win32.CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME = "MaxSslTimeUpdatedEventCount";
Win32.CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT = 5;
Win32.CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE = 4294967295;
Win32.CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME = "SslHandshakeLogFileName";
Win32.CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME = "EnableWeakSignatureFlags";
Win32.CERT_CHAIN_ENABLE_MD2_MD4_FLAG = 1;
Win32.CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG = 2;
Win32.CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG = 4;
Win32.CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG = 8;
Win32.CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME = "MinRsaPubKeyBitLength";
Win32.CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT = 1023;
Win32.CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE = 4294967295;
Win32.CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME = "WeakRsaPubKeyTime";
Win32.CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME = "WeakSignatureLogDir";
Win32.CERT_CHAIN_DEFAULT_CONFIG_SUBDIR = "Default";
Win32.CERT_CHAIN_WEAK_PREFIX_NAME = "Weak";
Win32.CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME = "ThirdParty";
Win32.CERT_CHAIN_WEAK_ALL_CONFIG_NAME = "All";
Win32.CERT_CHAIN_WEAK_FLAGS_NAME = "Flags";
Win32.CERT_CHAIN_WEAK_HYGIENE_NAME = "Hygiene";
Win32.CERT_CHAIN_WEAK_AFTER_TIME_NAME = "AfterTime";
Win32.CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME = "FileHashAfterTime";
Win32.CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME = "TimestampHashAfterTime";
Win32.CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME = "MinBitLength";
Win32.CERT_CHAIN_WEAK_SHA256_ALLOW_NAME = "Sha256Allow";
Win32.CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE = 4294967295;
Win32.CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG = 2147483648;
Win32.CERT_CHAIN_DISABLE_ECC_PARA_FLAG = 16;
Win32.CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG = 65536;
Win32.CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG = 131072;
Win32.CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG = 262144;
Win32.CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG = 1048576;
Win32.CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG = 2097152;
Win32.CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG = 4194304;
Win32.CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG = 8388608;
Win32.CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG = 16777216;
Win32.CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG = 33554432;
Win32.CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG = 67108864;
Win32.CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG = 134217728;
Win32.CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG = 268435456;
Win32.CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG = 536870912;
Win32.CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG = 1073741824;
Win32.CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG = 4096;
Win32.CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG = 8192;
Win32.CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG = 16384;
Win32.CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG = 32768;
Win32.CERT_CHAIN_OPT_IN_WEAK_FLAGS = 262144;
Win32.CERT_CHAIN_AUTO_CURRENT_USER = 1;
Win32.CERT_CHAIN_AUTO_LOCAL_MACHINE = 2;
Win32.CERT_CHAIN_AUTO_IMPERSONATED = 3;
Win32.CERT_CHAIN_AUTO_PROCESS_INFO = 4;
Win32.CERT_CHAIN_AUTO_PINRULE_INFO = 5;
Win32.CERT_CHAIN_AUTO_NETWORK_INFO = 6;
Win32.CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE = 7;
Win32.CERT_CHAIN_AUTO_HPKP_RULE_INFO = 8;
Win32.CERT_CHAIN_AUTO_FLAGS_VALUE_NAME = "AutoFlags";
Win32.CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG = 1;
Win32.CERT_CHAIN_AUTO_LOG_CREATE_FLAG = 2;
Win32.CERT_CHAIN_AUTO_LOG_FREE_FLAG = 4;
Win32.CERT_CHAIN_AUTO_LOG_FLUSH_FLAG = 8;
Win32.CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME = "AutoFlushFirstDeltaSeconds";
Win32.CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME = "AutoFlushNextDeltaSeconds";
Win32.CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME = "AutoLogFileName";
Win32.CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME = "DisableAutoFlushProcessNameList";
Win32.CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME = "SrvOcspRespMinValiditySeconds";
Win32.CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME = "SrvOcspRespUrlRetrievalTimeoutMilliseconds";
Win32.CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME = "SrvOcspRespMaxBeforeNextUpdateSeconds";
Win32.CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME = "SrvOcspRespMinBeforeNextUpdateSeconds";
Win32.CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME = "SrvOcspRespMinAfterNextUpdateSeconds";
Win32.CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME = "SrvOcspRespMinSyncCertFileSeconds";
Win32.CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT = 5;
Win32.CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME = "SrvOcspRespMaxSyncCertFileSeconds";
Win32.CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME = "CryptnetMaxCachedOcspPerCrlCount";
Win32.CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT = 500;
Win32.CRYPTNET_OCSP_AFTER_CRL_DISABLE = 4294967295;
Win32.CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME = "CryptnetDefaultFlushExemptSeconds";
Win32.CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME = "CryptnetPreFetchMinMaxAgeSeconds";
Win32.CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME = "CryptnetPreFetchMaxMaxAgeSeconds";
Win32.CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME = "CryptnetPreFetchMinOcspValidityPeriodSeconds";
Win32.CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME = "CryptnetPreFetchAfterPublishPreFetchDivisor";
Win32.CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT = 10;
Win32.CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME = "CryptnetPreFetchBeforeNextUpdatePreFetchDivisor";
Win32.CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT = 20;
Win32.CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME = "CryptnetPreFetchMinBeforeNextUpdatePreFetchSeconds";
Win32.CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME = "CryptnetPreFetchValidityPeriodAfterNextUpdatePreFetchDivisor";
Win32.CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT = 10;
Win32.CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME = "CryptnetPreFetchMaxAfterNextUpdatePreFetchPeriodSeconds";
Win32.CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME = "CryptnetPreFetchMinAfterNextUpdatePreFetchPeriodSeconds";
Win32.CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME = "CryptnetPreFetchAfterCurrentTimePreFetchPeriodSeconds";
Win32.CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME = "CryptnetPreFetchTriggerPeriodSeconds";
Win32.CRYPTNET_PRE_FETCH_TRIGGER_DISABLE = 4294967295;
Win32.CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME = "CryptnetPreFetchScanAfterTriggerDelaySeconds";
Win32.CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT = 60;
Win32.CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME = "CryptnetPreFetchRetrievalTimeoutSeconds";
Win32.CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME = "ProcessNameList";
Win32.CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME = "PreFetchUrlList";
Win32.CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME = "DisableInformationEvents";
Win32.CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME = "LogFileName";
Win32.CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME = "TimeoutSeconds";
Win32.CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME = "MaxAgeSeconds";
Win32.CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME = "PublishBeforeNextUpdateSeconds";
Win32.CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME = "PublishRandomIntervalSeconds";
Win32.CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME = "MinBeforeNextUpdateSeconds";
Win32.CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME = "MinAfterNextUpdateSeconds";
Win32.CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME = "ChainUrlRetrievalTimeoutMilliseconds";
Win32.CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME = "ChainRevAccumulativeUrlRetrievalTimeoutMilliseconds";
Win32.CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME = "EnableInetUnknownAuth";
Win32.CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME = "EnableInetLocal";
Win32.CERT_RETR_BEHAVIOR_FILE_VALUE_NAME = "AllowFileUrlScheme";
Win32.CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME = "DisableLDAPSignAndEncrypt";
Win32.CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME = "CryptnetCachedOcspSwitchToCrlCount";
Win32.CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT = 50;
Win32.CRYPTNET_CRL_BEFORE_OCSP_ENABLE = 4294967295;
Win32.CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME = "DisableAIAUrlRetrieval";
Win32.CERT_CHAIN_OPTIONS_VALUE_NAME = "Options";
Win32.CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL = 2;
Win32.CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL = 4;
Win32.CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME = "CrossCertDownloadIntervalHours";
Win32.CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME = "CRLValidityExtensionPeriod";
Win32.CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT = 12;
Win32.CERT_CHAIN_CACHE_END_CERT = 1;
Win32.CERT_CHAIN_THREAD_STORE_SYNC = 2;
Win32.CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL = 4;
Win32.CERT_CHAIN_USE_LOCAL_MACHINE_STORE = 8;
Win32.CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE = 16;
Win32.CERT_CHAIN_ENABLE_SHARE_STORE = 32;
Win32.CERT_CHAIN_EXCLUSIVE_ENABLE_CA_FLAG = 1;
Win32.CERT_TRUST_NO_ERROR = 0;
Win32.CERT_TRUST_IS_NOT_TIME_VALID = 1;
Win32.CERT_TRUST_IS_NOT_TIME_NESTED = 2;
Win32.CERT_TRUST_IS_REVOKED = 4;
Win32.CERT_TRUST_IS_NOT_SIGNATURE_VALID = 8;
Win32.CERT_TRUST_IS_NOT_VALID_FOR_USAGE = 16;
Win32.CERT_TRUST_IS_UNTRUSTED_ROOT = 32;
Win32.CERT_TRUST_REVOCATION_STATUS_UNKNOWN = 64;
Win32.CERT_TRUST_IS_CYCLIC = 128;
Win32.CERT_TRUST_INVALID_EXTENSION = 256;
Win32.CERT_TRUST_INVALID_POLICY_CONSTRAINTS = 512;
Win32.CERT_TRUST_INVALID_BASIC_CONSTRAINTS = 1024;
Win32.CERT_TRUST_INVALID_NAME_CONSTRAINTS = 2048;
Win32.CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT = 4096;
Win32.CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT = 8192;
Win32.CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT = 16384;
Win32.CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT = 32768;
Win32.CERT_TRUST_IS_OFFLINE_REVOCATION = 16777216;
Win32.CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY = 33554432;
Win32.CERT_TRUST_IS_EXPLICIT_DISTRUST = 67108864;
Win32.CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT = 134217728;
Win32.CERT_TRUST_HAS_WEAK_SIGNATURE = 1048576;
Win32.CERT_TRUST_HAS_WEAK_HYGIENE = 2097152;
Win32.CERT_TRUST_IS_PARTIAL_CHAIN = 65536;
Win32.CERT_TRUST_CTL_IS_NOT_TIME_VALID = 131072;
Win32.CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID = 262144;
Win32.CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE = 524288;
Win32.CERT_TRUST_HAS_EXACT_MATCH_ISSUER = 1;
Win32.CERT_TRUST_HAS_KEY_MATCH_ISSUER = 2;
Win32.CERT_TRUST_HAS_NAME_MATCH_ISSUER = 4;
Win32.CERT_TRUST_IS_SELF_SIGNED = 8;
Win32.CERT_TRUST_AUTO_UPDATE_CA_REVOCATION = 16;
Win32.CERT_TRUST_AUTO_UPDATE_END_REVOCATION = 32;
Win32.CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL = 64;
Win32.CERT_TRUST_IS_KEY_ROLLOVER = 128;
Win32.CERT_TRUST_SSL_HANDSHAKE_OCSP = 262144;
Win32.CERT_TRUST_SSL_TIME_VALID_OCSP = 524288;
Win32.CERT_TRUST_SSL_RECONNECT_OCSP = 1048576;
Win32.CERT_TRUST_HAS_PREFERRED_ISSUER = 256;
Win32.CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY = 512;
Win32.CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS = 1024;
Win32.CERT_TRUST_IS_PEER_TRUSTED = 2048;
Win32.CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED = 4096;
Win32.CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE = 8192;
Win32.CERT_TRUST_IS_CA_TRUSTED = 16384;
Win32.CERT_TRUST_HAS_AUTO_UPDATE_WEAK_SIGNATURE = 32768;
Win32.CERT_TRUST_HAS_ALLOW_WEAK_SIGNATURE = 131072;
Win32.CERT_TRUST_IS_COMPLEX_CHAIN = 65536;
Win32.CERT_TRUST_SSL_TIME_VALID = 16777216;
Win32.CERT_TRUST_NO_TIME_CHECK = 33554432;
Win32.USAGE_MATCH_TYPE_AND = 0;
Win32.USAGE_MATCH_TYPE_OR = 1;
Win32.CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG = 1;
Win32.CERT_CHAIN_REVOCATION_CHECK_END_CERT = 268435456;
Win32.CERT_CHAIN_REVOCATION_CHECK_CHAIN = 536870912;
Win32.CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT = 1073741824;
Win32.CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY = 2147483648;
Win32.CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT = 134217728;
Win32.CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT = 67108864;
Win32.CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING = 64;
Win32.CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS = 128;
Win32.CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE = 256;
Win32.CERT_CHAIN_TIMESTAMP_TIME = 512;
Win32.CERT_CHAIN_ENABLE_PEER_TRUST = 1024;
Win32.CERT_CHAIN_DISABLE_MY_PEER_TRUST = 2048;
Win32.CERT_CHAIN_DISABLE_MD2_MD4 = 4096;
Win32.CERT_CHAIN_DISABLE_AIA = 8192;
Win32.CERT_CHAIN_HAS_MOTW = 16384;
Win32.CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT = 32768;
Win32.CERT_CHAIN_OPT_IN_WEAK_SIGNATURE = 65536;
Win32.REVOCATION_OID_CRL_REVOCATION = 1;
Win32.CERT_CHAIN_FIND_BY_ISSUER = 1;
Win32.CERT_CHAIN_POLICY_IGNORE_WEAK_SIGNATURE_FLAG = 134217728;
Win32.CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC = "CertDllVerifyCertificateChainPolicy";
Win32.CERT_CHAIN_POLICY_BASE = 1;
Win32.CERT_CHAIN_POLICY_AUTHENTICODE = 2;
Win32.CERT_CHAIN_POLICY_AUTHENTICODE_TS = 3;
Win32.CERT_CHAIN_POLICY_SSL = 4;
Win32.CERT_CHAIN_POLICY_BASIC_CONSTRAINTS = 5;
Win32.CERT_CHAIN_POLICY_NT_AUTH = 6;
Win32.CERT_CHAIN_POLICY_MICROSOFT_ROOT = 7;
Win32.CERT_CHAIN_POLICY_EV = 8;
Win32.CERT_CHAIN_POLICY_SSL_F12 = 9;
Win32.CERT_CHAIN_POLICY_SSL_HPKP_HEADER = 10;
Win32.CERT_CHAIN_POLICY_THIRD_PARTY_ROOT = 11;
Win32.CERT_CHAIN_POLICY_SSL_KEY_PIN = 12;
Win32.BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG = 2147483648;
Win32.BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG = 1073741824;
Win32.MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG = 65536;
Win32.MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG = 131072;
Win32.MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG = 262144;
Win32.SSL_F12_ERROR_TEXT_LENGTH = 256;
Win32.CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL = 0;
Win32.CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL = 1;
Win32.CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL = 2;
Win32.CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY = 0;
Win32.CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY = 1;
Win32.CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY = 2;
Win32.SSL_HPKP_PKP_HEADER_INDEX = 0;
Win32.SSL_HPKP_PKP_RO_HEADER_INDEX = 1;
Win32.SSL_HPKP_HEADER_COUNT = 2;
Win32.SSL_KEY_PIN_ERROR_TEXT_LENGTH = 512;
Win32.CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR = -2;
Win32.CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR = -1;
Win32.CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS = 0;
Win32.CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING = 1;
Win32.CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING = 2;
Win32.CRYPT_STRING_BASE64URI = 13;
Win32.CRYPT_STRING_ENCODEMASK = 255;
Win32.CRYPT_STRING_RESERVED100 = 256;
Win32.CRYPT_STRING_RESERVED200 = 512;
Win32.CRYPT_STRING_PERCENTESCAPE = 134217728;
Win32.CRYPT_STRING_HASHDATA = 268435456;
Win32.CRYPT_STRING_NOCRLF = 1073741824;
Win32.CRYPT_STRING_NOCR = 2147483648;
Win32.szOID_PKCS_12_PbeIds = "1.2.840.113549.1.12.1";
Win32.szOID_PKCS_12_pbeWithSHA1And128BitRC4 = "1.2.840.113549.1.12.1.1";
Win32.szOID_PKCS_12_pbeWithSHA1And40BitRC4 = "1.2.840.113549.1.12.1.2";
Win32.szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES = "1.2.840.113549.1.12.1.3";
Win32.szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES = "1.2.840.113549.1.12.1.4";
Win32.szOID_PKCS_12_pbeWithSHA1And128BitRC2 = "1.2.840.113549.1.12.1.5";
Win32.szOID_PKCS_12_pbeWithSHA1And40BitRC2 = "1.2.840.113549.1.12.1.6";
Win32.szOID_PKCS_5_PBKDF2 = "1.2.840.113549.1.5.12";
Win32.szOID_PKCS_5_PBES2 = "1.2.840.113549.1.5.13";
Win32.PKCS12_IMPORT_SILENT = 64;
Win32.PKCS12_ONLY_CERTIFICATES = 1024;
Win32.PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES = 2048;
Win32.PKCS12_VIRTUAL_ISOLATION_KEY = 65536;
Win32.PKCS12_IMPORT_RESERVED_MASK = 4294901760;
Win32.PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE = 0;
Win32.PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME = "PfxProvider";
Win32.PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME = "PfxContainer";
Win32.REPORT_NO_PRIVATE_KEY = 1;
Win32.REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY = 2;
Win32.EXPORT_PRIVATE_KEYS = 4;
Win32.PKCS12_PROTECT_TO_DOMAIN_SIDS = 32;
Win32.PKCS12_EXPORT_SILENT = 64;
Win32.PKCS12_EXPORT_PBES2_PARAMS = 128;
Win32.PKCS12_DISABLE_ENCRYPT_CERTIFICATES = 256;
Win32.PKCS12_ENCRYPT_CERTIFICATES = 512;
Win32.PKCS12_EXPORT_ECC_CURVE_PARAMETERS = 4096;
Win32.PKCS12_EXPORT_ECC_CURVE_OID = 8192;
Win32.PKCS12_EXPORT_RESERVED_MASK = 4294901760;
Win32.PKCS12_PBKDF2_ID_HMAC_SHA1 = "1.2.840.113549.2.7";
Win32.PKCS12_PBKDF2_ID_HMAC_SHA256 = "1.2.840.113549.2.9";
Win32.PKCS12_PBKDF2_ID_HMAC_SHA384 = "1.2.840.113549.2.10";
Win32.PKCS12_PBKDF2_ID_HMAC_SHA512 = "1.2.840.113549.2.11";
Win32.PKCS12_PBES2_ALG_AES256_SHA256 = "AES256-SHA256";
Win32.PKCS12_CONFIG_REGPATH = "Software\\Microsoft\\Windows\\CurrentVersion\\PFX";
Win32.PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME = "EncryptCertificates";
Win32.CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG = 1;
Win32.CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG = 2;
Win32.CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG = 1;
Win32.CERT_RETRIEVE_ISSUER_LOGO = 1;
Win32.CERT_RETRIEVE_SUBJECT_LOGO = 2;
Win32.CERT_RETRIEVE_COMMUNITY_LOGO = 3;
Win32.CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE = 1000;
Win32.CERT_SELECT_MAX_PARA = 500;
Win32.CERT_SELECT_BY_ISSUER_DISPLAYNAME = 12;
Win32.CERT_SELECT_BY_FRIENDLYNAME = 13;
Win32.CERT_SELECT_BY_THUMBPRINT = 14;
Win32.CERT_SELECT_ALLOW_EXPIRED = 1;
Win32.CERT_SELECT_TRUSTED_ROOT = 2;
Win32.CERT_SELECT_DISALLOW_SELFSIGNED = 4;
Win32.CERT_SELECT_HAS_PRIVATE_KEY = 8;
Win32.CERT_SELECT_HAS_KEY_FOR_SIGNATURE = 16;
Win32.CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE = 32;
Win32.CERT_SELECT_HARDWARE_ONLY = 64;
Win32.CERT_SELECT_ALLOW_DUPLICATES = 128;
Win32.CERT_SELECT_IGNORE_AUTOSELECT = 256;
Win32.TIMESTAMP_FAILURE_BAD_ALG = 0;
Win32.TIMESTAMP_FAILURE_BAD_REQUEST = 2;
Win32.TIMESTAMP_FAILURE_BAD_FORMAT = 5;
Win32.TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE = 14;
Win32.TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED = 15;
Win32.TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED = 16;
Win32.TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE = 17;
Win32.TIMESTAMP_FAILURE_SYSTEM_FAILURE = 25;
Win32.TIMESTAMP_DONT_HASH_DATA = 1;
Win32.TIMESTAMP_VERIFY_CONTEXT_SIGNATURE = 32;
Win32.TIMESTAMP_NO_AUTH_RETRIEVAL = 131072;
Win32.CRYPT_OBJECT_LOCATOR_SPN_NAME_TYPE = 1;
Win32.CRYPT_OBJECT_LOCATOR_LAST_RESERVED_NAME_TYPE = 32;
Win32.CRYPT_OBJECT_LOCATOR_FIRST_RESERVED_USER_NAME_TYPE = 33;
Win32.CRYPT_OBJECT_LOCATOR_LAST_RESERVED_USER_NAME_TYPE = 65535;
Win32.SSL_OBJECT_LOCATOR_PFX_FUNC = "SslObjectLocatorInitializePfx";
Win32.SSL_OBJECT_LOCATOR_ISSUER_LIST_FUNC = "SslObjectLocatorInitializeIssuerList";
Win32.SSL_OBJECT_LOCATOR_CERT_VALIDATION_CONFIG_FUNC = "SslObjectLocatorInitializeCertValidationConfig";
Win32.CERT_FILE_HASH_USE_TYPE = 1;
Win32.CERT_TIMESTAMP_HASH_USE_TYPE = 2;
Win32.RECIPIENTPOLICYV1 = 1;
Win32.RECIPIENTPOLICYV2 = 2;
Win32.E_ICARD_COMMUNICATION = -1073413888;
Win32.E_ICARD_DATA_ACCESS = -1073413887;
Win32.E_ICARD_EXPORT = -1073413886;
Win32.E_ICARD_IDENTITY = -1073413885;
Win32.E_ICARD_IMPORT = -1073413884;
Win32.E_ICARD_ARGUMENT = -1073413883;
Win32.E_ICARD_REQUEST = -1073413882;
Win32.E_ICARD_INFORMATIONCARD = -1073413881;
Win32.E_ICARD_STOREKEY = -1073413880;
Win32.E_ICARD_LOGOVALIDATION = -1073413879;
Win32.E_ICARD_PASSWORDVALIDATION = -1073413878;
Win32.E_ICARD_POLICY = -1073413877;
Win32.E_ICARD_PROCESSDIED = -1073413876;
Win32.E_ICARD_SERVICEBUSY = -1073413875;
Win32.E_ICARD_SERVICE = -1073413874;
Win32.E_ICARD_SHUTTINGDOWN = -1073413873;
Win32.E_ICARD_TOKENCREATION = -1073413872;
Win32.E_ICARD_TRUSTEXCHANGE = -1073413871;
Win32.E_ICARD_UNTRUSTED = -1073413870;
Win32.E_ICARD_USERCANCELLED = -1073413869;
Win32.E_ICARD_STORE_IMPORT = -1073413868;
Win32.E_ICARD_FAIL = -1073413867;
Win32.E_ICARD_UI_INITIALIZATION = -1073413862;
Win32.E_ICARD_REFRESH_REQUIRED = -1073413760;
Win32.E_ICARD_MISSING_APPLIESTO = -1073413759;
Win32.E_ICARD_INVALID_PROOF_KEY = -1073413758;
Win32.E_ICARD_UNKNOWN_REFERENCE = -1073413757;
Win32.E_ICARD_FAILED_REQUIRED_CLAIMS = -1073413756;
Win32.AUDIT_CARD_WRITTEN = 1074070016;
Win32.AUDIT_CARD_DELETE = 1074070017;
Win32.AUDIT_CARD_IMPORT = 1074070018;
Win32.AUDIT_STORE_IMPORT = 1074070019;
Win32.AUDIT_STORE_EXPORT = 1074070020;
Win32.AUDIT_STORE_DELETE = 1074070021;
Win32.AUDIT_SERVICE_IDLE_STOP = 1074070022;
Win32.CryptAcquireContextA = foreign.native( "ADVAPI32.dll", "int", "CryptAcquireContextA", [ "ptr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.CryptAcquireContextW = foreign.native( "ADVAPI32.dll", "int", "CryptAcquireContextW", [ "ptr", "wstr", "wstr", "uint", "uint" ] ); 
Win32.CryptReleaseContext = foreign.native( "ADVAPI32.dll", "int", "CryptReleaseContext", [ "ptr", "uint" ] ); 
Win32.CryptGenKey = foreign.native( "ADVAPI32.dll", "int", "CryptGenKey", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CryptDeriveKey = foreign.native( "ADVAPI32.dll", "int", "CryptDeriveKey", [ "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CryptDestroyKey = foreign.native( "ADVAPI32.dll", "int", "CryptDestroyKey", [ "ptr" ] ); 
Win32.CryptSetKeyParam = foreign.native( "ADVAPI32.dll", "int", "CryptSetKeyParam", [ "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptGetKeyParam = foreign.native( "ADVAPI32.dll", "int", "CryptGetKeyParam", [ "ptr", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptSetHashParam = foreign.native( "ADVAPI32.dll", "int", "CryptSetHashParam", [ "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptGetHashParam = foreign.native( "ADVAPI32.dll", "int", "CryptGetHashParam", [ "ptr", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptSetProvParam = foreign.native( "ADVAPI32.dll", "int", "CryptSetProvParam", [ "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptGetProvParam = foreign.native( "ADVAPI32.dll", "int", "CryptGetProvParam", [ "ptr", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptGenRandom = foreign.native( "ADVAPI32.dll", "int", "CryptGenRandom", [ "ptr", "uint", "ptr" ] ); 
Win32.CryptGetUserKey = foreign.native( "ADVAPI32.dll", "int", "CryptGetUserKey", [ "ptr", "uint", "ptr" ] ); 
Win32.CryptExportKey = foreign.native( "ADVAPI32.dll", "int", "CryptExportKey", [ "ptr", "ptr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptImportKey = foreign.native( "ADVAPI32.dll", "int", "CryptImportKey", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CryptEncrypt = foreign.native( "ADVAPI32.dll", "int", "CryptEncrypt", [ "ptr", "ptr", "int", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptDecrypt = foreign.native( "ADVAPI32.dll", "int", "CryptDecrypt", [ "ptr", "ptr", "int", "uint", "ptr", "ptr" ] ); 
Win32.CryptCreateHash = foreign.native( "ADVAPI32.dll", "int", "CryptCreateHash", [ "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CryptHashData = foreign.native( "ADVAPI32.dll", "int", "CryptHashData", [ "ptr", "ptr", "uint", "uint" ] ); 
Win32.CryptHashSessionKey = foreign.native( "ADVAPI32.dll", "int", "CryptHashSessionKey", [ "ptr", "ptr", "uint" ] ); 
Win32.CryptDestroyHash = foreign.native( "ADVAPI32.dll", "int", "CryptDestroyHash", [ "ptr" ] ); 
Win32.CryptSignHashA = foreign.native( "ADVAPI32.dll", "int", "CryptSignHashA", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptSignHashW = foreign.native( "ADVAPI32.dll", "int", "CryptSignHashW", [ "ptr", "uint", "wstr", "uint", "ptr", "ptr" ] ); 
Win32.CryptVerifySignatureA = foreign.native( "ADVAPI32.dll", "int", "CryptVerifySignatureA", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptVerifySignatureW = foreign.native( "ADVAPI32.dll", "int", "CryptVerifySignatureW", [ "ptr", "ptr", "uint", "ptr", "wstr", "uint" ] ); 
Win32.CryptSetProviderA = foreign.native( "ADVAPI32.dll", "int", "CryptSetProviderA", [ "ptr", "uint" ] ); 
Win32.CryptSetProviderW = foreign.native( "ADVAPI32.dll", "int", "CryptSetProviderW", [ "wstr", "uint" ] ); 
Win32.CryptSetProviderExA = foreign.native( "ADVAPI32.dll", "int", "CryptSetProviderExA", [ "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptSetProviderExW = foreign.native( "ADVAPI32.dll", "int", "CryptSetProviderExW", [ "wstr", "uint", "ptr", "uint" ] ); 
Win32.CryptGetDefaultProviderA = foreign.native( "ADVAPI32.dll", "int", "CryptGetDefaultProviderA", [ "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptGetDefaultProviderW = foreign.native( "ADVAPI32.dll", "int", "CryptGetDefaultProviderW", [ "uint", "ptr", "uint", "wstr", "ptr" ] ); 
Win32.CryptEnumProviderTypesA = foreign.native( "ADVAPI32.dll", "int", "CryptEnumProviderTypesA", [ "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptEnumProviderTypesW = foreign.native( "ADVAPI32.dll", "int", "CryptEnumProviderTypesW", [ "uint", "ptr", "uint", "ptr", "wstr", "ptr" ] ); 
Win32.CryptEnumProvidersA = foreign.native( "ADVAPI32.dll", "int", "CryptEnumProvidersA", [ "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptEnumProvidersW = foreign.native( "ADVAPI32.dll", "int", "CryptEnumProvidersW", [ "uint", "ptr", "uint", "ptr", "wstr", "ptr" ] ); 
Win32.CryptContextAddRef = foreign.native( "ADVAPI32.dll", "int", "CryptContextAddRef", [ "ptr", "ptr", "uint" ] ); 
Win32.CryptDuplicateKey = foreign.native( "ADVAPI32.dll", "int", "CryptDuplicateKey", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CryptDuplicateHash = foreign.native( "ADVAPI32.dll", "int", "CryptDuplicateHash", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.BCryptOpenAlgorithmProvider = foreign.native( "bcrypt.dll", "int", "BCryptOpenAlgorithmProvider", [ "ptr", "wstr", "wstr", "uint" ] ); 
Win32.BCryptEnumAlgorithms = foreign.native( "bcrypt.dll", "int", "BCryptEnumAlgorithms", [ "uint", "ptr", "ptr", "uint" ] ); 
Win32.BCryptEnumProviders = foreign.native( "bcrypt.dll", "int", "BCryptEnumProviders", [ "wstr", "ptr", "ptr", "uint" ] ); 
Win32.BCryptGetProperty = foreign.native( "bcrypt.dll", "int", "BCryptGetProperty", [ "ptr", "wstr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptSetProperty = foreign.native( "bcrypt.dll", "int", "BCryptSetProperty", [ "ptr", "wstr", "ptr", "uint", "uint" ] ); 
Win32.BCryptCloseAlgorithmProvider = foreign.native( "bcrypt.dll", "int", "BCryptCloseAlgorithmProvider", [ "ptr", "uint" ] ); 
Win32.BCryptFreeBuffer = foreign.native( "bcrypt.dll", "void", "BCryptFreeBuffer", [ "ptr" ] ); 
Win32.BCryptGenerateSymmetricKey = foreign.native( "bcrypt.dll", "int", "BCryptGenerateSymmetricKey", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint", "uint" ] ); 
Win32.BCryptGenerateKeyPair = foreign.native( "bcrypt.dll", "int", "BCryptGenerateKeyPair", [ "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptEncrypt = foreign.native( "bcrypt.dll", "int", "BCryptEncrypt", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptDecrypt = foreign.native( "bcrypt.dll", "int", "BCryptDecrypt", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptExportKey = foreign.native( "bcrypt.dll", "int", "BCryptExportKey", [ "ptr", "ptr", "wstr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptImportKey = foreign.native( "bcrypt.dll", "int", "BCryptImportKey", [ "ptr", "ptr", "wstr", "ptr", "ptr", "uint", "ptr", "uint", "uint" ] ); 
Win32.BCryptImportKeyPair = foreign.native( "bcrypt.dll", "int", "BCryptImportKeyPair", [ "ptr", "ptr", "wstr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptDuplicateKey = foreign.native( "bcrypt.dll", "int", "BCryptDuplicateKey", [ "ptr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptFinalizeKeyPair = foreign.native( "bcrypt.dll", "int", "BCryptFinalizeKeyPair", [ "ptr", "uint" ] ); 
Win32.BCryptDestroyKey = foreign.native( "bcrypt.dll", "int", "BCryptDestroyKey", [ "ptr" ] ); 
Win32.BCryptDestroySecret = foreign.native( "bcrypt.dll", "int", "BCryptDestroySecret", [ "ptr" ] ); 
Win32.BCryptSignHash = foreign.native( "bcrypt.dll", "int", "BCryptSignHash", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptVerifySignature = foreign.native( "bcrypt.dll", "int", "BCryptVerifySignature", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint", "uint" ] ); 
Win32.BCryptSecretAgreement = foreign.native( "bcrypt.dll", "int", "BCryptSecretAgreement", [ "ptr", "ptr", "ptr", "uint" ] ); 
Win32.BCryptDeriveKey = foreign.native( "bcrypt.dll", "int", "BCryptDeriveKey", [ "ptr", "wstr", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptKeyDerivation = foreign.native( "bcrypt.dll", "int", "BCryptKeyDerivation", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptCreateHash = foreign.native( "bcrypt.dll", "int", "BCryptCreateHash", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint", "uint" ] ); 
Win32.BCryptHashData = foreign.native( "bcrypt.dll", "int", "BCryptHashData", [ "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptFinishHash = foreign.native( "bcrypt.dll", "int", "BCryptFinishHash", [ "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptCreateMultiHash = foreign.native( "bcrypt.dll", "int", "BCryptCreateMultiHash", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint", "uint" ] ); 
Win32.BCryptProcessMultiOperations = foreign.native( "bcrypt.dll", "int", "BCryptProcessMultiOperations", [ "ptr", "int", "ptr", "uint", "uint" ] ); 
Win32.BCryptDuplicateHash = foreign.native( "bcrypt.dll", "int", "BCryptDuplicateHash", [ "ptr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptDestroyHash = foreign.native( "bcrypt.dll", "int", "BCryptDestroyHash", [ "ptr" ] ); 
Win32.BCryptHash = foreign.native( "bcrypt.dll", "int", "BCryptHash", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.BCryptGenRandom = foreign.native( "bcrypt.dll", "int", "BCryptGenRandom", [ "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptDeriveKeyCapi = foreign.native( "bcrypt.dll", "int", "BCryptDeriveKeyCapi", [ "ptr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.BCryptDeriveKeyPBKDF2 = foreign.native( "bcrypt.dll", "int", "BCryptDeriveKeyPBKDF2", [ "ptr", "ptr", "uint", "ptr", "uint", "ulong", "ptr", "uint", "uint" ] ); 
Win32.BCryptQueryProviderRegistration = foreign.native( "bcrypt.dll", "int", "BCryptQueryProviderRegistration", [ "wstr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.BCryptEnumRegisteredProviders = foreign.native( "bcrypt.dll", "int", "BCryptEnumRegisteredProviders", [ "ptr", "ptr" ] ); 
Win32.BCryptCreateContext = foreign.native( "bcrypt.dll", "int", "BCryptCreateContext", [ "uint", "wstr", "ptr" ] ); 
Win32.BCryptDeleteContext = foreign.native( "bcrypt.dll", "int", "BCryptDeleteContext", [ "uint", "wstr" ] ); 
Win32.BCryptEnumContexts = foreign.native( "bcrypt.dll", "int", "BCryptEnumContexts", [ "uint", "ptr", "ptr" ] ); 
Win32.BCryptConfigureContext = foreign.native( "bcrypt.dll", "int", "BCryptConfigureContext", [ "uint", "wstr", "ptr" ] ); 
Win32.BCryptQueryContextConfiguration = foreign.native( "bcrypt.dll", "int", "BCryptQueryContextConfiguration", [ "uint", "wstr", "ptr", "ptr" ] ); 
Win32.BCryptAddContextFunction = foreign.native( "bcrypt.dll", "int", "BCryptAddContextFunction", [ "uint", "wstr", "uint", "wstr", "uint" ] ); 
Win32.BCryptRemoveContextFunction = foreign.native( "bcrypt.dll", "int", "BCryptRemoveContextFunction", [ "uint", "wstr", "uint", "wstr" ] ); 
Win32.BCryptEnumContextFunctions = foreign.native( "bcrypt.dll", "int", "BCryptEnumContextFunctions", [ "uint", "wstr", "uint", "ptr", "ptr" ] ); 
Win32.BCryptConfigureContextFunction = foreign.native( "bcrypt.dll", "int", "BCryptConfigureContextFunction", [ "uint", "wstr", "uint", "wstr", "ptr" ] ); 
Win32.BCryptQueryContextFunctionConfiguration = foreign.native( "bcrypt.dll", "int", "BCryptQueryContextFunctionConfiguration", [ "uint", "wstr", "uint", "wstr", "ptr", "ptr" ] ); 
Win32.BCryptEnumContextFunctionProviders = foreign.native( "bcrypt.dll", "int", "BCryptEnumContextFunctionProviders", [ "uint", "wstr", "uint", "wstr", "ptr", "ptr" ] ); 
Win32.BCryptSetContextFunctionProperty = foreign.native( "bcrypt.dll", "int", "BCryptSetContextFunctionProperty", [ "uint", "wstr", "uint", "wstr", "wstr", "uint", "ptr" ] ); 
Win32.BCryptQueryContextFunctionProperty = foreign.native( "bcrypt.dll", "int", "BCryptQueryContextFunctionProperty", [ "uint", "wstr", "uint", "wstr", "wstr", "ptr", "ptr" ] ); 
Win32.BCryptRegisterConfigChangeNotify = foreign.native( "bcrypt.dll", "int", "BCryptRegisterConfigChangeNotify", [ "ptr" ] ); 
Win32.BCryptUnregisterConfigChangeNotify = foreign.native( "bcrypt.dll", "int", "BCryptUnregisterConfigChangeNotify", [ "ptr" ] ); 
Win32.BCryptResolveProviders = foreign.native( "bcrypt.dll", "int", "BCryptResolveProviders", [ "wstr", "uint", "wstr", "wstr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.BCryptGetFipsAlgorithmMode = foreign.native( "bcrypt.dll", "int", "BCryptGetFipsAlgorithmMode", [ "ptr" ] ); 
Win32.NCryptOpenStorageProvider = foreign.native( "ncrypt.dll", "int", "NCryptOpenStorageProvider", [ "ptr", "wstr", "uint" ] ); 
Win32.NCryptEnumAlgorithms = foreign.native( "ncrypt.dll", "int", "NCryptEnumAlgorithms", [ "ptr", "uint", "ptr", "ptr", "uint" ] ); 
Win32.NCryptIsAlgSupported = foreign.native( "ncrypt.dll", "int", "NCryptIsAlgSupported", [ "ptr", "wstr", "uint" ] ); 
Win32.NCryptEnumKeys = foreign.native( "ncrypt.dll", "int", "NCryptEnumKeys", [ "ptr", "wstr", "ptr", "ptr", "uint" ] ); 
Win32.NCryptEnumStorageProviders = foreign.native( "ncrypt.dll", "int", "NCryptEnumStorageProviders", [ "ptr", "ptr", "uint" ] ); 
Win32.NCryptFreeBuffer = foreign.native( "ncrypt.dll", "int", "NCryptFreeBuffer", [ "ptr" ] ); 
Win32.NCryptOpenKey = foreign.native( "ncrypt.dll", "int", "NCryptOpenKey", [ "ptr", "ptr", "wstr", "uint", "uint" ] ); 
Win32.NCryptCreatePersistedKey = foreign.native( "ncrypt.dll", "int", "NCryptCreatePersistedKey", [ "ptr", "ptr", "wstr", "wstr", "uint", "uint" ] ); 
Win32.NCryptGetProperty = foreign.native( "ncrypt.dll", "int", "NCryptGetProperty", [ "ptr", "wstr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptSetProperty = foreign.native( "ncrypt.dll", "int", "NCryptSetProperty", [ "ptr", "wstr", "ptr", "uint", "uint" ] ); 
Win32.NCryptFinalizeKey = foreign.native( "ncrypt.dll", "int", "NCryptFinalizeKey", [ "ptr", "uint" ] ); 
Win32.NCryptEncrypt = foreign.native( "ncrypt.dll", "int", "NCryptEncrypt", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptDecrypt = foreign.native( "ncrypt.dll", "int", "NCryptDecrypt", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptImportKey = foreign.native( "ncrypt.dll", "int", "NCryptImportKey", [ "ptr", "ptr", "wstr", "ptr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.NCryptExportKey = foreign.native( "ncrypt.dll", "int", "NCryptExportKey", [ "ptr", "ptr", "wstr", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptSignHash = foreign.native( "ncrypt.dll", "int", "NCryptSignHash", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptVerifySignature = foreign.native( "ncrypt.dll", "int", "NCryptVerifySignature", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint", "uint" ] ); 
Win32.NCryptDeleteKey = foreign.native( "ncrypt.dll", "int", "NCryptDeleteKey", [ "ptr", "uint" ] ); 
Win32.NCryptFreeObject = foreign.native( "ncrypt.dll", "int", "NCryptFreeObject", [ "ptr" ] ); 
Win32.NCryptIsKeyHandle = foreign.native( "ncrypt.dll", "int", "NCryptIsKeyHandle", [ "ptr" ] ); 
Win32.NCryptTranslateHandle = foreign.native( "ncrypt.dll", "int", "NCryptTranslateHandle", [ "ptr", "ptr", "ptr", "ptr", "uint", "uint" ] ); 
Win32.NCryptNotifyChangeKey = foreign.native( "ncrypt.dll", "int", "NCryptNotifyChangeKey", [ "ptr", "ptr", "uint" ] ); 
Win32.NCryptSecretAgreement = foreign.native( "ncrypt.dll", "int", "NCryptSecretAgreement", [ "ptr", "ptr", "ptr", "uint" ] ); 
Win32.NCryptDeriveKey = foreign.native( "ncrypt.dll", "int", "NCryptDeriveKey", [ "ptr", "wstr", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptKeyDerivation = foreign.native( "ncrypt.dll", "int", "NCryptKeyDerivation", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptCreateClaim = foreign.native( "ncrypt.dll", "int", "NCryptCreateClaim", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.NCryptVerifyClaim = foreign.native( "ncrypt.dll", "int", "NCryptVerifyClaim", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptFormatObject = foreign.native( "CRYPT32.dll", "int", "CryptFormatObject", [ "uint", "uint", "uint", "ptr", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptEncodeObjectEx = foreign.native( "CRYPT32.dll", "int", "CryptEncodeObjectEx", [ "uint", "ptr", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptEncodeObject = foreign.native( "CRYPT32.dll", "int", "CryptEncodeObject", [ "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptDecodeObjectEx = foreign.native( "CRYPT32.dll", "int", "CryptDecodeObjectEx", [ "uint", "ptr", "ptr", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptDecodeObject = foreign.native( "CRYPT32.dll", "int", "CryptDecodeObject", [ "uint", "ptr", "ptr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptInstallOIDFunctionAddress = foreign.native( "CRYPT32.dll", "int", "CryptInstallOIDFunctionAddress", [ "ptr", "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptInitOIDFunctionSet = foreign.native( "CRYPT32.dll", "ptr", "CryptInitOIDFunctionSet", [ "ptr", "uint" ] ); 
Win32.CryptGetOIDFunctionAddress = foreign.native( "CRYPT32.dll", "int", "CryptGetOIDFunctionAddress", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptGetDefaultOIDDllList = foreign.native( "CRYPT32.dll", "int", "CryptGetDefaultOIDDllList", [ "ptr", "uint", "wstr", "ptr" ] ); 
Win32.CryptGetDefaultOIDFunctionAddress = foreign.native( "CRYPT32.dll", "int", "CryptGetDefaultOIDFunctionAddress", [ "ptr", "uint", "wstr", "uint", "ptr", "ptr" ] ); 
Win32.CryptFreeOIDFunctionAddress = foreign.native( "CRYPT32.dll", "int", "CryptFreeOIDFunctionAddress", [ "ptr", "uint" ] ); 
Win32.CryptRegisterOIDFunction = foreign.native( "CRYPT32.dll", "int", "CryptRegisterOIDFunction", [ "uint", "ptr", "ptr", "wstr", "ptr" ] ); 
Win32.CryptUnregisterOIDFunction = foreign.native( "CRYPT32.dll", "int", "CryptUnregisterOIDFunction", [ "uint", "ptr", "ptr" ] ); 
Win32.CryptRegisterDefaultOIDFunction = foreign.native( "CRYPT32.dll", "int", "CryptRegisterDefaultOIDFunction", [ "uint", "ptr", "uint", "wstr" ] ); 
Win32.CryptUnregisterDefaultOIDFunction = foreign.native( "CRYPT32.dll", "int", "CryptUnregisterDefaultOIDFunction", [ "uint", "ptr", "wstr" ] ); 
Win32.CryptSetOIDFunctionValue = foreign.native( "CRYPT32.dll", "int", "CryptSetOIDFunctionValue", [ "uint", "ptr", "ptr", "wstr", "uint", "ptr", "uint" ] ); 
Win32.CryptGetOIDFunctionValue = foreign.native( "CRYPT32.dll", "int", "CryptGetOIDFunctionValue", [ "uint", "ptr", "ptr", "wstr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptEnumOIDFunction = foreign.native( "CRYPT32.dll", "int", "CryptEnumOIDFunction", [ "uint", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptFindOIDInfo = foreign.native( "CRYPT32.dll", "ptr", "CryptFindOIDInfo", [ "uint", "ptr", "uint" ] ); 
Win32.CryptRegisterOIDInfo = foreign.native( "CRYPT32.dll", "int", "CryptRegisterOIDInfo", [ "ptr", "uint" ] ); 
Win32.CryptUnregisterOIDInfo = foreign.native( "CRYPT32.dll", "int", "CryptUnregisterOIDInfo", [ "ptr" ] ); 
Win32.CryptEnumOIDInfo = foreign.native( "CRYPT32.dll", "int", "CryptEnumOIDInfo", [ "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptFindLocalizedName = foreign.native( "CRYPT32.dll", "wstr", "CryptFindLocalizedName", [ "wstr" ] ); 
Win32.CryptMsgOpenToEncode = foreign.native( "CRYPT32.dll", "ptr", "CryptMsgOpenToEncode", [ "uint", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptMsgCalculateEncodedLength = foreign.native( "CRYPT32.dll", "uint", "CryptMsgCalculateEncodedLength", [ "uint", "uint", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptMsgOpenToDecode = foreign.native( "CRYPT32.dll", "ptr", "CryptMsgOpenToDecode", [ "uint", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptMsgDuplicate = foreign.native( "CRYPT32.dll", "ptr", "CryptMsgDuplicate", [ "ptr" ] ); 
Win32.CryptMsgClose = foreign.native( "CRYPT32.dll", "int", "CryptMsgClose", [ "ptr" ] ); 
Win32.CryptMsgUpdate = foreign.native( "CRYPT32.dll", "int", "CryptMsgUpdate", [ "ptr", "ptr", "uint", "int" ] ); 
Win32.CryptMsgGetParam = foreign.native( "CRYPT32.dll", "int", "CryptMsgGetParam", [ "ptr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptMsgControl = foreign.native( "CRYPT32.dll", "int", "CryptMsgControl", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CryptMsgVerifyCountersignatureEncoded = foreign.native( "CRYPT32.dll", "int", "CryptMsgVerifyCountersignatureEncoded", [ "ptr", "uint", "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CryptMsgVerifyCountersignatureEncodedEx = foreign.native( "CRYPT32.dll", "int", "CryptMsgVerifyCountersignatureEncodedEx", [ "ptr", "uint", "ptr", "uint", "ptr", "uint", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CryptMsgCountersign = foreign.native( "CRYPT32.dll", "int", "CryptMsgCountersign", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CryptMsgCountersignEncoded = foreign.native( "CRYPT32.dll", "int", "CryptMsgCountersignEncoded", [ "uint", "ptr", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CertOpenStore = foreign.native( "CRYPT32.dll", "ptr", "CertOpenStore", [ "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CertDuplicateStore = foreign.native( "CRYPT32.dll", "ptr", "CertDuplicateStore", [ "ptr" ] ); 
Win32.CertSaveStore = foreign.native( "CRYPT32.dll", "int", "CertSaveStore", [ "ptr", "uint", "uint", "uint", "ptr", "uint" ] ); 
Win32.CertCloseStore = foreign.native( "CRYPT32.dll", "int", "CertCloseStore", [ "ptr", "uint" ] ); 
Win32.CertGetSubjectCertificateFromStore = foreign.native( "CRYPT32.dll", "ptr", "CertGetSubjectCertificateFromStore", [ "ptr", "uint", "ptr" ] ); 
Win32.CertEnumCertificatesInStore = foreign.native( "CRYPT32.dll", "ptr", "CertEnumCertificatesInStore", [ "ptr", "ptr" ] ); 
Win32.CertFindCertificateInStore = foreign.native( "CRYPT32.dll", "ptr", "CertFindCertificateInStore", [ "ptr", "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CertGetIssuerCertificateFromStore = foreign.native( "CRYPT32.dll", "ptr", "CertGetIssuerCertificateFromStore", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertVerifySubjectCertificateContext = foreign.native( "CRYPT32.dll", "int", "CertVerifySubjectCertificateContext", [ "ptr", "ptr", "ptr" ] ); 
Win32.CertDuplicateCertificateContext = foreign.native( "CRYPT32.dll", "ptr", "CertDuplicateCertificateContext", [ "ptr" ] ); 
Win32.CertCreateCertificateContext = foreign.native( "CRYPT32.dll", "ptr", "CertCreateCertificateContext", [ "uint", "ptr", "uint" ] ); 
Win32.CertFreeCertificateContext = foreign.native( "CRYPT32.dll", "int", "CertFreeCertificateContext", [ "ptr" ] ); 
Win32.CertSetCertificateContextProperty = foreign.native( "CRYPT32.dll", "int", "CertSetCertificateContextProperty", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertGetCertificateContextProperty = foreign.native( "CRYPT32.dll", "int", "CertGetCertificateContextProperty", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertEnumCertificateContextProperties = foreign.native( "CRYPT32.dll", "uint", "CertEnumCertificateContextProperties", [ "ptr", "uint" ] ); 
Win32.CertCreateCTLEntryFromCertificateContextProperties = foreign.native( "CRYPT32.dll", "int", "CertCreateCTLEntryFromCertificateContextProperties", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CertSetCertificateContextPropertiesFromCTLEntry = foreign.native( "CRYPT32.dll", "int", "CertSetCertificateContextPropertiesFromCTLEntry", [ "ptr", "ptr", "uint" ] ); 
Win32.CertGetCRLFromStore = foreign.native( "CRYPT32.dll", "ptr", "CertGetCRLFromStore", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertEnumCRLsInStore = foreign.native( "CRYPT32.dll", "ptr", "CertEnumCRLsInStore", [ "ptr", "ptr" ] ); 
Win32.CertFindCRLInStore = foreign.native( "CRYPT32.dll", "ptr", "CertFindCRLInStore", [ "ptr", "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CertDuplicateCRLContext = foreign.native( "CRYPT32.dll", "ptr", "CertDuplicateCRLContext", [ "ptr" ] ); 
Win32.CertCreateCRLContext = foreign.native( "CRYPT32.dll", "ptr", "CertCreateCRLContext", [ "uint", "ptr", "uint" ] ); 
Win32.CertFreeCRLContext = foreign.native( "CRYPT32.dll", "int", "CertFreeCRLContext", [ "ptr" ] ); 
Win32.CertSetCRLContextProperty = foreign.native( "CRYPT32.dll", "int", "CertSetCRLContextProperty", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertGetCRLContextProperty = foreign.native( "CRYPT32.dll", "int", "CertGetCRLContextProperty", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertEnumCRLContextProperties = foreign.native( "CRYPT32.dll", "uint", "CertEnumCRLContextProperties", [ "ptr", "uint" ] ); 
Win32.CertFindCertificateInCRL = foreign.native( "CRYPT32.dll", "int", "CertFindCertificateInCRL", [ "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertIsValidCRLForCertificate = foreign.native( "CRYPT32.dll", "int", "CertIsValidCRLForCertificate", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertAddEncodedCertificateToStore = foreign.native( "CRYPT32.dll", "int", "CertAddEncodedCertificateToStore", [ "ptr", "uint", "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertAddCertificateContextToStore = foreign.native( "CRYPT32.dll", "int", "CertAddCertificateContextToStore", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertAddSerializedElementToStore = foreign.native( "CRYPT32.dll", "int", "CertAddSerializedElementToStore", [ "ptr", "ptr", "uint", "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CertDeleteCertificateFromStore = foreign.native( "CRYPT32.dll", "int", "CertDeleteCertificateFromStore", [ "ptr" ] ); 
Win32.CertAddEncodedCRLToStore = foreign.native( "CRYPT32.dll", "int", "CertAddEncodedCRLToStore", [ "ptr", "uint", "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertAddCRLContextToStore = foreign.native( "CRYPT32.dll", "int", "CertAddCRLContextToStore", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertDeleteCRLFromStore = foreign.native( "CRYPT32.dll", "int", "CertDeleteCRLFromStore", [ "ptr" ] ); 
Win32.CertSerializeCertificateStoreElement = foreign.native( "CRYPT32.dll", "int", "CertSerializeCertificateStoreElement", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertSerializeCRLStoreElement = foreign.native( "CRYPT32.dll", "int", "CertSerializeCRLStoreElement", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertDuplicateCTLContext = foreign.native( "CRYPT32.dll", "ptr", "CertDuplicateCTLContext", [ "ptr" ] ); 
Win32.CertCreateCTLContext = foreign.native( "CRYPT32.dll", "ptr", "CertCreateCTLContext", [ "uint", "ptr", "uint" ] ); 
Win32.CertFreeCTLContext = foreign.native( "CRYPT32.dll", "int", "CertFreeCTLContext", [ "ptr" ] ); 
Win32.CertSetCTLContextProperty = foreign.native( "CRYPT32.dll", "int", "CertSetCTLContextProperty", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertGetCTLContextProperty = foreign.native( "CRYPT32.dll", "int", "CertGetCTLContextProperty", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertEnumCTLContextProperties = foreign.native( "CRYPT32.dll", "uint", "CertEnumCTLContextProperties", [ "ptr", "uint" ] ); 
Win32.CertEnumCTLsInStore = foreign.native( "CRYPT32.dll", "ptr", "CertEnumCTLsInStore", [ "ptr", "ptr" ] ); 
Win32.CertFindSubjectInCTL = foreign.native( "CRYPT32.dll", "ptr", "CertFindSubjectInCTL", [ "uint", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CertFindCTLInStore = foreign.native( "CRYPT32.dll", "ptr", "CertFindCTLInStore", [ "ptr", "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CertAddEncodedCTLToStore = foreign.native( "CRYPT32.dll", "int", "CertAddEncodedCTLToStore", [ "ptr", "uint", "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertAddCTLContextToStore = foreign.native( "CRYPT32.dll", "int", "CertAddCTLContextToStore", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertSerializeCTLStoreElement = foreign.native( "CRYPT32.dll", "int", "CertSerializeCTLStoreElement", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertDeleteCTLFromStore = foreign.native( "CRYPT32.dll", "int", "CertDeleteCTLFromStore", [ "ptr" ] ); 
Win32.CertAddCertificateLinkToStore = foreign.native( "CRYPT32.dll", "int", "CertAddCertificateLinkToStore", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertAddCRLLinkToStore = foreign.native( "CRYPT32.dll", "int", "CertAddCRLLinkToStore", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertAddCTLLinkToStore = foreign.native( "CRYPT32.dll", "int", "CertAddCTLLinkToStore", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CertAddStoreToCollection = foreign.native( "CRYPT32.dll", "int", "CertAddStoreToCollection", [ "ptr", "ptr", "uint", "uint" ] ); 
Win32.CertRemoveStoreFromCollection = foreign.native( "CRYPT32.dll", "void", "CertRemoveStoreFromCollection", [ "ptr", "ptr" ] ); 
Win32.CertControlStore = foreign.native( "CRYPT32.dll", "int", "CertControlStore", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertSetStoreProperty = foreign.native( "CRYPT32.dll", "int", "CertSetStoreProperty", [ "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertGetStoreProperty = foreign.native( "CRYPT32.dll", "int", "CertGetStoreProperty", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertCreateContext = foreign.native( "CRYPT32.dll", "ptr", "CertCreateContext", [ "uint", "uint", "ptr", "uint", "uint", "ptr" ] ); 
Win32.CertRegisterSystemStore = foreign.native( "CRYPT32.dll", "int", "CertRegisterSystemStore", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertRegisterPhysicalStore = foreign.native( "CRYPT32.dll", "int", "CertRegisterPhysicalStore", [ "ptr", "uint", "wstr", "ptr", "ptr" ] ); 
Win32.CertUnregisterSystemStore = foreign.native( "CRYPT32.dll", "int", "CertUnregisterSystemStore", [ "ptr", "uint" ] ); 
Win32.CertUnregisterPhysicalStore = foreign.native( "CRYPT32.dll", "int", "CertUnregisterPhysicalStore", [ "ptr", "uint", "wstr" ] ); 
Win32.CertEnumSystemStoreLocation = foreign.native( "CRYPT32.dll", "int", "CertEnumSystemStoreLocation", [ "uint", "ptr", "ptr" ] ); 
Win32.CertEnumSystemStore = foreign.native( "CRYPT32.dll", "int", "CertEnumSystemStore", [ "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CertEnumPhysicalStore = foreign.native( "CRYPT32.dll", "int", "CertEnumPhysicalStore", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertGetEnhancedKeyUsage = foreign.native( "CRYPT32.dll", "int", "CertGetEnhancedKeyUsage", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertSetEnhancedKeyUsage = foreign.native( "CRYPT32.dll", "int", "CertSetEnhancedKeyUsage", [ "ptr", "ptr" ] ); 
Win32.CertAddEnhancedKeyUsageIdentifier = foreign.native( "CRYPT32.dll", "int", "CertAddEnhancedKeyUsageIdentifier", [ "ptr", "ptr" ] ); 
Win32.CertRemoveEnhancedKeyUsageIdentifier = foreign.native( "CRYPT32.dll", "int", "CertRemoveEnhancedKeyUsageIdentifier", [ "ptr", "ptr" ] ); 
Win32.CertGetValidUsages = foreign.native( "CRYPT32.dll", "int", "CertGetValidUsages", [ "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptMsgGetAndVerifySigner = foreign.native( "CRYPT32.dll", "int", "CryptMsgGetAndVerifySigner", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptMsgSignCTL = foreign.native( "CRYPT32.dll", "int", "CryptMsgSignCTL", [ "uint", "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptMsgEncodeAndSignCTL = foreign.native( "CRYPT32.dll", "int", "CryptMsgEncodeAndSignCTL", [ "uint", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertFindSubjectInSortedCTL = foreign.native( "CRYPT32.dll", "int", "CertFindSubjectInSortedCTL", [ "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertEnumSubjectInSortedCTL = foreign.native( "CRYPT32.dll", "int", "CertEnumSubjectInSortedCTL", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertVerifyCTLUsage = foreign.native( "CRYPT32.dll", "int", "CertVerifyCTLUsage", [ "uint", "uint", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertVerifyRevocation = foreign.native( "CRYPT32.dll", "int", "CertVerifyRevocation", [ "uint", "uint", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertCompareIntegerBlob = foreign.native( "CRYPT32.dll", "int", "CertCompareIntegerBlob", [ "ptr", "ptr" ] ); 
Win32.CertCompareCertificate = foreign.native( "CRYPT32.dll", "int", "CertCompareCertificate", [ "uint", "ptr", "ptr" ] ); 
Win32.CertCompareCertificateName = foreign.native( "CRYPT32.dll", "int", "CertCompareCertificateName", [ "uint", "ptr", "ptr" ] ); 
Win32.CertIsRDNAttrsInCertificateName = foreign.native( "CRYPT32.dll", "int", "CertIsRDNAttrsInCertificateName", [ "uint", "uint", "ptr", "ptr" ] ); 
Win32.CertComparePublicKeyInfo = foreign.native( "CRYPT32.dll", "int", "CertComparePublicKeyInfo", [ "uint", "ptr", "ptr" ] ); 
Win32.CertGetPublicKeyLength = foreign.native( "CRYPT32.dll", "uint", "CertGetPublicKeyLength", [ "uint", "ptr" ] ); 
Win32.CryptVerifyCertificateSignature = foreign.native( "CRYPT32.dll", "int", "CryptVerifyCertificateSignature", [ "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CryptVerifyCertificateSignatureEx = foreign.native( "CRYPT32.dll", "int", "CryptVerifyCertificateSignatureEx", [ "ptr", "uint", "uint", "ptr", "uint", "ptr", "uint", "ptr" ] ); 
Win32.CertIsStrongHashToSign = foreign.native( "CRYPT32.dll", "int", "CertIsStrongHashToSign", [ "ptr", "wstr", "ptr" ] ); 
Win32.CryptHashToBeSigned = foreign.native( "CRYPT32.dll", "int", "CryptHashToBeSigned", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptHashCertificate = foreign.native( "CRYPT32.dll", "int", "CryptHashCertificate", [ "ptr", "uint", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptHashCertificate2 = foreign.native( "CRYPT32.dll", "int", "CryptHashCertificate2", [ "wstr", "uint", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptSignCertificate = foreign.native( "CRYPT32.dll", "int", "CryptSignCertificate", [ "ptr", "uint", "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptSignAndEncodeCertificate = foreign.native( "CRYPT32.dll", "int", "CryptSignAndEncodeCertificate", [ "ptr", "uint", "uint", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertVerifyTimeValidity = foreign.native( "CRYPT32.dll", "int", "CertVerifyTimeValidity", [ "ptr", "ptr" ] ); 
Win32.CertVerifyCRLTimeValidity = foreign.native( "CRYPT32.dll", "int", "CertVerifyCRLTimeValidity", [ "ptr", "ptr" ] ); 
Win32.CertVerifyValidityNesting = foreign.native( "CRYPT32.dll", "int", "CertVerifyValidityNesting", [ "ptr", "ptr" ] ); 
Win32.CertVerifyCRLRevocation = foreign.native( "CRYPT32.dll", "int", "CertVerifyCRLRevocation", [ "uint", "ptr", "uint", "ptr" ] ); 
Win32.CertAlgIdToOID = foreign.native( "CRYPT32.dll", "ptr", "CertAlgIdToOID", [ "uint" ] ); 
Win32.CertOIDToAlgId = foreign.native( "CRYPT32.dll", "uint", "CertOIDToAlgId", [ "ptr" ] ); 
Win32.CertFindExtension = foreign.native( "CRYPT32.dll", "ptr", "CertFindExtension", [ "ptr", "uint", "ptr" ] ); 
Win32.CertFindAttribute = foreign.native( "CRYPT32.dll", "ptr", "CertFindAttribute", [ "ptr", "uint", "ptr" ] ); 
Win32.CertFindRDNAttr = foreign.native( "CRYPT32.dll", "ptr", "CertFindRDNAttr", [ "ptr", "ptr" ] ); 
Win32.CertGetIntendedKeyUsage = foreign.native( "CRYPT32.dll", "int", "CertGetIntendedKeyUsage", [ "uint", "ptr", "ptr", "uint" ] ); 
Win32.CryptInstallDefaultContext = foreign.native( "CRYPT32.dll", "int", "CryptInstallDefaultContext", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptUninstallDefaultContext = foreign.native( "CRYPT32.dll", "int", "CryptUninstallDefaultContext", [ "ptr", "uint", "ptr" ] ); 
Win32.CryptExportPublicKeyInfo = foreign.native( "CRYPT32.dll", "int", "CryptExportPublicKeyInfo", [ "ptr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptExportPublicKeyInfoEx = foreign.native( "CRYPT32.dll", "int", "CryptExportPublicKeyInfoEx", [ "ptr", "uint", "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptExportPublicKeyInfoFromBCryptKeyHandle = foreign.native( "CRYPT32.dll", "int", "CryptExportPublicKeyInfoFromBCryptKeyHandle", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptImportPublicKeyInfo = foreign.native( "CRYPT32.dll", "int", "CryptImportPublicKeyInfo", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptImportPublicKeyInfoEx = foreign.native( "CRYPT32.dll", "int", "CryptImportPublicKeyInfoEx", [ "ptr", "uint", "ptr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptImportPublicKeyInfoEx2 = foreign.native( "CRYPT32.dll", "int", "CryptImportPublicKeyInfoEx2", [ "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptAcquireCertificatePrivateKey = foreign.native( "CRYPT32.dll", "int", "CryptAcquireCertificatePrivateKey", [ "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptFindCertificateKeyProvInfo = foreign.native( "CRYPT32.dll", "int", "CryptFindCertificateKeyProvInfo", [ "ptr", "uint", "ptr" ] ); 
Win32.CryptImportPKCS8 = foreign.native( "CRYPT32.dll", "int", "CryptImportPKCS8", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptExportPKCS8 = foreign.native( "CRYPT32.dll", "int", "CryptExportPKCS8", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptHashPublicKeyInfo = foreign.native( "CRYPT32.dll", "int", "CryptHashPublicKeyInfo", [ "ptr", "uint", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CertRDNValueToStrA = foreign.native( "CRYPT32.dll", "uint", "CertRDNValueToStrA", [ "uint", "ptr", "ptr", "uint" ] ); 
Win32.CertRDNValueToStrW = foreign.native( "CRYPT32.dll", "uint", "CertRDNValueToStrW", [ "uint", "ptr", "wstr", "uint" ] ); 
Win32.CertNameToStrA = foreign.native( "CRYPT32.dll", "uint", "CertNameToStrA", [ "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.CertNameToStrW = foreign.native( "CRYPT32.dll", "uint", "CertNameToStrW", [ "uint", "ptr", "uint", "wstr", "uint" ] ); 
Win32.CertStrToNameA = foreign.native( "CRYPT32.dll", "int", "CertStrToNameA", [ "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertStrToNameW = foreign.native( "CRYPT32.dll", "int", "CertStrToNameW", [ "uint", "wstr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertGetNameStringA = foreign.native( "CRYPT32.dll", "uint", "CertGetNameStringA", [ "ptr", "uint", "uint", "ptr", "ptr", "uint" ] ); 
Win32.CertGetNameStringW = foreign.native( "CRYPT32.dll", "uint", "CertGetNameStringW", [ "ptr", "uint", "uint", "ptr", "wstr", "uint" ] ); 
Win32.CryptSignMessage = foreign.native( "CRYPT32.dll", "int", "CryptSignMessage", [ "ptr", "int", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptVerifyMessageSignature = foreign.native( "CRYPT32.dll", "int", "CryptVerifyMessageSignature", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptGetMessageSignerCount = foreign.native( "CRYPT32.dll", "int", "CryptGetMessageSignerCount", [ "uint", "ptr", "uint" ] ); 
Win32.CryptGetMessageCertificates = foreign.native( "CRYPT32.dll", "ptr", "CryptGetMessageCertificates", [ "uint", "ptr", "uint", "ptr", "uint" ] ); 
Win32.CryptVerifyDetachedMessageSignature = foreign.native( "CRYPT32.dll", "int", "CryptVerifyDetachedMessageSignature", [ "ptr", "uint", "ptr", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptEncryptMessage = foreign.native( "CRYPT32.dll", "int", "CryptEncryptMessage", [ "ptr", "uint", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptDecryptMessage = foreign.native( "CRYPT32.dll", "int", "CryptDecryptMessage", [ "ptr", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptSignAndEncryptMessage = foreign.native( "CRYPT32.dll", "int", "CryptSignAndEncryptMessage", [ "ptr", "ptr", "uint", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptDecryptAndVerifyMessageSignature = foreign.native( "CRYPT32.dll", "int", "CryptDecryptAndVerifyMessageSignature", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptDecodeMessage = foreign.native( "CRYPT32.dll", "int", "CryptDecodeMessage", [ "uint", "ptr", "ptr", "uint", "ptr", "uint", "uint", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptHashMessage = foreign.native( "CRYPT32.dll", "int", "CryptHashMessage", [ "ptr", "int", "uint", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptVerifyMessageHash = foreign.native( "CRYPT32.dll", "int", "CryptVerifyMessageHash", [ "ptr", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptVerifyDetachedMessageHash = foreign.native( "CRYPT32.dll", "int", "CryptVerifyDetachedMessageHash", [ "ptr", "ptr", "uint", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptSignMessageWithKey = foreign.native( "CRYPT32.dll", "int", "CryptSignMessageWithKey", [ "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptVerifyMessageSignatureWithKey = foreign.native( "CRYPT32.dll", "int", "CryptVerifyMessageSignatureWithKey", [ "ptr", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertOpenSystemStoreA = foreign.native( "CRYPT32.dll", "ptr", "CertOpenSystemStoreA", [ "ptr", "ptr" ] ); 
Win32.CertOpenSystemStoreW = foreign.native( "CRYPT32.dll", "ptr", "CertOpenSystemStoreW", [ "ptr", "wstr" ] ); 
Win32.CertAddEncodedCertificateToSystemStoreA = foreign.native( "CRYPT32.dll", "int", "CertAddEncodedCertificateToSystemStoreA", [ "ptr", "ptr", "uint" ] ); 
Win32.CertAddEncodedCertificateToSystemStoreW = foreign.native( "CRYPT32.dll", "int", "CertAddEncodedCertificateToSystemStoreW", [ "wstr", "ptr", "uint" ] ); 
Win32.FindCertsByIssuer = foreign.native( "WINTRUST.dll", "int", "FindCertsByIssuer", [ "ptr", "ptr", "ptr", "ptr", "uint", "wstr", "uint" ] ); 
Win32.CryptQueryObject = foreign.native( "CRYPT32.dll", "int", "CryptQueryObject", [ "uint", "ptr", "uint", "uint", "uint", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptMemAlloc = foreign.native( "CRYPT32.dll", "ptr", "CryptMemAlloc", [ "uint" ] ); 
Win32.CryptMemRealloc = foreign.native( "CRYPT32.dll", "ptr", "CryptMemRealloc", [ "ptr", "uint" ] ); 
Win32.CryptMemFree = foreign.native( "CRYPT32.dll", "void", "CryptMemFree", [ "ptr" ] ); 
Win32.CryptCreateAsyncHandle = foreign.native( "CRYPT32.dll", "int", "CryptCreateAsyncHandle", [ "uint", "ptr" ] ); 
Win32.CryptSetAsyncParam = foreign.native( "CRYPT32.dll", "int", "CryptSetAsyncParam", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptGetAsyncParam = foreign.native( "CRYPT32.dll", "int", "CryptGetAsyncParam", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptCloseAsyncHandle = foreign.native( "CRYPT32.dll", "int", "CryptCloseAsyncHandle", [ "ptr" ] ); 
Win32.CryptRetrieveObjectByUrlA = foreign.native( "CRYPTNET.dll", "int", "CryptRetrieveObjectByUrlA", [ "ptr", "ptr", "uint", "uint", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptRetrieveObjectByUrlW = foreign.native( "CRYPTNET.dll", "int", "CryptRetrieveObjectByUrlW", [ "wstr", "ptr", "uint", "uint", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptInstallCancelRetrieval = foreign.native( "CRYPTNET.dll", "int", "CryptInstallCancelRetrieval", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CryptUninstallCancelRetrieval = foreign.native( "CRYPTNET.dll", "int", "CryptUninstallCancelRetrieval", [ "uint", "ptr" ] ); 
Win32.CryptGetObjectUrl = foreign.native( "CRYPTNET.dll", "int", "CryptGetObjectUrl", [ "ptr", "ptr", "uint", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertCreateSelfSignCertificate = foreign.native( "CRYPT32.dll", "ptr", "CertCreateSelfSignCertificate", [ "ptr", "ptr", "uint", "ptr", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptGetKeyIdentifierProperty = foreign.native( "CRYPT32.dll", "int", "CryptGetKeyIdentifierProperty", [ "ptr", "uint", "uint", "wstr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptSetKeyIdentifierProperty = foreign.native( "CRYPT32.dll", "int", "CryptSetKeyIdentifierProperty", [ "ptr", "uint", "uint", "wstr", "ptr", "ptr" ] ); 
Win32.CryptEnumKeyIdentifierProperties = foreign.native( "CRYPT32.dll", "int", "CryptEnumKeyIdentifierProperties", [ "ptr", "uint", "uint", "wstr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptCreateKeyIdentifierFromCSP = foreign.native( "CRYPT32.dll", "int", "CryptCreateKeyIdentifierFromCSP", [ "uint", "ptr", "ptr", "uint", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CertCreateCertificateChainEngine = foreign.native( "CRYPT32.dll", "int", "CertCreateCertificateChainEngine", [ "ptr", "ptr" ] ); 
Win32.CertFreeCertificateChainEngine = foreign.native( "CRYPT32.dll", "void", "CertFreeCertificateChainEngine", [ "ptr" ] ); 
Win32.CertResyncCertificateChainEngine = foreign.native( "CRYPT32.dll", "int", "CertResyncCertificateChainEngine", [ "ptr" ] ); 
Win32.CertGetCertificateChain = foreign.native( "CRYPT32.dll", "int", "CertGetCertificateChain", [ "ptr", "ptr", "ptr", "ptr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CertFreeCertificateChain = foreign.native( "CRYPT32.dll", "void", "CertFreeCertificateChain", [ "ptr" ] ); 
Win32.CertDuplicateCertificateChain = foreign.native( "CRYPT32.dll", "ptr", "CertDuplicateCertificateChain", [ "ptr" ] ); 
Win32.CertFindChainInStore = foreign.native( "CRYPT32.dll", "ptr", "CertFindChainInStore", [ "ptr", "uint", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CertVerifyCertificateChainPolicy = foreign.native( "CRYPT32.dll", "int", "CertVerifyCertificateChainPolicy", [ "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptStringToBinaryA = foreign.native( "CRYPT32.dll", "int", "CryptStringToBinaryA", [ "ptr", "uint", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptStringToBinaryW = foreign.native( "CRYPT32.dll", "int", "CryptStringToBinaryW", [ "wstr", "uint", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CryptBinaryToStringA = foreign.native( "CRYPT32.dll", "int", "CryptBinaryToStringA", [ "ptr", "uint", "uint", "ptr", "ptr" ] ); 
Win32.CryptBinaryToStringW = foreign.native( "CRYPT32.dll", "int", "CryptBinaryToStringW", [ "ptr", "uint", "uint", "wstr", "ptr" ] ); 
Win32.PFXImportCertStore = foreign.native( "CRYPT32.dll", "ptr", "PFXImportCertStore", [ "ptr", "wstr", "uint" ] ); 
Win32.PFXIsPFXBlob = foreign.native( "CRYPT32.dll", "int", "PFXIsPFXBlob", [ "ptr" ] ); 
Win32.PFXVerifyPassword = foreign.native( "CRYPT32.dll", "int", "PFXVerifyPassword", [ "ptr", "wstr", "uint" ] ); 
Win32.PFXExportCertStoreEx = foreign.native( "CRYPT32.dll", "int", "PFXExportCertStoreEx", [ "ptr", "ptr", "wstr", "ptr", "uint" ] ); 
Win32.PFXExportCertStore = foreign.native( "CRYPT32.dll", "int", "PFXExportCertStore", [ "ptr", "ptr", "wstr", "uint" ] ); 
Win32.CertOpenServerOcspResponse = foreign.native( "CRYPT32.dll", "ptr", "CertOpenServerOcspResponse", [ "ptr", "uint", "ptr" ] ); 
Win32.CertAddRefServerOcspResponse = foreign.native( "CRYPT32.dll", "void", "CertAddRefServerOcspResponse", [ "ptr" ] ); 
Win32.CertCloseServerOcspResponse = foreign.native( "CRYPT32.dll", "void", "CertCloseServerOcspResponse", [ "ptr", "uint" ] ); 
Win32.CertGetServerOcspResponseContext = foreign.native( "CRYPT32.dll", "ptr", "CertGetServerOcspResponseContext", [ "ptr", "uint", "ptr" ] ); 
Win32.CertAddRefServerOcspResponseContext = foreign.native( "CRYPT32.dll", "void", "CertAddRefServerOcspResponseContext", [ "ptr" ] ); 
Win32.CertFreeServerOcspResponseContext = foreign.native( "CRYPT32.dll", "void", "CertFreeServerOcspResponseContext", [ "ptr" ] ); 
Win32.CertRetrieveLogoOrBiometricInfo = foreign.native( "CRYPT32.dll", "int", "CertRetrieveLogoOrBiometricInfo", [ "ptr", "ptr", "uint", "uint", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertSelectCertificateChains = foreign.native( "CRYPT32.dll", "int", "CertSelectCertificateChains", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertFreeCertificateChainList = foreign.native( "CRYPT32.dll", "void", "CertFreeCertificateChainList", [ "ptr" ] ); 
Win32.CryptRetrieveTimeStamp = foreign.native( "CRYPT32.dll", "int", "CryptRetrieveTimeStamp", [ "wstr", "uint", "uint", "ptr", "ptr", "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.CryptVerifyTimeStampSignature = foreign.native( "CRYPT32.dll", "int", "CryptVerifyTimeStampSignature", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.CertIsWeakHash = foreign.native( "CRYPT32.dll", "int", "CertIsWeakHash", [ "uint", "wstr", "uint", "ptr", "ptr", "wstr" ] ); 
Win32.CryptProtectData = foreign.native( "CRYPT32.dll", "int", "CryptProtectData", [ "ptr", "wstr", "ptr", "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CryptUnprotectData = foreign.native( "CRYPT32.dll", "int", "CryptUnprotectData", [ "ptr", "ptr", "ptr", "ptr", "ptr", "uint", "ptr" ] ); 
Win32.CryptUpdateProtectedState = foreign.native( "CRYPT32.dll", "int", "CryptUpdateProtectedState", [ "ptr", "wstr", "uint", "ptr", "ptr" ] ); 
Win32.CryptProtectMemory = foreign.native( "CRYPT32.dll", "int", "CryptProtectMemory", [ "ptr", "uint", "uint" ] ); 
Win32.CryptUnprotectMemory = foreign.native( "CRYPT32.dll", "int", "CryptUnprotectMemory", [ "ptr", "uint", "uint" ] ); 
Win32.NCryptRegisterProtectionDescriptorName = foreign.native( "ncrypt.dll", "int", "NCryptRegisterProtectionDescriptorName", [ "wstr", "wstr", "uint" ] ); 
Win32.NCryptQueryProtectionDescriptorName = foreign.native( "ncrypt.dll", "int", "NCryptQueryProtectionDescriptorName", [ "wstr", "wstr", "ptr", "uint" ] ); 
Win32.NCryptCreateProtectionDescriptor = foreign.native( "ncrypt.dll", "int", "NCryptCreateProtectionDescriptor", [ "wstr", "uint", "ptr" ] ); 
Win32.NCryptCloseProtectionDescriptor = foreign.native( "ncrypt.dll", "int", "NCryptCloseProtectionDescriptor", [ "ptr" ] ); 
Win32.NCryptGetProtectionDescriptorInfo = foreign.native( "ncrypt.dll", "int", "NCryptGetProtectionDescriptorInfo", [ "ptr", "ptr", "uint", "ptr" ] ); 
Win32.NCryptProtectSecret = foreign.native( "ncrypt.dll", "int", "NCryptProtectSecret", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.NCryptUnprotectSecret = foreign.native( "ncrypt.dll", "int", "NCryptUnprotectSecret", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr", "ptr" ] ); 
Win32.NCryptStreamOpenToProtect = foreign.native( "ncrypt.dll", "int", "NCryptStreamOpenToProtect", [ "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.NCryptStreamOpenToUnprotect = foreign.native( "ncrypt.dll", "int", "NCryptStreamOpenToUnprotect", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.NCryptStreamOpenToUnprotectEx = foreign.native( "ncrypt.dll", "int", "NCryptStreamOpenToUnprotectEx", [ "ptr", "uint", "ptr", "ptr" ] ); 
Win32.NCryptStreamUpdate = foreign.native( "ncrypt.dll", "int", "NCryptStreamUpdate", [ "ptr", "ptr", "ptr", "int" ] ); 
Win32.NCryptStreamClose = foreign.native( "ncrypt.dll", "int", "NCryptStreamClose", [ "ptr" ] ); 
Win32.CryptXmlClose = foreign.native( "CRYPTXML.dll", "int", "CryptXmlClose", [ "ptr" ] ); 
Win32.CryptXmlGetTransforms = foreign.native( "CRYPTXML.dll", "int", "CryptXmlGetTransforms", [ "ptr" ] ); 
Win32.CryptXmlOpenToEncode = foreign.native( "CRYPTXML.dll", "int", "CryptXmlOpenToEncode", [ "ptr", "uint", "wstr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptXmlOpenToDecode = foreign.native( "CRYPTXML.dll", "int", "CryptXmlOpenToDecode", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptXmlAddObject = foreign.native( "CRYPTXML.dll", "int", "CryptXmlAddObject", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptXmlCreateReference = foreign.native( "CRYPTXML.dll", "int", "CryptXmlCreateReference", [ "ptr", "uint", "wstr", "wstr", "wstr", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptXmlDigestReference = foreign.native( "CRYPTXML.dll", "int", "CryptXmlDigestReference", [ "ptr", "uint", "ptr" ] ); 
Win32.CryptXmlSetHMACSecret = foreign.native( "CRYPTXML.dll", "int", "CryptXmlSetHMACSecret", [ "ptr", "ptr", "uint" ] ); 
Win32.CryptXmlSign = foreign.native( "CRYPTXML.dll", "int", "CryptXmlSign", [ "ptr", "ptr", "uint", "uint", "int", "ptr", "ptr", "ptr" ] ); 
Win32.CryptXmlImportPublicKey = foreign.native( "CRYPTXML.dll", "int", "CryptXmlImportPublicKey", [ "uint", "ptr", "ptr" ] ); 
Win32.CryptXmlVerifySignature = foreign.native( "CRYPTXML.dll", "int", "CryptXmlVerifySignature", [ "ptr", "ptr", "uint" ] ); 
Win32.CryptXmlGetDocContext = foreign.native( "CRYPTXML.dll", "int", "CryptXmlGetDocContext", [ "ptr", "ptr" ] ); 
Win32.CryptXmlGetSignature = foreign.native( "CRYPTXML.dll", "int", "CryptXmlGetSignature", [ "ptr", "ptr" ] ); 
Win32.CryptXmlGetReference = foreign.native( "CRYPTXML.dll", "int", "CryptXmlGetReference", [ "ptr", "ptr" ] ); 
Win32.CryptXmlGetStatus = foreign.native( "CRYPTXML.dll", "int", "CryptXmlGetStatus", [ "ptr", "ptr" ] ); 
Win32.CryptXmlEncode = foreign.native( "CRYPTXML.dll", "int", "CryptXmlEncode", [ "ptr", "int", "ptr", "uint", "ptr", "ptr" ] ); 
Win32.CryptXmlGetAlgorithmInfo = foreign.native( "CRYPTXML.dll", "int", "CryptXmlGetAlgorithmInfo", [ "ptr", "uint", "ptr" ] ); 
Win32.CryptXmlFindAlgorithmInfo = foreign.native( "CRYPTXML.dll", "ptr", "CryptXmlFindAlgorithmInfo", [ "uint", "ptr", "uint", "uint" ] ); 
Win32.CryptXmlEnumAlgorithmInfo = foreign.native( "CRYPTXML.dll", "int", "CryptXmlEnumAlgorithmInfo", [ "uint", "uint", "ptr", "ptr" ] ); 
Win32.GetToken = foreign.native( "infocardapi.dll", "int", "GetToken", [ "uint", "ptr", "ptr", "ptr" ] ); 
Win32.ManageCardSpace = foreign.native( "infocardapi.dll", "int", "ManageCardSpace", [  ] ); 
Win32.ImportInformationCard = foreign.native( "infocardapi.dll", "int", "ImportInformationCard", [ "wstr" ] ); 
Win32.Encrypt = foreign.native( "infocardapi.dll", "int", "Encrypt", [ "ptr", "int", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.Decrypt = foreign.native( "infocardapi.dll", "int", "Decrypt", [ "ptr", "int", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.SignHash = foreign.native( "infocardapi.dll", "int", "SignHash", [ "ptr", "uint", "ptr", "wstr", "ptr", "ptr" ] ); 
Win32.VerifyHash = foreign.native( "infocardapi.dll", "int", "VerifyHash", [ "ptr", "uint", "ptr", "wstr", "uint", "ptr", "ptr" ] ); 
Win32.GetCryptoTransform = foreign.native( "infocardapi.dll", "int", "GetCryptoTransform", [ "ptr", "uint", "int", "uint", "int", "uint", "ptr", "ptr" ] ); 
Win32.GetKeyedHash = foreign.native( "infocardapi.dll", "int", "GetKeyedHash", [ "ptr", "ptr" ] ); 
Win32.TransformBlock = foreign.native( "infocardapi.dll", "int", "TransformBlock", [ "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.TransformFinalBlock = foreign.native( "infocardapi.dll", "int", "TransformFinalBlock", [ "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.HashCore = foreign.native( "infocardapi.dll", "int", "HashCore", [ "ptr", "uint", "ptr" ] ); 
Win32.HashFinal = foreign.native( "infocardapi.dll", "int", "HashFinal", [ "ptr", "uint", "ptr", "ptr", "ptr" ] ); 
Win32.FreeToken = foreign.native( "infocardapi.dll", "int", "FreeToken", [ "ptr" ] ); 
Win32.CloseCryptoHandle = foreign.native( "infocardapi.dll", "int", "CloseCryptoHandle", [ "ptr" ] ); 
Win32.GenerateDerivedKey = foreign.native( "infocardapi.dll", "int", "GenerateDerivedKey", [ "ptr", "uint", "ptr", "uint", "ptr", "uint", "uint", "wstr", "ptr", "ptr" ] ); 
Win32.GetBrowserToken = foreign.native( "infocardapi.dll", "int", "GetBrowserToken", [ "uint", "ptr", "ptr", "ptr" ] ); 
Win32.PFN_NCRYPT_ALLOC = foreign.callback( "ptr", [ "ptr"] );
Win32.PFN_NCRYPT_FREE = foreign.callback( "void", [ "ptr"] );
Win32.PCRYPT_DECRYPT_PRIVATE_KEY_FUNC = foreign.callback( "int", [ "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC = foreign.callback( "int", [ "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PCRYPT_RESOLVE_HCRYPTPROV_FUNC = foreign.callback( "int", [ "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_ALLOC = foreign.callback( "ptr", [ "ptr"] );
Win32.PFN_CRYPT_FREE = foreign.callback( "void", [ "ptr"] );
Win32.PFN_CRYPT_ENUM_OID_FUNC = foreign.callback( "int", [ "uint", "ptr", "ptr", "uint", "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_ENUM_OID_INFO = foreign.callback( "int", [ "ptr", "ptr"] );
Win32.PFN_CMSG_STREAM_OUTPUT = foreign.callback( "int", [ "ptr", "ptr", "uint", "int"] );
Win32.PFN_CMSG_ALLOC = foreign.callback( "ptr", [ "ptr"] );
Win32.PFN_CMSG_FREE = foreign.callback( "void", [ "ptr"] );
Win32.PFN_CMSG_GEN_ENCRYPT_KEY = foreign.callback( "int", [ "ptr", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PFN_CMSG_EXPORT_ENCRYPT_KEY = foreign.callback( "int", [ "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PFN_CMSG_IMPORT_ENCRYPT_KEY = foreign.callback( "int", [ "ptr", "uint", "ptr", "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY = foreign.callback( "int", [ "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_EXPORT_KEY_TRANS = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_EXPORT_KEY_AGREE = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_EXPORT_MAIL_LIST = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_IMPORT_KEY_TRANS = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CMSG_IMPORT_KEY_AGREE = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CMSG_IMPORT_MAIL_LIST = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CMSG_CNG_IMPORT_KEY_TRANS = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_CNG_IMPORT_KEY_AGREE = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY = foreign.callback( "int", [ "ptr", "uint", "ptr"] );
Win32.PFN_CERT_DLL_OPEN_STORE_PROV_FUNC = foreign.callback( "int", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CERT_STORE_PROV_CLOSE = foreign.callback( "void", [ "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_READ_CERT = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_WRITE_CERT = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_DELETE_CERT = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_SET_CERT_PROPERTY = foreign.callback( "int", [ "ptr", "ptr", "uint", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_READ_CRL = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_WRITE_CRL = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_DELETE_CRL = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_SET_CRL_PROPERTY = foreign.callback( "int", [ "ptr", "ptr", "uint", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_READ_CTL = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_WRITE_CTL = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_DELETE_CTL = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_SET_CTL_PROPERTY = foreign.callback( "int", [ "ptr", "ptr", "uint", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_CONTROL = foreign.callback( "int", [ "ptr", "uint", "uint", "ptr"] );
Win32.PFN_CERT_STORE_PROV_FIND_CERT = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_STORE_PROV_FREE_FIND_CERT = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_GET_CERT_PROPERTY = foreign.callback( "int", [ "ptr", "ptr", "uint", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_STORE_PROV_FIND_CRL = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_STORE_PROV_FREE_FIND_CRL = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_GET_CRL_PROPERTY = foreign.callback( "int", [ "ptr", "ptr", "uint", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_STORE_PROV_FIND_CTL = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_STORE_PROV_FREE_FIND_CTL = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint"] );
Win32.PFN_CERT_STORE_PROV_GET_CTL_PROPERTY = foreign.callback( "int", [ "ptr", "ptr", "uint", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_CREATE_CONTEXT_SORT_FUNC = foreign.callback( "int", [ "uint", "uint", "uint", "ptr"] );
Win32.PFN_CERT_ENUM_SYSTEM_STORE_LOCATION = foreign.callback( "int", [ "wstr", "uint", "ptr", "ptr"] );
Win32.PFN_CERT_ENUM_SYSTEM_STORE = foreign.callback( "int", [ "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CERT_ENUM_PHYSICAL_STORE = foreign.callback( "int", [ "ptr", "uint", "wstr", "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC = foreign.callback( "int", [ "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC = foreign.callback( "int", [ "ptr", "uint", "ptr", "ptr", "wstr", "wstr", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC = foreign.callback( "int", [ "uint", "ptr", "ptr", "ptr", "wstr", "wstr", "ptr", "uint", "ptr", "uint"] );
Win32.PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC = foreign.callback( "int", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC = foreign.callback( "int", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC = foreign.callback( "int", [ "uint", "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_IMPORT_PRIV_KEY_FUNC = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_EXPORT_PRIV_KEY_FUNC = foreign.callback( "int", [ "ptr", "uint", "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_GET_SIGNER_CERTIFICATE = foreign.callback( "ptr", [ "ptr", "uint", "ptr", "ptr"] );
Win32.PFN_CRYPT_ASYNC_PARAM_FREE_FUNC = foreign.callback( "void", [ "ptr", "ptr"] );
Win32.PFN_FREE_ENCODED_OBJECT_FUNC = foreign.callback( "void", [ "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_CANCEL_RETRIEVAL = foreign.callback( "int", [ "uint", "ptr"] );
Win32.PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC = foreign.callback( "void", [ "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CANCEL_ASYNC_RETRIEVAL_FUNC = foreign.callback( "int", [ "ptr"] );
Win32.PFN_CRYPT_ENUM_KEYID_PROP = foreign.callback( "int", [ "ptr", "uint", "ptr", "ptr", "uint", "ptr", "ptr", "ptr"] );
Win32.PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK = foreign.callback( "int", [ "ptr", "ptr"] );
Win32.PFN_CERT_SERVER_OCSP_RESPONSE_UPDATE_CALLBACK = foreign.callback( "void", [ "ptr", "ptr", "ptr", "ptr", "ptr", "uint"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FLUSH = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_GET = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_RELEASE = foreign.callback( "void", [ "uint", "ptr"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_PASSWORD = foreign.callback( "void", [ "ptr", "wstr"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE = foreign.callback( "void", [ "ptr", "ptr"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_FREE_IDENTIFIER = foreign.callback( "void", [ "ptr", "ptr"] );
Win32.PFN_CRYPT_OBJECT_LOCATOR_PROVIDER_INITIALIZE = foreign.callback( "int", [ "ptr", "ptr", "ptr", "ptr", "ptr"] );
Win32.PFN_CERT_IS_WEAK_HASH = foreign.callback( "int", [ "uint", "wstr", "uint", "ptr", "ptr", "wstr"] );
Win32.PFNCryptStreamOutputCallback = foreign.callback( "int", [ "ptr", "ptr", "ptr", "int"] );
Win32.PFNCryptStreamOutputCallbackEx = foreign.callback( "int", [ "ptr", "ptr", "ptr", "ptr", "int"] );
Win32.PFN_CRYPT_XML_WRITE_CALLBACK = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.PFN_CRYPT_XML_DATA_PROVIDER_READ = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr"] );
Win32.PFN_CRYPT_XML_DATA_PROVIDER_CLOSE = foreign.callback( "int", [ "ptr"] );
Win32.PFN_CRYPT_XML_CREATE_TRANSFORM = foreign.callback( "int", [ "ptr", "ptr", "ptr"] );
Win32.PFN_CRYPT_XML_ENUM_ALG_INFO = foreign.callback( "int", [ "ptr", "ptr"] );
Win32.CryptXmlDllGetInterface = foreign.callback( "int", [ "uint", "ptr", "ptr"] );
Win32.CryptXmlDllEncodeAlgorithm = foreign.callback( "int", [ "ptr", "int", "ptr", "ptr"] );
Win32.CryptXmlDllCreateDigest = foreign.callback( "int", [ "ptr", "ptr", "ptr"] );
Win32.CryptXmlDllDigestData = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.CryptXmlDllFinalizeDigest = foreign.callback( "int", [ "ptr", "ptr", "uint"] );
Win32.CryptXmlDllCloseDigest = foreign.callback( "int", [ "ptr"] );
Win32.CryptXmlDllSignData = foreign.callback( "int", [ "ptr", "ptr", "uint", "ptr", "uint", "ptr", "uint", "ptr"] );
Win32.CryptXmlDllVerifySignature = foreign.callback( "int", [ "ptr", "ptr", "ptr", "uint", "ptr", "uint"] );
Win32.CryptXmlDllGetAlgorithmInfo = foreign.callback( "int", [ "ptr", "ptr"] );
Win32.CryptXmlDllEncodeKeyValue = foreign.callback( "int", [ "ptr", "int", "ptr", "ptr"] );
Win32.CryptXmlDllCreateKey = foreign.callback( "int", [ "ptr", "ptr"] );

}

