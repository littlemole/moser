// load libgio-2.0.so.0: 140398126092288
// load libgobject-2.0.so.0: 140398136053760
// load libglib-2.0.so.0: 140398128029696
// load libgobject-2.0.so.0: 140398136053760
// load libgtk-4.so.1: 140398114635776
// load libgtk-4.so.1: 140398114635776
// load libgtksourceview-5.so.0: 140398101471232
// load libwebkitgtk-6.0.so.4: 140397993000960
// load libjavascriptcoregtk-6.0.so.1: 140397965737984
// load libjavascriptcoregtk-6.0.so.1: 140397965737984
// namespace Gtk
// libs libgtk-4.so.1
extern from "libgtk-4.so.1" {
ptr gtk_at_context_create(int, ptr, ptr);
ptr gtk_at_context_get_accessible(ptr);
int gtk_at_context_get_accessible_role(ptr);
ptr gtk_about_dialog_new();
void gtk_about_dialog_add_credit_section(ptr, str, ptr);
ptr gtk_about_dialog_get_artists(ptr);
ptr gtk_about_dialog_get_authors(ptr);
str gtk_about_dialog_get_comments(ptr);
str gtk_about_dialog_get_copyright(ptr);
ptr gtk_about_dialog_get_documenters(ptr);
str gtk_about_dialog_get_license(ptr);
int gtk_about_dialog_get_license_type(ptr);
ptr gtk_about_dialog_get_logo(ptr);
str gtk_about_dialog_get_logo_icon_name(ptr);
str gtk_about_dialog_get_program_name(ptr);
str gtk_about_dialog_get_system_information(ptr);
str gtk_about_dialog_get_translator_credits(ptr);
str gtk_about_dialog_get_version(ptr);
str gtk_about_dialog_get_website(ptr);
str gtk_about_dialog_get_website_label(ptr);
int gtk_about_dialog_get_wrap_license(ptr);
void gtk_about_dialog_set_artists(ptr, ptr);
void gtk_about_dialog_set_authors(ptr, ptr);
void gtk_about_dialog_set_comments(ptr, str);
void gtk_about_dialog_set_copyright(ptr, str);
void gtk_about_dialog_set_documenters(ptr, ptr);
void gtk_about_dialog_set_license(ptr, str);
void gtk_about_dialog_set_license_type(ptr, int);
void gtk_about_dialog_set_logo(ptr, ptr);
void gtk_about_dialog_set_logo_icon_name(ptr, str);
void gtk_about_dialog_set_program_name(ptr, str);
void gtk_about_dialog_set_system_information(ptr, str);
void gtk_about_dialog_set_translator_credits(ptr, str);
void gtk_about_dialog_set_version(ptr, str);
void gtk_about_dialog_set_website(ptr, str);
void gtk_about_dialog_set_website_label(ptr, str);
void gtk_about_dialog_set_wrap_license(ptr, int);
int gtk_accessible_get_accessible_role(ptr);
void gtk_accessible_reset_property(ptr, int);
void gtk_accessible_reset_relation(ptr, int);
void gtk_accessible_reset_state(ptr, int);
void gtk_accessible_update_property_value(ptr, int, ptr, ptr);
void gtk_accessible_update_relation_value(ptr, int, ptr, ptr);
void gtk_accessible_update_state_value(ptr, int, ptr, ptr);
ptr gtk_action_bar_new();
ptr gtk_action_bar_get_center_widget(ptr);
int gtk_action_bar_get_revealed(ptr);
void gtk_action_bar_pack_end(ptr, ptr);
void gtk_action_bar_pack_start(ptr, ptr);
void gtk_action_bar_remove(ptr, ptr);
void gtk_action_bar_set_center_widget(ptr, ptr);
void gtk_action_bar_set_revealed(ptr, int);
str gtk_actionable_get_action_name(ptr);
ptr gtk_actionable_get_action_target_value(ptr);
void gtk_actionable_set_action_name(ptr, str);
void gtk_actionable_set_action_target_value(ptr, ptr);
void gtk_actionable_set_detailed_action_name(ptr, str);
ptr gtk_activate_action_get(ptr);
ptr gtk_adjustment_new(double, double, double, double, double, double);
void gtk_adjustment_clamp_page(ptr, double, double);
void gtk_adjustment_configure(ptr, double, double, double, double, double, double);
double gtk_adjustment_get_lower(ptr);
double gtk_adjustment_get_minimum_increment(ptr);
double gtk_adjustment_get_page_increment(ptr);
double gtk_adjustment_get_page_size(ptr);
double gtk_adjustment_get_step_increment(ptr);
double gtk_adjustment_get_upper(ptr);
double gtk_adjustment_get_value(ptr);
void gtk_adjustment_set_lower(ptr, double);
void gtk_adjustment_set_page_increment(ptr, double);
void gtk_adjustment_set_page_size(ptr, double);
void gtk_adjustment_set_step_increment(ptr, double);
void gtk_adjustment_set_upper(ptr, double);
void gtk_adjustment_set_value(ptr, double);
ptr gtk_alternative_trigger_new(ptr, ptr);
ptr gtk_alternative_trigger_get_first(ptr);
ptr gtk_alternative_trigger_get_second(ptr);
ptr gtk_any_filter_new();
ptr gtk_app_chooser_get_app_info(ptr);
ptr gtk_app_chooser_get_content_type(ptr);
void gtk_app_chooser_refresh(ptr);
ptr gtk_app_chooser_button_new(str);
void gtk_app_chooser_button_append_custom_item(ptr, str, str, ptr);
void gtk_app_chooser_button_append_separator(ptr);
str gtk_app_chooser_button_get_heading(ptr);
int gtk_app_chooser_button_get_modal(ptr);
int gtk_app_chooser_button_get_show_default_item(ptr);
int gtk_app_chooser_button_get_show_dialog_item(ptr);
void gtk_app_chooser_button_set_active_custom_item(ptr, str);
void gtk_app_chooser_button_set_heading(ptr, str);
void gtk_app_chooser_button_set_modal(ptr, int);
void gtk_app_chooser_button_set_show_default_item(ptr, int);
void gtk_app_chooser_button_set_show_dialog_item(ptr, int);
ptr gtk_app_chooser_dialog_new(ptr, int, ptr);
ptr gtk_app_chooser_dialog_new_for_content_type(ptr, int, str);
str gtk_app_chooser_dialog_get_heading(ptr);
ptr gtk_app_chooser_dialog_get_widget(ptr);
void gtk_app_chooser_dialog_set_heading(ptr, str);
ptr gtk_app_chooser_widget_new(str);
str gtk_app_chooser_widget_get_default_text(ptr);
int gtk_app_chooser_widget_get_show_all(ptr);
int gtk_app_chooser_widget_get_show_default(ptr);
int gtk_app_chooser_widget_get_show_fallback(ptr);
int gtk_app_chooser_widget_get_show_other(ptr);
int gtk_app_chooser_widget_get_show_recommended(ptr);
void gtk_app_chooser_widget_set_default_text(ptr, str);
void gtk_app_chooser_widget_set_show_all(ptr, int);
void gtk_app_chooser_widget_set_show_default(ptr, int);
void gtk_app_chooser_widget_set_show_fallback(ptr, int);
void gtk_app_chooser_widget_set_show_other(ptr, int);
void gtk_app_chooser_widget_set_show_recommended(ptr, int);
ptr gtk_application_new(str, int);
void gtk_application_add_window(ptr, ptr);
ptr gtk_application_get_accels_for_action(ptr, str);
ptr gtk_application_get_actions_for_accel(ptr, str);
ptr gtk_application_get_active_window(ptr);
ptr gtk_application_get_menu_by_id(ptr, str);
ptr gtk_application_get_menubar(ptr);
ptr gtk_application_get_window_by_id(ptr, uint);
ptr gtk_application_get_windows(ptr);
uint gtk_application_inhibit(ptr, ptr, int, str);
ptr gtk_application_list_action_descriptions(ptr);
void gtk_application_remove_window(ptr, ptr);
void gtk_application_set_accels_for_action(ptr, str, ptr);
void gtk_application_set_menubar(ptr, ptr);
void gtk_application_uninhibit(ptr, uint);
ptr gtk_application_window_new(ptr);
ptr gtk_application_window_get_help_overlay(ptr);
uint gtk_application_window_get_id(ptr);
int gtk_application_window_get_show_menubar(ptr);
void gtk_application_window_set_help_overlay(ptr, ptr);
void gtk_application_window_set_show_menubar(ptr, int);
ptr gtk_aspect_frame_new(float, float, float, int);
ptr gtk_aspect_frame_get_child(ptr);
int gtk_aspect_frame_get_obey_child(ptr);
float gtk_aspect_frame_get_ratio(ptr);
float gtk_aspect_frame_get_xalign(ptr);
float gtk_aspect_frame_get_yalign(ptr);
void gtk_aspect_frame_set_child(ptr, ptr);
void gtk_aspect_frame_set_obey_child(ptr, int);
void gtk_aspect_frame_set_ratio(ptr, float);
void gtk_aspect_frame_set_xalign(ptr, float);
void gtk_aspect_frame_set_yalign(ptr, float);
ptr gtk_assistant_new();
void gtk_assistant_add_action_widget(ptr, ptr);
int gtk_assistant_append_page(ptr, ptr);
void gtk_assistant_commit(ptr);
int gtk_assistant_get_current_page(ptr);
int gtk_assistant_get_n_pages(ptr);
ptr gtk_assistant_get_nth_page(ptr, int);
ptr gtk_assistant_get_page(ptr, ptr);
int gtk_assistant_get_page_complete(ptr, ptr);
str gtk_assistant_get_page_title(ptr, ptr);
int gtk_assistant_get_page_type(ptr, ptr);
ptr gtk_assistant_get_pages(ptr);
int gtk_assistant_insert_page(ptr, ptr, int);
void gtk_assistant_next_page(ptr);
int gtk_assistant_prepend_page(ptr, ptr);
void gtk_assistant_previous_page(ptr);
void gtk_assistant_remove_action_widget(ptr, ptr);
void gtk_assistant_remove_page(ptr, int);
void gtk_assistant_set_current_page(ptr, int);
void gtk_assistant_set_forward_page_func(ptr, ptr, ptr, ptr);
void gtk_assistant_set_page_complete(ptr, ptr, int);
void gtk_assistant_set_page_title(ptr, ptr, str);
void gtk_assistant_set_page_type(ptr, ptr, int);
void gtk_assistant_update_buttons_state(ptr);
ptr gtk_assistant_page_get_child(ptr);
ptr gtk_bin_layout_new();
ptr gtk_bitset_new_empty();
ptr gtk_bitset_new_range(uint, uint);
int gtk_bitset_add(ptr, uint);
void gtk_bitset_add_range(ptr, uint, uint);
void gtk_bitset_add_range_closed(ptr, uint, uint);
void gtk_bitset_add_rectangle(ptr, uint, uint, uint, uint);
int gtk_bitset_contains(ptr, uint);
ptr gtk_bitset_copy(ptr);
void gtk_bitset_difference(ptr, ptr);
int gtk_bitset_equals(ptr, ptr);
uint gtk_bitset_get_maximum(ptr);
uint gtk_bitset_get_minimum(ptr);
uint gtk_bitset_get_nth(ptr, uint);
ulong gtk_bitset_get_size(ptr);
ulong gtk_bitset_get_size_in_range(ptr, uint, uint);
void gtk_bitset_intersect(ptr, ptr);
int gtk_bitset_is_empty(ptr);
ptr gtk_bitset_ref(ptr);
int gtk_bitset_remove(ptr, uint);
void gtk_bitset_remove_all(ptr);
void gtk_bitset_remove_range(ptr, uint, uint);
void gtk_bitset_remove_range_closed(ptr, uint, uint);
void gtk_bitset_remove_rectangle(ptr, uint, uint, uint, uint);
void gtk_bitset_shift_left(ptr, uint);
void gtk_bitset_shift_right(ptr, uint);
void gtk_bitset_splice(ptr, uint, uint, uint);
void gtk_bitset_subtract(ptr, ptr);
void gtk_bitset_union(ptr, ptr);
void gtk_bitset_unref(ptr);
uint gtk_bitset_iter_get_value(ptr);
int gtk_bitset_iter_is_valid(ptr);
int gtk_bitset_iter_next(ptr, ptr);
int gtk_bitset_iter_previous(ptr, ptr);
int gtk_bitset_iter_init_at(ptr, ptr, ptr, uint, ptr);
int gtk_bitset_iter_init_first(ptr, ptr, ptr, ptr);
int gtk_bitset_iter_init_last(ptr, ptr, ptr, ptr);
ptr gtk_bookmark_list_new(ptr, str);
str gtk_bookmark_list_get_attributes(ptr);
ptr gtk_bookmark_list_get_filename(ptr);
int gtk_bookmark_list_get_io_priority(ptr);
int gtk_bookmark_list_is_loading(ptr);
void gtk_bookmark_list_set_attributes(ptr, str);
void gtk_bookmark_list_set_io_priority(ptr, int);
ptr gtk_bool_filter_new(ptr);
ptr gtk_bool_filter_get_expression(ptr);
int gtk_bool_filter_get_invert(ptr);
void gtk_bool_filter_set_expression(ptr, ptr);
void gtk_bool_filter_set_invert(ptr, int);
ptr gtk_border_new();
ptr gtk_border_copy(ptr);
void gtk_border_free(ptr);
ptr gtk_box_new(int, int);
void gtk_box_append(ptr, ptr);
int gtk_box_get_baseline_position(ptr);
int gtk_box_get_homogeneous(ptr);
int gtk_box_get_spacing(ptr);
void gtk_box_insert_child_after(ptr, ptr, ptr);
void gtk_box_prepend(ptr, ptr);
void gtk_box_remove(ptr, ptr);
void gtk_box_reorder_child_after(ptr, ptr, ptr);
void gtk_box_set_baseline_position(ptr, int);
void gtk_box_set_homogeneous(ptr, int);
void gtk_box_set_spacing(ptr, int);
ptr gtk_box_layout_new(int);
int gtk_box_layout_get_baseline_position(ptr);
int gtk_box_layout_get_homogeneous(ptr);
uint gtk_box_layout_get_spacing(ptr);
void gtk_box_layout_set_baseline_position(ptr, int);
void gtk_box_layout_set_homogeneous(ptr, int);
void gtk_box_layout_set_spacing(ptr, uint);
str gtk_buildable_get_buildable_id(ptr);
str gtk_buildable_parse_context_get_element(ptr);
ptr gtk_buildable_parse_context_get_element_stack(ptr);
void gtk_buildable_parse_context_get_position(ptr, ptr, ptr);
ptr gtk_buildable_parse_context_pop(ptr);
void gtk_buildable_parse_context_push(ptr, ptr, ptr);
ptr gtk_builder_new();
ptr gtk_builder_new_from_file(ptr);
ptr gtk_builder_new_from_resource(str);
ptr gtk_builder_new_from_string(str, long);
int gtk_builder_add_from_file(ptr, ptr, ptr);
int gtk_builder_add_from_resource(ptr, str, ptr);
int gtk_builder_add_from_string(ptr, str, long, ptr);
int gtk_builder_add_objects_from_file(ptr, ptr, ptr, ptr);
int gtk_builder_add_objects_from_resource(ptr, str, ptr, ptr);
int gtk_builder_add_objects_from_string(ptr, str, long, ptr, ptr);
ptr gtk_builder_create_closure(ptr, str, int, ptr, ptr);
void gtk_builder_expose_object(ptr, str, ptr);
int gtk_builder_extend_with_template(ptr, ptr, ulong, str, long, ptr);
ptr gtk_builder_get_current_object(ptr);
ptr gtk_builder_get_object(ptr, str);
ptr gtk_builder_get_objects(ptr);
ptr gtk_builder_get_scope(ptr);
str gtk_builder_get_translation_domain(ptr);
ulong gtk_builder_get_type_from_name(ptr, str);
void gtk_builder_set_current_object(ptr, ptr);
void gtk_builder_set_scope(ptr, ptr);
void gtk_builder_set_translation_domain(ptr, str);
int gtk_builder_value_from_string(ptr, ptr, str, ptr, ptr);
int gtk_builder_value_from_string_type(ptr, ulong, str, ptr, ptr);
ptr gtk_builder_cscope_new();
void gtk_builder_cscope_add_callback_symbol(ptr, str, ptr);
ptr gtk_builder_list_item_factory_new_from_bytes(ptr, ptr);
ptr gtk_builder_list_item_factory_new_from_resource(ptr, str);
ptr gtk_builder_list_item_factory_get_bytes(ptr);
str gtk_builder_list_item_factory_get_resource(ptr);
ptr gtk_builder_list_item_factory_get_scope(ptr);
ptr gtk_button_new();
ptr gtk_button_new_from_icon_name(str);
ptr gtk_button_new_with_label(str);
ptr gtk_button_new_with_mnemonic(str);
ptr gtk_button_get_child(ptr);
int gtk_button_get_has_frame(ptr);
str gtk_button_get_icon_name(ptr);
str gtk_button_get_label(ptr);
int gtk_button_get_use_underline(ptr);
void gtk_button_set_child(ptr, ptr);
void gtk_button_set_has_frame(ptr, int);
void gtk_button_set_icon_name(ptr, str);
void gtk_button_set_label(ptr, str);
void gtk_button_set_use_underline(ptr, int);
ptr gtk_cclosure_expression_new(ulong, ptr, uint, ptr, ptr, ptr, ptr);
ptr gtk_calendar_new();
void gtk_calendar_clear_marks(ptr);
ptr gtk_calendar_get_date(ptr);
int gtk_calendar_get_day_is_marked(ptr, uint);
int gtk_calendar_get_show_day_names(ptr);
int gtk_calendar_get_show_heading(ptr);
int gtk_calendar_get_show_week_numbers(ptr);
void gtk_calendar_mark_day(ptr, uint);
void gtk_calendar_select_day(ptr, ptr);
void gtk_calendar_set_show_day_names(ptr, int);
void gtk_calendar_set_show_heading(ptr, int);
void gtk_calendar_set_show_week_numbers(ptr, int);
void gtk_calendar_unmark_day(ptr, uint);
ptr gtk_callback_action_new(ptr, ptr, ptr);
int gtk_cell_area_activate(ptr, ptr, ptr, ptr, int, int);
int gtk_cell_area_activate_cell(ptr, ptr, ptr, ptr, ptr, int);
void gtk_cell_area_add(ptr, ptr);
void gtk_cell_area_add_focus_sibling(ptr, ptr, ptr);
void gtk_cell_area_apply_attributes(ptr, ptr, ptr, int, int);
void gtk_cell_area_attribute_connect(ptr, ptr, str, int);
void gtk_cell_area_attribute_disconnect(ptr, ptr, str);
int gtk_cell_area_attribute_get_column(ptr, ptr, str);
void gtk_cell_area_cell_get_property(ptr, ptr, str, ptr);
void gtk_cell_area_cell_set_property(ptr, ptr, str, ptr);
ptr gtk_cell_area_copy_context(ptr, ptr);
ptr gtk_cell_area_create_context(ptr);
int gtk_cell_area_event(ptr, ptr, ptr, ptr, ptr, int);
int gtk_cell_area_focus(ptr, int);
void gtk_cell_area_foreach(ptr, ptr, ptr);
void gtk_cell_area_foreach_alloc(ptr, ptr, ptr, ptr, ptr, ptr, ptr);
void gtk_cell_area_get_cell_allocation(ptr, ptr, ptr, ptr, ptr, ptr);
ptr gtk_cell_area_get_cell_at_position(ptr, ptr, ptr, ptr, int, int, ptr);
str gtk_cell_area_get_current_path_string(ptr);
ptr gtk_cell_area_get_edit_widget(ptr);
ptr gtk_cell_area_get_edited_cell(ptr);
ptr gtk_cell_area_get_focus_cell(ptr);
ptr gtk_cell_area_get_focus_from_sibling(ptr, ptr);
ptr gtk_cell_area_get_focus_siblings(ptr, ptr);
void gtk_cell_area_get_preferred_height(ptr, ptr, ptr, ptr, ptr);
void gtk_cell_area_get_preferred_height_for_width(ptr, ptr, ptr, int, ptr, ptr);
void gtk_cell_area_get_preferred_width(ptr, ptr, ptr, ptr, ptr);
void gtk_cell_area_get_preferred_width_for_height(ptr, ptr, ptr, int, ptr, ptr);
int gtk_cell_area_get_request_mode(ptr);
int gtk_cell_area_has_renderer(ptr, ptr);
void gtk_cell_area_inner_cell_area(ptr, ptr, ptr, ptr);
int gtk_cell_area_is_activatable(ptr);
int gtk_cell_area_is_focus_sibling(ptr, ptr, ptr);
void gtk_cell_area_remove(ptr, ptr);
void gtk_cell_area_remove_focus_sibling(ptr, ptr, ptr);
void gtk_cell_area_request_renderer(ptr, ptr, int, ptr, int, ptr, ptr);
void gtk_cell_area_set_focus_cell(ptr, ptr);
void gtk_cell_area_snapshot(ptr, ptr, ptr, ptr, ptr, ptr, int, int);
void gtk_cell_area_stop_editing(ptr, int);
ptr gtk_cell_area_box_new();
int gtk_cell_area_box_get_spacing(ptr);
void gtk_cell_area_box_pack_end(ptr, ptr, int, int, int);
void gtk_cell_area_box_pack_start(ptr, ptr, int, int, int);
void gtk_cell_area_box_set_spacing(ptr, int);
ptr gtk_cell_area_class_find_cell_property(ptr, str);
void gtk_cell_area_class_install_cell_property(ptr, uint, ptr);
ptr gtk_cell_area_class_list_cell_properties(ptr, ptr);
void gtk_cell_area_context_allocate(ptr, int, int);
void gtk_cell_area_context_get_allocation(ptr, ptr, ptr);
ptr gtk_cell_area_context_get_area(ptr);
void gtk_cell_area_context_get_preferred_height(ptr, ptr, ptr);
void gtk_cell_area_context_get_preferred_height_for_width(ptr, int, ptr, ptr);
void gtk_cell_area_context_get_preferred_width(ptr, ptr, ptr);
void gtk_cell_area_context_get_preferred_width_for_height(ptr, int, ptr, ptr);
void gtk_cell_area_context_push_preferred_height(ptr, int, int);
void gtk_cell_area_context_push_preferred_width(ptr, int, int);
void gtk_cell_area_context_reset(ptr);
void gtk_cell_editable_editing_done(ptr);
void gtk_cell_editable_remove_widget(ptr);
void gtk_cell_editable_start_editing(ptr, ptr);
void gtk_cell_layout_add_attribute(ptr, ptr, str, int);
void gtk_cell_layout_clear(ptr);
void gtk_cell_layout_clear_attributes(ptr, ptr);
ptr gtk_cell_layout_get_area(ptr);
ptr gtk_cell_layout_get_cells(ptr);
void gtk_cell_layout_pack_end(ptr, ptr, int);
void gtk_cell_layout_pack_start(ptr, ptr, int);
void gtk_cell_layout_reorder(ptr, ptr, int);
void gtk_cell_layout_set_cell_data_func(ptr, ptr, ptr, ptr, ptr);
int gtk_cell_renderer_activate(ptr, ptr, ptr, str, ptr, ptr, int);
void gtk_cell_renderer_get_aligned_area(ptr, ptr, int, ptr, ptr);
void gtk_cell_renderer_get_alignment(ptr, ptr, ptr);
void gtk_cell_renderer_get_fixed_size(ptr, ptr, ptr);
int gtk_cell_renderer_get_is_expanded(ptr);
int gtk_cell_renderer_get_is_expander(ptr);
void gtk_cell_renderer_get_padding(ptr, ptr, ptr);
void gtk_cell_renderer_get_preferred_height(ptr, ptr, ptr, ptr);
void gtk_cell_renderer_get_preferred_height_for_width(ptr, ptr, int, ptr, ptr);
void gtk_cell_renderer_get_preferred_size(ptr, ptr, ptr, ptr);
void gtk_cell_renderer_get_preferred_width(ptr, ptr, ptr, ptr);
void gtk_cell_renderer_get_preferred_width_for_height(ptr, ptr, int, ptr, ptr);
int gtk_cell_renderer_get_request_mode(ptr);
int gtk_cell_renderer_get_sensitive(ptr);
int gtk_cell_renderer_get_state(ptr, ptr, int);
int gtk_cell_renderer_get_visible(ptr);
int gtk_cell_renderer_is_activatable(ptr);
void gtk_cell_renderer_set_alignment(ptr, float, float);
void gtk_cell_renderer_set_fixed_size(ptr, int, int);
void gtk_cell_renderer_set_is_expanded(ptr, int);
void gtk_cell_renderer_set_is_expander(ptr, int);
void gtk_cell_renderer_set_padding(ptr, int, int);
void gtk_cell_renderer_set_sensitive(ptr, int);
void gtk_cell_renderer_set_visible(ptr, int);
void gtk_cell_renderer_snapshot(ptr, ptr, ptr, ptr, ptr, int);
ptr gtk_cell_renderer_start_editing(ptr, ptr, ptr, str, ptr, ptr, int);
void gtk_cell_renderer_stop_editing(ptr, int);
ptr gtk_cell_renderer_accel_new();
ptr gtk_cell_renderer_combo_new();
ptr gtk_cell_renderer_pixbuf_new();
ptr gtk_cell_renderer_progress_new();
ptr gtk_cell_renderer_spin_new();
ptr gtk_cell_renderer_spinner_new();
ptr gtk_cell_renderer_text_new();
void gtk_cell_renderer_text_set_fixed_height_from_font(ptr, int);
ptr gtk_cell_renderer_toggle_new();
int gtk_cell_renderer_toggle_get_activatable(ptr);
int gtk_cell_renderer_toggle_get_active(ptr);
int gtk_cell_renderer_toggle_get_radio(ptr);
void gtk_cell_renderer_toggle_set_activatable(ptr, int);
void gtk_cell_renderer_toggle_set_active(ptr, int);
void gtk_cell_renderer_toggle_set_radio(ptr, int);
ptr gtk_cell_view_new();
ptr gtk_cell_view_new_with_context(ptr, ptr);
ptr gtk_cell_view_new_with_markup(str);
ptr gtk_cell_view_new_with_text(str);
ptr gtk_cell_view_new_with_texture(ptr);
ptr gtk_cell_view_get_displayed_row(ptr);
int gtk_cell_view_get_draw_sensitive(ptr);
int gtk_cell_view_get_fit_model(ptr);
ptr gtk_cell_view_get_model(ptr);
void gtk_cell_view_set_displayed_row(ptr, ptr);
void gtk_cell_view_set_draw_sensitive(ptr, int);
void gtk_cell_view_set_fit_model(ptr, int);
void gtk_cell_view_set_model(ptr, ptr);
ptr gtk_center_box_new();
int gtk_center_box_get_baseline_position(ptr);
ptr gtk_center_box_get_center_widget(ptr);
ptr gtk_center_box_get_end_widget(ptr);
ptr gtk_center_box_get_start_widget(ptr);
void gtk_center_box_set_baseline_position(ptr, int);
void gtk_center_box_set_center_widget(ptr, ptr);
void gtk_center_box_set_end_widget(ptr, ptr);
void gtk_center_box_set_start_widget(ptr, ptr);
ptr gtk_center_layout_new();
int gtk_center_layout_get_baseline_position(ptr);
ptr gtk_center_layout_get_center_widget(ptr);
ptr gtk_center_layout_get_end_widget(ptr);
int gtk_center_layout_get_orientation(ptr);
ptr gtk_center_layout_get_start_widget(ptr);
void gtk_center_layout_set_baseline_position(ptr, int);
void gtk_center_layout_set_center_widget(ptr, ptr);
void gtk_center_layout_set_end_widget(ptr, ptr);
void gtk_center_layout_set_orientation(ptr, int);
void gtk_center_layout_set_start_widget(ptr, ptr);
ptr gtk_check_button_new();
ptr gtk_check_button_new_with_label(str);
ptr gtk_check_button_new_with_mnemonic(str);
int gtk_check_button_get_active(ptr);
int gtk_check_button_get_inconsistent(ptr);
str gtk_check_button_get_label(ptr);
int gtk_check_button_get_use_underline(ptr);
void gtk_check_button_set_active(ptr, int);
void gtk_check_button_set_group(ptr, ptr);
void gtk_check_button_set_inconsistent(ptr, int);
void gtk_check_button_set_label(ptr, str);
void gtk_check_button_set_use_underline(ptr, int);
ptr gtk_closure_expression_new(ulong, ptr, uint, ptr);
ptr gtk_color_button_new();
ptr gtk_color_button_new_with_rgba(ptr);
int gtk_color_button_get_modal(ptr);
str gtk_color_button_get_title(ptr);
void gtk_color_button_set_modal(ptr, int);
void gtk_color_button_set_title(ptr, str);
void gtk_color_chooser_add_palette(ptr, int, int, int, ptr);
void gtk_color_chooser_get_rgba(ptr, ptr);
int gtk_color_chooser_get_use_alpha(ptr);
void gtk_color_chooser_set_rgba(ptr, ptr);
void gtk_color_chooser_set_use_alpha(ptr, int);
ptr gtk_color_chooser_dialog_new(str, ptr);
ptr gtk_color_chooser_widget_new();
ptr gtk_column_view_new(ptr);
void gtk_column_view_append_column(ptr, ptr);
ptr gtk_column_view_get_columns(ptr);
int gtk_column_view_get_enable_rubberband(ptr);
ptr gtk_column_view_get_model(ptr);
int gtk_column_view_get_reorderable(ptr);
int gtk_column_view_get_show_column_separators(ptr);
int gtk_column_view_get_show_row_separators(ptr);
int gtk_column_view_get_single_click_activate(ptr);
ptr gtk_column_view_get_sorter(ptr);
void gtk_column_view_insert_column(ptr, uint, ptr);
void gtk_column_view_remove_column(ptr, ptr);
void gtk_column_view_set_enable_rubberband(ptr, int);
void gtk_column_view_set_model(ptr, ptr);
void gtk_column_view_set_reorderable(ptr, int);
void gtk_column_view_set_show_column_separators(ptr, int);
void gtk_column_view_set_show_row_separators(ptr, int);
void gtk_column_view_set_single_click_activate(ptr, int);
void gtk_column_view_sort_by_column(ptr, ptr, int);
ptr gtk_column_view_column_new(str, ptr);
ptr gtk_column_view_column_get_column_view(ptr);
int gtk_column_view_column_get_expand(ptr);
ptr gtk_column_view_column_get_factory(ptr);
int gtk_column_view_column_get_fixed_width(ptr);
ptr gtk_column_view_column_get_header_menu(ptr);
int gtk_column_view_column_get_resizable(ptr);
ptr gtk_column_view_column_get_sorter(ptr);
str gtk_column_view_column_get_title(ptr);
int gtk_column_view_column_get_visible(ptr);
void gtk_column_view_column_set_expand(ptr, int);
void gtk_column_view_column_set_factory(ptr, ptr);
void gtk_column_view_column_set_fixed_width(ptr, int);
void gtk_column_view_column_set_header_menu(ptr, ptr);
void gtk_column_view_column_set_resizable(ptr, int);
void gtk_column_view_column_set_sorter(ptr, ptr);
void gtk_column_view_column_set_title(ptr, str);
void gtk_column_view_column_set_visible(ptr, int);
ptr gtk_combo_box_new();
ptr gtk_combo_box_new_with_entry();
ptr gtk_combo_box_new_with_model(ptr);
ptr gtk_combo_box_new_with_model_and_entry(ptr);
int gtk_combo_box_get_active(ptr);
str gtk_combo_box_get_active_id(ptr);
int gtk_combo_box_get_active_iter(ptr, ptr);
int gtk_combo_box_get_button_sensitivity(ptr);
ptr gtk_combo_box_get_child(ptr);
int gtk_combo_box_get_entry_text_column(ptr);
int gtk_combo_box_get_has_entry(ptr);
int gtk_combo_box_get_id_column(ptr);
ptr gtk_combo_box_get_model(ptr);
int gtk_combo_box_get_popup_fixed_width(ptr);
void gtk_combo_box_popdown(ptr);
void gtk_combo_box_popup(ptr);
void gtk_combo_box_popup_for_device(ptr, ptr);
void gtk_combo_box_set_active(ptr, int);
int gtk_combo_box_set_active_id(ptr, str);
void gtk_combo_box_set_active_iter(ptr, ptr);
void gtk_combo_box_set_button_sensitivity(ptr, int);
void gtk_combo_box_set_child(ptr, ptr);
void gtk_combo_box_set_entry_text_column(ptr, int);
void gtk_combo_box_set_id_column(ptr, int);
void gtk_combo_box_set_model(ptr, ptr);
void gtk_combo_box_set_popup_fixed_width(ptr, int);
void gtk_combo_box_set_row_separator_func(ptr, ptr, ptr, ptr);
ptr gtk_combo_box_text_new();
ptr gtk_combo_box_text_new_with_entry();
void gtk_combo_box_text_append(ptr, str, str);
void gtk_combo_box_text_append_text(ptr, str);
ptr gtk_combo_box_text_get_active_text(ptr);
void gtk_combo_box_text_insert(ptr, int, str, str);
void gtk_combo_box_text_insert_text(ptr, int, str);
void gtk_combo_box_text_prepend(ptr, str, str);
void gtk_combo_box_text_prepend_text(ptr, str);
void gtk_combo_box_text_remove(ptr, int);
void gtk_combo_box_text_remove_all(ptr);
ptr gtk_constant_expression_new_for_value(ptr);
ptr gtk_constant_expression_get_value(ptr);
ptr gtk_constraint_new(ptr, int, int, ptr, int, double, double, int);
ptr gtk_constraint_new_constant(ptr, int, int, double, int);
double gtk_constraint_get_constant(ptr);
double gtk_constraint_get_multiplier(ptr);
int gtk_constraint_get_relation(ptr);
ptr gtk_constraint_get_source(ptr);
int gtk_constraint_get_source_attribute(ptr);
int gtk_constraint_get_strength(ptr);
ptr gtk_constraint_get_target(ptr);
int gtk_constraint_get_target_attribute(ptr);
int gtk_constraint_is_attached(ptr);
int gtk_constraint_is_constant(ptr);
int gtk_constraint_is_required(ptr);
ptr gtk_constraint_guide_new();
void gtk_constraint_guide_get_max_size(ptr, ptr, ptr);
void gtk_constraint_guide_get_min_size(ptr, ptr, ptr);
str gtk_constraint_guide_get_name(ptr);
void gtk_constraint_guide_get_nat_size(ptr, ptr, ptr);
int gtk_constraint_guide_get_strength(ptr);
void gtk_constraint_guide_set_max_size(ptr, int, int);
void gtk_constraint_guide_set_min_size(ptr, int, int);
void gtk_constraint_guide_set_name(ptr, str);
void gtk_constraint_guide_set_nat_size(ptr, int, int);
void gtk_constraint_guide_set_strength(ptr, int);
ptr gtk_constraint_layout_new();
void gtk_constraint_layout_add_constraint(ptr, ptr);
ptr gtk_constraint_layout_add_constraints_from_descriptionv(ptr, ptr, ulong, int, int, ptr, ptr);
void gtk_constraint_layout_add_guide(ptr, ptr);
ptr gtk_constraint_layout_observe_constraints(ptr);
ptr gtk_constraint_layout_observe_guides(ptr);
void gtk_constraint_layout_remove_all_constraints(ptr);
void gtk_constraint_layout_remove_constraint(ptr, ptr);
void gtk_constraint_layout_remove_guide(ptr, ptr);
ptr gtk_css_provider_new();
void gtk_css_provider_load_from_data(ptr, ptr, long);
void gtk_css_provider_load_from_file(ptr, ptr);
void gtk_css_provider_load_from_path(ptr, ptr);
void gtk_css_provider_load_from_resource(ptr, str);
void gtk_css_provider_load_named(ptr, str, str);
ptr gtk_css_provider_to_string(ptr);
ptr gtk_css_section_new(ptr, ptr, ptr);
ptr gtk_css_section_get_end_location(ptr);
ptr gtk_css_section_get_file(ptr);
ptr gtk_css_section_get_parent(ptr);
ptr gtk_css_section_get_start_location(ptr);
void gtk_css_section_print(ptr, ptr);
ptr gtk_css_section_ref(ptr);
ptr gtk_css_section_to_string(ptr);
void gtk_css_section_unref(ptr);
ptr gtk_custom_filter_new(ptr, ptr, ptr);
void gtk_custom_filter_set_filter_func(ptr, ptr, ptr, ptr);
ptr gtk_custom_layout_new(ptr, ptr, ptr);
ptr gtk_custom_sorter_new(ptr, ptr, ptr);
void gtk_custom_sorter_set_sort_func(ptr, ptr, ptr, ptr);
ptr gtk_dialog_new();
void gtk_dialog_add_action_widget(ptr, ptr, int);
ptr gtk_dialog_add_button(ptr, str, int);
ptr gtk_dialog_get_content_area(ptr);
ptr gtk_dialog_get_header_bar(ptr);
int gtk_dialog_get_response_for_widget(ptr, ptr);
ptr gtk_dialog_get_widget_for_response(ptr, int);
void gtk_dialog_response(ptr, int);
void gtk_dialog_set_default_response(ptr, int);
void gtk_dialog_set_response_sensitive(ptr, int, int);
ptr gtk_directory_list_new(str, ptr);
str gtk_directory_list_get_attributes(ptr);
ptr gtk_directory_list_get_error(ptr);
ptr gtk_directory_list_get_file(ptr);
int gtk_directory_list_get_io_priority(ptr);
int gtk_directory_list_get_monitored(ptr);
int gtk_directory_list_is_loading(ptr);
void gtk_directory_list_set_attributes(ptr, str);
void gtk_directory_list_set_file(ptr, ptr);
void gtk_directory_list_set_io_priority(ptr, int);
void gtk_directory_list_set_monitored(ptr, int);
ptr gtk_drag_icon_create_widget_for_value(ptr, ptr);
ptr gtk_drag_icon_get_for_drag(ptr, ptr);
void gtk_drag_icon_set_from_paintable(ptr, ptr, ptr, int, int);
ptr gtk_drag_icon_get_child(ptr);
void gtk_drag_icon_set_child(ptr, ptr);
ptr gtk_drag_source_new();
void gtk_drag_source_drag_cancel(ptr);
int gtk_drag_source_get_actions(ptr);
ptr gtk_drag_source_get_content(ptr);
ptr gtk_drag_source_get_drag(ptr);
void gtk_drag_source_set_actions(ptr, int);
void gtk_drag_source_set_content(ptr, ptr);
void gtk_drag_source_set_icon(ptr, ptr, int, int);
ptr gtk_drawing_area_new();
int gtk_drawing_area_get_content_height(ptr);
int gtk_drawing_area_get_content_width(ptr);
void gtk_drawing_area_set_content_height(ptr, int);
void gtk_drawing_area_set_content_width(ptr, int);
void gtk_drawing_area_set_draw_func(ptr, ptr, ptr, ptr);
ptr gtk_drop_controller_motion_new();
int gtk_drop_controller_motion_contains_pointer(ptr);
ptr gtk_drop_controller_motion_get_drop(ptr);
int gtk_drop_controller_motion_is_pointer(ptr);
ptr gtk_drop_down_new(ptr, ptr);
ptr gtk_drop_down_new_from_strings(ptr);
int gtk_drop_down_get_enable_search(ptr);
ptr gtk_drop_down_get_expression(ptr);
ptr gtk_drop_down_get_factory(ptr);
ptr gtk_drop_down_get_list_factory(ptr);
ptr gtk_drop_down_get_model(ptr);
uint gtk_drop_down_get_selected(ptr);
ptr gtk_drop_down_get_selected_item(ptr);
int gtk_drop_down_get_show_arrow(ptr);
void gtk_drop_down_set_enable_search(ptr, int);
void gtk_drop_down_set_expression(ptr, ptr);
void gtk_drop_down_set_factory(ptr, ptr);
void gtk_drop_down_set_list_factory(ptr, ptr);
void gtk_drop_down_set_model(ptr, ptr);
void gtk_drop_down_set_selected(ptr, uint);
void gtk_drop_down_set_show_arrow(ptr, int);
ptr gtk_drop_target_new(ulong, int);
int gtk_drop_target_get_actions(ptr);
ptr gtk_drop_target_get_current_drop(ptr);
ptr gtk_drop_target_get_drop(ptr);
ptr gtk_drop_target_get_formats(ptr);
ptr gtk_drop_target_get_gtypes(ptr, ptr);
int gtk_drop_target_get_preload(ptr);
ptr gtk_drop_target_get_value(ptr);
void gtk_drop_target_reject(ptr);
void gtk_drop_target_set_actions(ptr, int);
void gtk_drop_target_set_gtypes(ptr, ptr, ulong);
void gtk_drop_target_set_preload(ptr, int);
ptr gtk_drop_target_async_new(ptr, int);
int gtk_drop_target_async_get_actions(ptr);
ptr gtk_drop_target_async_get_formats(ptr);
void gtk_drop_target_async_reject_drop(ptr, ptr);
void gtk_drop_target_async_set_actions(ptr, int);
void gtk_drop_target_async_set_formats(ptr, ptr);
int gtk_editable_delegate_get_property(ptr, ptr, uint, ptr, ptr);
int gtk_editable_delegate_set_property(ptr, ptr, uint, ptr, ptr);
uint gtk_editable_install_properties(ptr, ptr, uint);
void gtk_editable_delete_selection(ptr);
void gtk_editable_delete_text(ptr, int, int);
void gtk_editable_finish_delegate(ptr);
float gtk_editable_get_alignment(ptr);
ptr gtk_editable_get_chars(ptr, int, int);
ptr gtk_editable_get_delegate(ptr);
int gtk_editable_get_editable(ptr);
int gtk_editable_get_enable_undo(ptr);
int gtk_editable_get_max_width_chars(ptr);
int gtk_editable_get_position(ptr);
int gtk_editable_get_selection_bounds(ptr, ptr, ptr);
str gtk_editable_get_text(ptr);
int gtk_editable_get_width_chars(ptr);
void gtk_editable_init_delegate(ptr);
void gtk_editable_insert_text(ptr, str, int, ptr);
void gtk_editable_select_region(ptr, int, int);
void gtk_editable_set_alignment(ptr, float);
void gtk_editable_set_editable(ptr, int);
void gtk_editable_set_enable_undo(ptr, int);
void gtk_editable_set_max_width_chars(ptr, int);
void gtk_editable_set_position(ptr, int);
void gtk_editable_set_text(ptr, str);
void gtk_editable_set_width_chars(ptr, int);
ptr gtk_editable_label_new(str);
int gtk_editable_label_get_editing(ptr);
void gtk_editable_label_start_editing(ptr);
void gtk_editable_label_stop_editing(ptr, int);
ptr gtk_emoji_chooser_new();
ptr gtk_entry_new();
ptr gtk_entry_new_with_buffer(ptr);
int gtk_entry_get_activates_default(ptr);
float gtk_entry_get_alignment(ptr);
ptr gtk_entry_get_attributes(ptr);
ptr gtk_entry_get_buffer(ptr);
ptr gtk_entry_get_completion(ptr);
int gtk_entry_get_current_icon_drag_source(ptr);
ptr gtk_entry_get_extra_menu(ptr);
int gtk_entry_get_has_frame(ptr);
int gtk_entry_get_icon_activatable(ptr, int);
void gtk_entry_get_icon_area(ptr, int, ptr);
int gtk_entry_get_icon_at_pos(ptr, int, int);
ptr gtk_entry_get_icon_gicon(ptr, int);
str gtk_entry_get_icon_name(ptr, int);
ptr gtk_entry_get_icon_paintable(ptr, int);
int gtk_entry_get_icon_sensitive(ptr, int);
int gtk_entry_get_icon_storage_type(ptr, int);
ptr gtk_entry_get_icon_tooltip_markup(ptr, int);
ptr gtk_entry_get_icon_tooltip_text(ptr, int);
int gtk_entry_get_input_hints(ptr);
int gtk_entry_get_input_purpose(ptr);
ptr gtk_entry_get_invisible_char(ptr);
int gtk_entry_get_max_length(ptr);
int gtk_entry_get_overwrite_mode(ptr);
str gtk_entry_get_placeholder_text(ptr);
double gtk_entry_get_progress_fraction(ptr);
double gtk_entry_get_progress_pulse_step(ptr);
ptr gtk_entry_get_tabs(ptr);
ushort gtk_entry_get_text_length(ptr);
int gtk_entry_get_visibility(ptr);
int gtk_entry_grab_focus_without_selecting(ptr);
void gtk_entry_progress_pulse(ptr);
void gtk_entry_reset_im_context(ptr);
void gtk_entry_set_activates_default(ptr, int);
void gtk_entry_set_alignment(ptr, float);
void gtk_entry_set_attributes(ptr, ptr);
void gtk_entry_set_buffer(ptr, ptr);
void gtk_entry_set_completion(ptr, ptr);
void gtk_entry_set_extra_menu(ptr, ptr);
void gtk_entry_set_has_frame(ptr, int);
void gtk_entry_set_icon_activatable(ptr, int, int);
void gtk_entry_set_icon_drag_source(ptr, int, ptr, int);
void gtk_entry_set_icon_from_gicon(ptr, int, ptr);
void gtk_entry_set_icon_from_icon_name(ptr, int, str);
void gtk_entry_set_icon_from_paintable(ptr, int, ptr);
void gtk_entry_set_icon_sensitive(ptr, int, int);
void gtk_entry_set_icon_tooltip_markup(ptr, int, str);
void gtk_entry_set_icon_tooltip_text(ptr, int, str);
void gtk_entry_set_input_hints(ptr, int);
void gtk_entry_set_input_purpose(ptr, int);
void gtk_entry_set_invisible_char(ptr, ptr);
void gtk_entry_set_max_length(ptr, int);
void gtk_entry_set_overwrite_mode(ptr, int);
void gtk_entry_set_placeholder_text(ptr, str);
void gtk_entry_set_progress_fraction(ptr, double);
void gtk_entry_set_progress_pulse_step(ptr, double);
void gtk_entry_set_tabs(ptr, ptr);
void gtk_entry_set_visibility(ptr, int);
void gtk_entry_unset_invisible_char(ptr);
ptr gtk_entry_buffer_new(str, int);
uint gtk_entry_buffer_delete_text(ptr, uint, int);
void gtk_entry_buffer_emit_deleted_text(ptr, uint, uint);
void gtk_entry_buffer_emit_inserted_text(ptr, uint, str, uint);
ulong gtk_entry_buffer_get_bytes(ptr);
uint gtk_entry_buffer_get_length(ptr);
int gtk_entry_buffer_get_max_length(ptr);
str gtk_entry_buffer_get_text(ptr);
uint gtk_entry_buffer_insert_text(ptr, uint, str, int);
void gtk_entry_buffer_set_max_length(ptr, int);
void gtk_entry_buffer_set_text(ptr, str, int);
ptr gtk_entry_completion_new();
ptr gtk_entry_completion_new_with_area(ptr);
void gtk_entry_completion_complete(ptr);
ptr gtk_entry_completion_compute_prefix(ptr, str);
str gtk_entry_completion_get_completion_prefix(ptr);
ptr gtk_entry_completion_get_entry(ptr);
int gtk_entry_completion_get_inline_completion(ptr);
int gtk_entry_completion_get_inline_selection(ptr);
int gtk_entry_completion_get_minimum_key_length(ptr);
ptr gtk_entry_completion_get_model(ptr);
int gtk_entry_completion_get_popup_completion(ptr);
int gtk_entry_completion_get_popup_set_width(ptr);
int gtk_entry_completion_get_popup_single_match(ptr);
int gtk_entry_completion_get_text_column(ptr);
void gtk_entry_completion_insert_prefix(ptr);
void gtk_entry_completion_set_inline_completion(ptr, int);
void gtk_entry_completion_set_inline_selection(ptr, int);
void gtk_entry_completion_set_match_func(ptr, ptr, ptr, ptr);
void gtk_entry_completion_set_minimum_key_length(ptr, int);
void gtk_entry_completion_set_model(ptr, ptr);
void gtk_entry_completion_set_popup_completion(ptr, int);
void gtk_entry_completion_set_popup_set_width(ptr, int);
void gtk_entry_completion_set_popup_single_match(ptr, int);
void gtk_entry_completion_set_text_column(ptr, int);
ptr gtk_event_controller_get_current_event(ptr);
ptr gtk_event_controller_get_current_event_device(ptr);
int gtk_event_controller_get_current_event_state(ptr);
uint gtk_event_controller_get_current_event_time(ptr);
str gtk_event_controller_get_name(ptr);
int gtk_event_controller_get_propagation_limit(ptr);
int gtk_event_controller_get_propagation_phase(ptr);
ptr gtk_event_controller_get_widget(ptr);
void gtk_event_controller_reset(ptr);
void gtk_event_controller_set_name(ptr, str);
void gtk_event_controller_set_propagation_limit(ptr, int);
void gtk_event_controller_set_propagation_phase(ptr, int);
ptr gtk_event_controller_focus_new();
int gtk_event_controller_focus_contains_focus(ptr);
int gtk_event_controller_focus_is_focus(ptr);
ptr gtk_event_controller_key_new();
int gtk_event_controller_key_forward(ptr, ptr);
uint gtk_event_controller_key_get_group(ptr);
ptr gtk_event_controller_key_get_im_context(ptr);
void gtk_event_controller_key_set_im_context(ptr, ptr);
ptr gtk_event_controller_legacy_new();
ptr gtk_event_controller_motion_new();
int gtk_event_controller_motion_contains_pointer(ptr);
int gtk_event_controller_motion_is_pointer(ptr);
ptr gtk_event_controller_scroll_new(int);
int gtk_event_controller_scroll_get_flags(ptr);
void gtk_event_controller_scroll_set_flags(ptr, int);
ptr gtk_every_filter_new();
ptr gtk_expander_new(str);
ptr gtk_expander_new_with_mnemonic(str);
ptr gtk_expander_get_child(ptr);
int gtk_expander_get_expanded(ptr);
str gtk_expander_get_label(ptr);
ptr gtk_expander_get_label_widget(ptr);
int gtk_expander_get_resize_toplevel(ptr);
int gtk_expander_get_use_markup(ptr);
int gtk_expander_get_use_underline(ptr);
void gtk_expander_set_child(ptr, ptr);
void gtk_expander_set_expanded(ptr, int);
void gtk_expander_set_label(ptr, str);
void gtk_expander_set_label_widget(ptr, ptr);
void gtk_expander_set_resize_toplevel(ptr, int);
void gtk_expander_set_use_markup(ptr, int);
void gtk_expander_set_use_underline(ptr, int);
ptr gtk_expression_bind(ptr, ptr, str, ptr);
int gtk_expression_evaluate(ptr, ptr, ptr);
ulong gtk_expression_get_value_type(ptr);
int gtk_expression_is_static(ptr);
ptr gtk_expression_ref(ptr);
void gtk_expression_unref(ptr);
ptr gtk_expression_watch(ptr, ptr, ptr, ptr, ptr);
int gtk_expression_watch_evaluate(ptr, ptr);
ptr gtk_expression_watch_ref(ptr);
void gtk_expression_watch_unref(ptr);
void gtk_expression_watch_unwatch(ptr);
void gtk_file_chooser_add_choice(ptr, str, str, ptr, ptr);
void gtk_file_chooser_add_filter(ptr, ptr);
int gtk_file_chooser_add_shortcut_folder(ptr, ptr, ptr);
int gtk_file_chooser_get_action(ptr);
str gtk_file_chooser_get_choice(ptr, str);
int gtk_file_chooser_get_create_folders(ptr);
ptr gtk_file_chooser_get_current_folder(ptr);
ptr gtk_file_chooser_get_current_name(ptr);
ptr gtk_file_chooser_get_file(ptr);
ptr gtk_file_chooser_get_files(ptr);
ptr gtk_file_chooser_get_filter(ptr);
ptr gtk_file_chooser_get_filters(ptr);
int gtk_file_chooser_get_select_multiple(ptr);
ptr gtk_file_chooser_get_shortcut_folders(ptr);
void gtk_file_chooser_remove_choice(ptr, str);
void gtk_file_chooser_remove_filter(ptr, ptr);
int gtk_file_chooser_remove_shortcut_folder(ptr, ptr, ptr);
void gtk_file_chooser_set_action(ptr, int);
void gtk_file_chooser_set_choice(ptr, str, str);
void gtk_file_chooser_set_create_folders(ptr, int);
int gtk_file_chooser_set_current_folder(ptr, ptr, ptr);
void gtk_file_chooser_set_current_name(ptr, str);
int gtk_file_chooser_set_file(ptr, ptr, ptr);
void gtk_file_chooser_set_filter(ptr, ptr);
void gtk_file_chooser_set_select_multiple(ptr, int);
ptr gtk_file_chooser_native_new(str, ptr, int, str, str);
str gtk_file_chooser_native_get_accept_label(ptr);
str gtk_file_chooser_native_get_cancel_label(ptr);
void gtk_file_chooser_native_set_accept_label(ptr, str);
void gtk_file_chooser_native_set_cancel_label(ptr, str);
ptr gtk_file_chooser_widget_new(int);
ptr gtk_file_filter_new();
ptr gtk_file_filter_new_from_gvariant(ptr);
void gtk_file_filter_add_mime_type(ptr, str);
void gtk_file_filter_add_pattern(ptr, str);
void gtk_file_filter_add_pixbuf_formats(ptr);
void gtk_file_filter_add_suffix(ptr, str);
ptr gtk_file_filter_get_attributes(ptr);
str gtk_file_filter_get_name(ptr);
void gtk_file_filter_set_name(ptr, str);
ptr gtk_file_filter_to_gvariant(ptr);
void gtk_filter_changed(ptr, int);
int gtk_filter_get_strictness(ptr);
int gtk_filter_match(ptr, ptr);
ptr gtk_filter_list_model_new(ptr, ptr);
ptr gtk_filter_list_model_get_filter(ptr);
int gtk_filter_list_model_get_incremental(ptr);
ptr gtk_filter_list_model_get_model(ptr);
uint gtk_filter_list_model_get_pending(ptr);
void gtk_filter_list_model_set_filter(ptr, ptr);
void gtk_filter_list_model_set_incremental(ptr, int);
void gtk_filter_list_model_set_model(ptr, ptr);
ptr gtk_fixed_new();
void gtk_fixed_get_child_position(ptr, ptr, ptr, ptr);
ptr gtk_fixed_get_child_transform(ptr, ptr);
void gtk_fixed_move(ptr, ptr, double, double);
void gtk_fixed_put(ptr, ptr, double, double);
void gtk_fixed_remove(ptr, ptr);
void gtk_fixed_set_child_transform(ptr, ptr, ptr);
ptr gtk_fixed_layout_new();
ptr gtk_fixed_layout_child_get_transform(ptr);
void gtk_fixed_layout_child_set_transform(ptr, ptr);
ptr gtk_flatten_list_model_new(ptr);
ptr gtk_flatten_list_model_get_model(ptr);
ptr gtk_flatten_list_model_get_model_for_item(ptr, uint);
void gtk_flatten_list_model_set_model(ptr, ptr);
ptr gtk_flow_box_new();
void gtk_flow_box_append(ptr, ptr);
void gtk_flow_box_bind_model(ptr, ptr, ptr, ptr, ptr);
int gtk_flow_box_get_activate_on_single_click(ptr);
ptr gtk_flow_box_get_child_at_index(ptr, int);
ptr gtk_flow_box_get_child_at_pos(ptr, int, int);
uint gtk_flow_box_get_column_spacing(ptr);
int gtk_flow_box_get_homogeneous(ptr);
uint gtk_flow_box_get_max_children_per_line(ptr);
uint gtk_flow_box_get_min_children_per_line(ptr);
uint gtk_flow_box_get_row_spacing(ptr);
ptr gtk_flow_box_get_selected_children(ptr);
int gtk_flow_box_get_selection_mode(ptr);
void gtk_flow_box_insert(ptr, ptr, int);
void gtk_flow_box_invalidate_filter(ptr);
void gtk_flow_box_invalidate_sort(ptr);
void gtk_flow_box_prepend(ptr, ptr);
void gtk_flow_box_remove(ptr, ptr);
void gtk_flow_box_select_all(ptr);
void gtk_flow_box_select_child(ptr, ptr);
void gtk_flow_box_selected_foreach(ptr, ptr, ptr);
void gtk_flow_box_set_activate_on_single_click(ptr, int);
void gtk_flow_box_set_column_spacing(ptr, uint);
void gtk_flow_box_set_filter_func(ptr, ptr, ptr, ptr);
void gtk_flow_box_set_hadjustment(ptr, ptr);
void gtk_flow_box_set_homogeneous(ptr, int);
void gtk_flow_box_set_max_children_per_line(ptr, uint);
void gtk_flow_box_set_min_children_per_line(ptr, uint);
void gtk_flow_box_set_row_spacing(ptr, uint);
void gtk_flow_box_set_selection_mode(ptr, int);
void gtk_flow_box_set_sort_func(ptr, ptr, ptr, ptr);
void gtk_flow_box_set_vadjustment(ptr, ptr);
void gtk_flow_box_unselect_all(ptr);
void gtk_flow_box_unselect_child(ptr, ptr);
ptr gtk_flow_box_child_new();
void gtk_flow_box_child_changed(ptr);
ptr gtk_flow_box_child_get_child(ptr);
int gtk_flow_box_child_get_index(ptr);
int gtk_flow_box_child_is_selected(ptr);
void gtk_flow_box_child_set_child(ptr, ptr);
ptr gtk_font_button_new();
ptr gtk_font_button_new_with_font(str);
int gtk_font_button_get_modal(ptr);
str gtk_font_button_get_title(ptr);
int gtk_font_button_get_use_font(ptr);
int gtk_font_button_get_use_size(ptr);
void gtk_font_button_set_modal(ptr, int);
void gtk_font_button_set_title(ptr, str);
void gtk_font_button_set_use_font(ptr, int);
void gtk_font_button_set_use_size(ptr, int);
ptr gtk_font_chooser_get_font(ptr);
ptr gtk_font_chooser_get_font_desc(ptr);
ptr gtk_font_chooser_get_font_face(ptr);
ptr gtk_font_chooser_get_font_family(ptr);
ptr gtk_font_chooser_get_font_features(ptr);
ptr gtk_font_chooser_get_font_map(ptr);
int gtk_font_chooser_get_font_size(ptr);
ptr gtk_font_chooser_get_language(ptr);
int gtk_font_chooser_get_level(ptr);
ptr gtk_font_chooser_get_preview_text(ptr);
int gtk_font_chooser_get_show_preview_entry(ptr);
void gtk_font_chooser_set_filter_func(ptr, ptr, ptr, ptr);
void gtk_font_chooser_set_font(ptr, str);
void gtk_font_chooser_set_font_desc(ptr, ptr);
void gtk_font_chooser_set_font_map(ptr, ptr);
void gtk_font_chooser_set_language(ptr, str);
void gtk_font_chooser_set_level(ptr, int);
void gtk_font_chooser_set_preview_text(ptr, str);
void gtk_font_chooser_set_show_preview_entry(ptr, int);
ptr gtk_font_chooser_dialog_new(str, ptr);
ptr gtk_font_chooser_widget_new();
ptr gtk_frame_new(str);
ptr gtk_frame_get_child(ptr);
str gtk_frame_get_label(ptr);
float gtk_frame_get_label_align(ptr);
ptr gtk_frame_get_label_widget(ptr);
void gtk_frame_set_child(ptr, ptr);
void gtk_frame_set_label(ptr, str);
void gtk_frame_set_label_align(ptr, float);
void gtk_frame_set_label_widget(ptr, ptr);
ptr gtk_gl_area_new();
void gtk_gl_area_attach_buffers(ptr);
int gtk_gl_area_get_auto_render(ptr);
ptr gtk_gl_area_get_context(ptr);
ptr gtk_gl_area_get_error(ptr);
int gtk_gl_area_get_has_depth_buffer(ptr);
int gtk_gl_area_get_has_stencil_buffer(ptr);
void gtk_gl_area_get_required_version(ptr, ptr, ptr);
int gtk_gl_area_get_use_es(ptr);
void gtk_gl_area_make_current(ptr);
void gtk_gl_area_queue_render(ptr);
void gtk_gl_area_set_auto_render(ptr, int);
void gtk_gl_area_set_error(ptr, ptr);
void gtk_gl_area_set_has_depth_buffer(ptr, int);
void gtk_gl_area_set_has_stencil_buffer(ptr, int);
void gtk_gl_area_set_required_version(ptr, int, int);
void gtk_gl_area_set_use_es(ptr, int);
int gtk_gesture_get_bounding_box(ptr, ptr);
int gtk_gesture_get_bounding_box_center(ptr, ptr, ptr);
ptr gtk_gesture_get_device(ptr);
ptr gtk_gesture_get_group(ptr);
ptr gtk_gesture_get_last_event(ptr, ptr);
ptr gtk_gesture_get_last_updated_sequence(ptr);
int gtk_gesture_get_point(ptr, ptr, ptr, ptr);
int gtk_gesture_get_sequence_state(ptr, ptr);
ptr gtk_gesture_get_sequences(ptr);
void gtk_gesture_group(ptr, ptr);
int gtk_gesture_handles_sequence(ptr, ptr);
int gtk_gesture_is_active(ptr);
int gtk_gesture_is_grouped_with(ptr, ptr);
int gtk_gesture_is_recognized(ptr);
int gtk_gesture_set_sequence_state(ptr, ptr, int);
int gtk_gesture_set_state(ptr, int);
void gtk_gesture_ungroup(ptr);
ptr gtk_gesture_click_new();
ptr gtk_gesture_drag_new();
int gtk_gesture_drag_get_offset(ptr, ptr, ptr);
int gtk_gesture_drag_get_start_point(ptr, ptr, ptr);
ptr gtk_gesture_long_press_new();
double gtk_gesture_long_press_get_delay_factor(ptr);
void gtk_gesture_long_press_set_delay_factor(ptr, double);
ptr gtk_gesture_pan_new(int);
int gtk_gesture_pan_get_orientation(ptr);
void gtk_gesture_pan_set_orientation(ptr, int);
ptr gtk_gesture_rotate_new();
double gtk_gesture_rotate_get_angle_delta(ptr);
uint gtk_gesture_single_get_button(ptr);
uint gtk_gesture_single_get_current_button(ptr);
ptr gtk_gesture_single_get_current_sequence(ptr);
int gtk_gesture_single_get_exclusive(ptr);
int gtk_gesture_single_get_touch_only(ptr);
void gtk_gesture_single_set_button(ptr, uint);
void gtk_gesture_single_set_exclusive(ptr, int);
void gtk_gesture_single_set_touch_only(ptr, int);
ptr gtk_gesture_stylus_new();
int gtk_gesture_stylus_get_axes(ptr, ptr, ptr);
int gtk_gesture_stylus_get_axis(ptr, int, ptr);
int gtk_gesture_stylus_get_backlog(ptr, ptr, ptr);
ptr gtk_gesture_stylus_get_device_tool(ptr);
ptr gtk_gesture_swipe_new();
int gtk_gesture_swipe_get_velocity(ptr, ptr, ptr);
ptr gtk_gesture_zoom_new();
double gtk_gesture_zoom_get_scale_delta(ptr);
ptr gtk_grid_new();
void gtk_grid_attach(ptr, ptr, int, int, int, int);
void gtk_grid_attach_next_to(ptr, ptr, ptr, int, int, int);
int gtk_grid_get_baseline_row(ptr);
ptr gtk_grid_get_child_at(ptr, int, int);
int gtk_grid_get_column_homogeneous(ptr);
uint gtk_grid_get_column_spacing(ptr);
int gtk_grid_get_row_baseline_position(ptr, int);
int gtk_grid_get_row_homogeneous(ptr);
uint gtk_grid_get_row_spacing(ptr);
void gtk_grid_insert_column(ptr, int);
void gtk_grid_insert_next_to(ptr, ptr, int);
void gtk_grid_insert_row(ptr, int);
void gtk_grid_query_child(ptr, ptr, ptr, ptr, ptr, ptr);
void gtk_grid_remove(ptr, ptr);
void gtk_grid_remove_column(ptr, int);
void gtk_grid_remove_row(ptr, int);
void gtk_grid_set_baseline_row(ptr, int);
void gtk_grid_set_column_homogeneous(ptr, int);
void gtk_grid_set_column_spacing(ptr, uint);
void gtk_grid_set_row_baseline_position(ptr, int, int);
void gtk_grid_set_row_homogeneous(ptr, int);
void gtk_grid_set_row_spacing(ptr, uint);
ptr gtk_grid_layout_new();
int gtk_grid_layout_get_baseline_row(ptr);
int gtk_grid_layout_get_column_homogeneous(ptr);
uint gtk_grid_layout_get_column_spacing(ptr);
int gtk_grid_layout_get_row_baseline_position(ptr, int);
int gtk_grid_layout_get_row_homogeneous(ptr);
uint gtk_grid_layout_get_row_spacing(ptr);
void gtk_grid_layout_set_baseline_row(ptr, int);
void gtk_grid_layout_set_column_homogeneous(ptr, int);
void gtk_grid_layout_set_column_spacing(ptr, uint);
void gtk_grid_layout_set_row_baseline_position(ptr, int, int);
void gtk_grid_layout_set_row_homogeneous(ptr, int);
void gtk_grid_layout_set_row_spacing(ptr, uint);
int gtk_grid_layout_child_get_column(ptr);
int gtk_grid_layout_child_get_column_span(ptr);
int gtk_grid_layout_child_get_row(ptr);
int gtk_grid_layout_child_get_row_span(ptr);
void gtk_grid_layout_child_set_column(ptr, int);
void gtk_grid_layout_child_set_column_span(ptr, int);
void gtk_grid_layout_child_set_row(ptr, int);
void gtk_grid_layout_child_set_row_span(ptr, int);
ptr gtk_grid_view_new(ptr, ptr);
int gtk_grid_view_get_enable_rubberband(ptr);
ptr gtk_grid_view_get_factory(ptr);
uint gtk_grid_view_get_max_columns(ptr);
uint gtk_grid_view_get_min_columns(ptr);
ptr gtk_grid_view_get_model(ptr);
int gtk_grid_view_get_single_click_activate(ptr);
void gtk_grid_view_set_enable_rubberband(ptr, int);
void gtk_grid_view_set_factory(ptr, ptr);
void gtk_grid_view_set_max_columns(ptr, uint);
void gtk_grid_view_set_min_columns(ptr, uint);
void gtk_grid_view_set_model(ptr, ptr);
void gtk_grid_view_set_single_click_activate(ptr, int);
ptr gtk_header_bar_new();
str gtk_header_bar_get_decoration_layout(ptr);
int gtk_header_bar_get_show_title_buttons(ptr);
ptr gtk_header_bar_get_title_widget(ptr);
void gtk_header_bar_pack_end(ptr, ptr);
void gtk_header_bar_pack_start(ptr, ptr);
void gtk_header_bar_remove(ptr, ptr);
void gtk_header_bar_set_decoration_layout(ptr, str);
void gtk_header_bar_set_show_title_buttons(ptr, int);
void gtk_header_bar_set_title_widget(ptr, ptr);
int gtk_im_context_delete_surrounding(ptr, int, int);
int gtk_im_context_filter_key(ptr, int, ptr, ptr, uint, uint, int, int);
int gtk_im_context_filter_keypress(ptr, ptr);
void gtk_im_context_focus_in(ptr);
void gtk_im_context_focus_out(ptr);
void gtk_im_context_get_preedit_string(ptr, ptr, ptr, ptr);
int gtk_im_context_get_surrounding(ptr, ptr, ptr);
int gtk_im_context_get_surrounding_with_selection(ptr, ptr, ptr, ptr);
void gtk_im_context_reset(ptr);
void gtk_im_context_set_client_widget(ptr, ptr);
void gtk_im_context_set_cursor_location(ptr, ptr);
void gtk_im_context_set_surrounding(ptr, str, int, int);
void gtk_im_context_set_surrounding_with_selection(ptr, str, int, int, int);
void gtk_im_context_set_use_preedit(ptr, int);
ptr gtk_im_context_simple_new();
void gtk_im_context_simple_add_compose_file(ptr, str);
ptr gtk_im_multicontext_new();
str gtk_im_multicontext_get_context_id(ptr);
void gtk_im_multicontext_set_context_id(ptr, str);
ptr gtk_icon_paintable_new_for_file(ptr, int, int);
ptr gtk_icon_paintable_get_file(ptr);
ptr gtk_icon_paintable_get_icon_name(ptr);
int gtk_icon_paintable_is_symbolic(ptr);
ptr gtk_icon_theme_new();
ptr gtk_icon_theme_get_for_display(ptr, ptr);
void gtk_icon_theme_add_resource_path(ptr, str);
void gtk_icon_theme_add_search_path(ptr, ptr);
ptr gtk_icon_theme_get_display(ptr);
ptr gtk_icon_theme_get_icon_names(ptr);
ptr gtk_icon_theme_get_icon_sizes(ptr, str);
ptr gtk_icon_theme_get_resource_path(ptr);
ptr gtk_icon_theme_get_search_path(ptr);
ptr gtk_icon_theme_get_theme_name(ptr);
int gtk_icon_theme_has_gicon(ptr, ptr);
int gtk_icon_theme_has_icon(ptr, str);
ptr gtk_icon_theme_lookup_by_gicon(ptr, ptr, int, int, int, int);
ptr gtk_icon_theme_lookup_icon(ptr, str, ptr, int, int, int, int);
void gtk_icon_theme_set_resource_path(ptr, ptr);
void gtk_icon_theme_set_search_path(ptr, ptr);
void gtk_icon_theme_set_theme_name(ptr, str);
ptr gtk_icon_view_new();
ptr gtk_icon_view_new_with_area(ptr);
ptr gtk_icon_view_new_with_model(ptr);
ptr gtk_icon_view_create_drag_icon(ptr, ptr);
void gtk_icon_view_enable_model_drag_dest(ptr, ptr, int);
void gtk_icon_view_enable_model_drag_source(ptr, int, ptr, int);
int gtk_icon_view_get_activate_on_single_click(ptr);
int gtk_icon_view_get_cell_rect(ptr, ptr, ptr, ptr);
int gtk_icon_view_get_column_spacing(ptr);
int gtk_icon_view_get_columns(ptr);
int gtk_icon_view_get_cursor(ptr, ptr, ptr);
int gtk_icon_view_get_dest_item_at_pos(ptr, int, int, ptr, ptr);
void gtk_icon_view_get_drag_dest_item(ptr, ptr, ptr);
int gtk_icon_view_get_item_at_pos(ptr, int, int, ptr, ptr);
int gtk_icon_view_get_item_column(ptr, ptr);
int gtk_icon_view_get_item_orientation(ptr);
int gtk_icon_view_get_item_padding(ptr);
int gtk_icon_view_get_item_row(ptr, ptr);
int gtk_icon_view_get_item_width(ptr);
int gtk_icon_view_get_margin(ptr);
int gtk_icon_view_get_markup_column(ptr);
ptr gtk_icon_view_get_model(ptr);
ptr gtk_icon_view_get_path_at_pos(ptr, int, int);
int gtk_icon_view_get_pixbuf_column(ptr);
int gtk_icon_view_get_reorderable(ptr);
int gtk_icon_view_get_row_spacing(ptr);
ptr gtk_icon_view_get_selected_items(ptr);
int gtk_icon_view_get_selection_mode(ptr);
int gtk_icon_view_get_spacing(ptr);
int gtk_icon_view_get_text_column(ptr);
int gtk_icon_view_get_tooltip_column(ptr);
int gtk_icon_view_get_tooltip_context(ptr, int, int, int, ptr, ptr, ptr);
int gtk_icon_view_get_visible_range(ptr, ptr, ptr);
void gtk_icon_view_item_activated(ptr, ptr);
int gtk_icon_view_path_is_selected(ptr, ptr);
void gtk_icon_view_scroll_to_path(ptr, ptr, int, float, float);
void gtk_icon_view_select_all(ptr);
void gtk_icon_view_select_path(ptr, ptr);
void gtk_icon_view_selected_foreach(ptr, ptr, ptr);
void gtk_icon_view_set_activate_on_single_click(ptr, int);
void gtk_icon_view_set_column_spacing(ptr, int);
void gtk_icon_view_set_columns(ptr, int);
void gtk_icon_view_set_cursor(ptr, ptr, ptr, int);
void gtk_icon_view_set_drag_dest_item(ptr, ptr, int);
void gtk_icon_view_set_item_orientation(ptr, int);
void gtk_icon_view_set_item_padding(ptr, int);
void gtk_icon_view_set_item_width(ptr, int);
void gtk_icon_view_set_margin(ptr, int);
void gtk_icon_view_set_markup_column(ptr, int);
void gtk_icon_view_set_model(ptr, ptr);
void gtk_icon_view_set_pixbuf_column(ptr, int);
void gtk_icon_view_set_reorderable(ptr, int);
void gtk_icon_view_set_row_spacing(ptr, int);
void gtk_icon_view_set_selection_mode(ptr, int);
void gtk_icon_view_set_spacing(ptr, int);
void gtk_icon_view_set_text_column(ptr, int);
void gtk_icon_view_set_tooltip_cell(ptr, ptr, ptr, ptr);
void gtk_icon_view_set_tooltip_column(ptr, int);
void gtk_icon_view_set_tooltip_item(ptr, ptr, ptr);
void gtk_icon_view_unselect_all(ptr);
void gtk_icon_view_unselect_path(ptr, ptr);
void gtk_icon_view_unset_model_drag_dest(ptr);
void gtk_icon_view_unset_model_drag_source(ptr);
ptr gtk_image_new();
ptr gtk_image_new_from_file(ptr);
ptr gtk_image_new_from_gicon(ptr);
ptr gtk_image_new_from_icon_name(str);
ptr gtk_image_new_from_paintable(ptr);
ptr gtk_image_new_from_pixbuf(ptr);
ptr gtk_image_new_from_resource(str);
void gtk_image_clear(ptr);
ptr gtk_image_get_gicon(ptr);
str gtk_image_get_icon_name(ptr);
int gtk_image_get_icon_size(ptr);
ptr gtk_image_get_paintable(ptr);
int gtk_image_get_pixel_size(ptr);
int gtk_image_get_storage_type(ptr);
void gtk_image_set_from_file(ptr, ptr);
void gtk_image_set_from_gicon(ptr, ptr);
void gtk_image_set_from_icon_name(ptr, str);
void gtk_image_set_from_paintable(ptr, ptr);
void gtk_image_set_from_pixbuf(ptr, ptr);
void gtk_image_set_from_resource(ptr, str);
void gtk_image_set_icon_size(ptr, int);
void gtk_image_set_pixel_size(ptr, int);
ptr gtk_info_bar_new();
void gtk_info_bar_add_action_widget(ptr, ptr, int);
ptr gtk_info_bar_add_button(ptr, str, int);
void gtk_info_bar_add_child(ptr, ptr);
int gtk_info_bar_get_message_type(ptr);
int gtk_info_bar_get_revealed(ptr);
int gtk_info_bar_get_show_close_button(ptr);
void gtk_info_bar_remove_action_widget(ptr, ptr);
void gtk_info_bar_remove_child(ptr, ptr);
void gtk_info_bar_response(ptr, int);
void gtk_info_bar_set_default_response(ptr, int);
void gtk_info_bar_set_message_type(ptr, int);
void gtk_info_bar_set_response_sensitive(ptr, int, int);
void gtk_info_bar_set_revealed(ptr, int);
void gtk_info_bar_set_show_close_button(ptr, int);
ptr gtk_keyval_trigger_new(uint, int);
uint gtk_keyval_trigger_get_keyval(ptr);
int gtk_keyval_trigger_get_modifiers(ptr);
ptr gtk_label_new(str);
ptr gtk_label_new_with_mnemonic(str);
ptr gtk_label_get_attributes(ptr);
str gtk_label_get_current_uri(ptr);
int gtk_label_get_ellipsize(ptr);
ptr gtk_label_get_extra_menu(ptr);
int gtk_label_get_justify(ptr);
str gtk_label_get_label(ptr);
ptr gtk_label_get_layout(ptr);
void gtk_label_get_layout_offsets(ptr, ptr, ptr);
int gtk_label_get_lines(ptr);
int gtk_label_get_max_width_chars(ptr);
uint gtk_label_get_mnemonic_keyval(ptr);
ptr gtk_label_get_mnemonic_widget(ptr);
int gtk_label_get_natural_wrap_mode(ptr);
int gtk_label_get_selectable(ptr);
int gtk_label_get_selection_bounds(ptr, ptr, ptr);
int gtk_label_get_single_line_mode(ptr);
str gtk_label_get_text(ptr);
int gtk_label_get_use_markup(ptr);
int gtk_label_get_use_underline(ptr);
int gtk_label_get_width_chars(ptr);
int gtk_label_get_wrap(ptr);
int gtk_label_get_wrap_mode(ptr);
float gtk_label_get_xalign(ptr);
float gtk_label_get_yalign(ptr);
void gtk_label_select_region(ptr, int, int);
void gtk_label_set_attributes(ptr, ptr);
void gtk_label_set_ellipsize(ptr, int);
void gtk_label_set_extra_menu(ptr, ptr);
void gtk_label_set_justify(ptr, int);
void gtk_label_set_label(ptr, str);
void gtk_label_set_lines(ptr, int);
void gtk_label_set_markup(ptr, str);
void gtk_label_set_markup_with_mnemonic(ptr, str);
void gtk_label_set_max_width_chars(ptr, int);
void gtk_label_set_mnemonic_widget(ptr, ptr);
void gtk_label_set_natural_wrap_mode(ptr, int);
void gtk_label_set_selectable(ptr, int);
void gtk_label_set_single_line_mode(ptr, int);
void gtk_label_set_text(ptr, str);
void gtk_label_set_text_with_mnemonic(ptr, str);
void gtk_label_set_use_markup(ptr, int);
void gtk_label_set_use_underline(ptr, int);
void gtk_label_set_width_chars(ptr, int);
void gtk_label_set_wrap(ptr, int);
void gtk_label_set_wrap_mode(ptr, int);
void gtk_label_set_xalign(ptr, float);
void gtk_label_set_yalign(ptr, float);
ptr gtk_layout_child_get_child_widget(ptr);
ptr gtk_layout_child_get_layout_manager(ptr);
void gtk_layout_manager_allocate(ptr, ptr, int, int, int);
ptr gtk_layout_manager_get_layout_child(ptr, ptr);
int gtk_layout_manager_get_request_mode(ptr);
ptr gtk_layout_manager_get_widget(ptr);
void gtk_layout_manager_layout_changed(ptr);
void gtk_layout_manager_measure(ptr, ptr, int, int, ptr, ptr, ptr, ptr);
ptr gtk_level_bar_new();
ptr gtk_level_bar_new_for_interval(double, double);
void gtk_level_bar_add_offset_value(ptr, str, double);
int gtk_level_bar_get_inverted(ptr);
double gtk_level_bar_get_max_value(ptr);
double gtk_level_bar_get_min_value(ptr);
int gtk_level_bar_get_mode(ptr);
int gtk_level_bar_get_offset_value(ptr, str, ptr);
double gtk_level_bar_get_value(ptr);
void gtk_level_bar_remove_offset_value(ptr, str);
void gtk_level_bar_set_inverted(ptr, int);
void gtk_level_bar_set_max_value(ptr, double);
void gtk_level_bar_set_min_value(ptr, double);
void gtk_level_bar_set_mode(ptr, int);
void gtk_level_bar_set_value(ptr, double);
ptr gtk_link_button_new(str);
ptr gtk_link_button_new_with_label(str, str);
str gtk_link_button_get_uri(ptr);
int gtk_link_button_get_visited(ptr);
void gtk_link_button_set_uri(ptr, str);
void gtk_link_button_set_visited(ptr, int);
ptr gtk_list_box_new();
void gtk_list_box_append(ptr, ptr);
void gtk_list_box_bind_model(ptr, ptr, ptr, ptr, ptr);
void gtk_list_box_drag_highlight_row(ptr, ptr);
void gtk_list_box_drag_unhighlight_row(ptr);
int gtk_list_box_get_activate_on_single_click(ptr);
ptr gtk_list_box_get_adjustment(ptr);
ptr gtk_list_box_get_row_at_index(ptr, int);
ptr gtk_list_box_get_row_at_y(ptr, int);
ptr gtk_list_box_get_selected_row(ptr);
ptr gtk_list_box_get_selected_rows(ptr);
int gtk_list_box_get_selection_mode(ptr);
int gtk_list_box_get_show_separators(ptr);
void gtk_list_box_insert(ptr, ptr, int);
void gtk_list_box_invalidate_filter(ptr);
void gtk_list_box_invalidate_headers(ptr);
void gtk_list_box_invalidate_sort(ptr);
void gtk_list_box_prepend(ptr, ptr);
void gtk_list_box_remove(ptr, ptr);
void gtk_list_box_select_all(ptr);
void gtk_list_box_select_row(ptr, ptr);
void gtk_list_box_selected_foreach(ptr, ptr, ptr);
void gtk_list_box_set_activate_on_single_click(ptr, int);
void gtk_list_box_set_adjustment(ptr, ptr);
void gtk_list_box_set_filter_func(ptr, ptr, ptr, ptr);
void gtk_list_box_set_header_func(ptr, ptr, ptr, ptr);
void gtk_list_box_set_placeholder(ptr, ptr);
void gtk_list_box_set_selection_mode(ptr, int);
void gtk_list_box_set_show_separators(ptr, int);
void gtk_list_box_set_sort_func(ptr, ptr, ptr, ptr);
void gtk_list_box_unselect_all(ptr);
void gtk_list_box_unselect_row(ptr, ptr);
ptr gtk_list_box_row_new();
void gtk_list_box_row_changed(ptr);
int gtk_list_box_row_get_activatable(ptr);
ptr gtk_list_box_row_get_child(ptr);
ptr gtk_list_box_row_get_header(ptr);
int gtk_list_box_row_get_index(ptr);
int gtk_list_box_row_get_selectable(ptr);
int gtk_list_box_row_is_selected(ptr);
void gtk_list_box_row_set_activatable(ptr, int);
void gtk_list_box_row_set_child(ptr, ptr);
void gtk_list_box_row_set_header(ptr, ptr);
void gtk_list_box_row_set_selectable(ptr, int);
int gtk_list_item_get_activatable(ptr);
ptr gtk_list_item_get_child(ptr);
ptr gtk_list_item_get_item(ptr);
uint gtk_list_item_get_position(ptr);
int gtk_list_item_get_selectable(ptr);
int gtk_list_item_get_selected(ptr);
void gtk_list_item_set_activatable(ptr, int);
void gtk_list_item_set_child(ptr, ptr);
void gtk_list_item_set_selectable(ptr, int);
ptr gtk_list_store_newv(int, ptr);
void gtk_list_store_append(ptr, ptr);
void gtk_list_store_clear(ptr);
void gtk_list_store_insert(ptr, ptr, int);
void gtk_list_store_insert_after(ptr, ptr, ptr);
void gtk_list_store_insert_before(ptr, ptr, ptr);
void gtk_list_store_insert_with_valuesv(ptr, ptr, int, ptr, ptr, int);
int gtk_list_store_iter_is_valid(ptr, ptr);
void gtk_list_store_move_after(ptr, ptr, ptr);
void gtk_list_store_move_before(ptr, ptr, ptr);
void gtk_list_store_prepend(ptr, ptr);
int gtk_list_store_remove(ptr, ptr);
void gtk_list_store_reorder(ptr, ptr);
void gtk_list_store_set_column_types(ptr, int, ptr);
void gtk_list_store_set_value(ptr, ptr, int, ptr);
void gtk_list_store_set_valuesv(ptr, ptr, ptr, ptr, int);
void gtk_list_store_swap(ptr, ptr, ptr);
ptr gtk_list_view_new(ptr, ptr);
int gtk_list_view_get_enable_rubberband(ptr);
ptr gtk_list_view_get_factory(ptr);
ptr gtk_list_view_get_model(ptr);
int gtk_list_view_get_show_separators(ptr);
int gtk_list_view_get_single_click_activate(ptr);
void gtk_list_view_set_enable_rubberband(ptr, int);
void gtk_list_view_set_factory(ptr, ptr);
void gtk_list_view_set_model(ptr, ptr);
void gtk_list_view_set_show_separators(ptr, int);
void gtk_list_view_set_single_click_activate(ptr, int);
ptr gtk_lock_button_new(ptr);
ptr gtk_lock_button_get_permission(ptr);
void gtk_lock_button_set_permission(ptr, ptr);
ptr gtk_map_list_model_new(ptr, ptr, ptr, ptr);
ptr gtk_map_list_model_get_model(ptr);
int gtk_map_list_model_has_map(ptr);
void gtk_map_list_model_set_map_func(ptr, ptr, ptr, ptr);
void gtk_map_list_model_set_model(ptr, ptr);
ptr gtk_media_controls_new(ptr);
ptr gtk_media_controls_get_media_stream(ptr);
void gtk_media_controls_set_media_stream(ptr, ptr);
ptr gtk_media_file_new();
ptr gtk_media_file_new_for_file(ptr);
ptr gtk_media_file_new_for_filename(ptr);
ptr gtk_media_file_new_for_input_stream(ptr);
ptr gtk_media_file_new_for_resource(str);
void gtk_media_file_clear(ptr);
ptr gtk_media_file_get_file(ptr);
ptr gtk_media_file_get_input_stream(ptr);
void gtk_media_file_set_file(ptr, ptr);
void gtk_media_file_set_filename(ptr, ptr);
void gtk_media_file_set_input_stream(ptr, ptr);
void gtk_media_file_set_resource(ptr, str);
void gtk_media_stream_gerror(ptr, ptr);
long gtk_media_stream_get_duration(ptr);
int gtk_media_stream_get_ended(ptr);
ptr gtk_media_stream_get_error(ptr);
int gtk_media_stream_get_loop(ptr);
int gtk_media_stream_get_muted(ptr);
int gtk_media_stream_get_playing(ptr);
long gtk_media_stream_get_timestamp(ptr);
double gtk_media_stream_get_volume(ptr);
int gtk_media_stream_has_audio(ptr);
int gtk_media_stream_has_video(ptr);
int gtk_media_stream_is_prepared(ptr);
int gtk_media_stream_is_seekable(ptr);
int gtk_media_stream_is_seeking(ptr);
void gtk_media_stream_pause(ptr);
void gtk_media_stream_play(ptr);
void gtk_media_stream_realize(ptr, ptr);
void gtk_media_stream_seek(ptr, long);
void gtk_media_stream_seek_failed(ptr);
void gtk_media_stream_seek_success(ptr);
void gtk_media_stream_set_loop(ptr, int);
void gtk_media_stream_set_muted(ptr, int);
void gtk_media_stream_set_playing(ptr, int);
void gtk_media_stream_set_volume(ptr, double);
void gtk_media_stream_stream_ended(ptr);
void gtk_media_stream_stream_prepared(ptr, int, int, int, long);
void gtk_media_stream_stream_unprepared(ptr);
void gtk_media_stream_unrealize(ptr, ptr);
void gtk_media_stream_update(ptr, long);
ptr gtk_menu_button_new();
int gtk_menu_button_get_always_show_arrow(ptr);
ptr gtk_menu_button_get_child(ptr);
int gtk_menu_button_get_direction(ptr);
int gtk_menu_button_get_has_frame(ptr);
str gtk_menu_button_get_icon_name(ptr);
str gtk_menu_button_get_label(ptr);
ptr gtk_menu_button_get_menu_model(ptr);
ptr gtk_menu_button_get_popover(ptr);
int gtk_menu_button_get_primary(ptr);
int gtk_menu_button_get_use_underline(ptr);
void gtk_menu_button_popdown(ptr);
void gtk_menu_button_popup(ptr);
void gtk_menu_button_set_always_show_arrow(ptr, int);
void gtk_menu_button_set_child(ptr, ptr);
void gtk_menu_button_set_create_popup_func(ptr, ptr, ptr, ptr);
void gtk_menu_button_set_direction(ptr, int);
void gtk_menu_button_set_has_frame(ptr, int);
void gtk_menu_button_set_icon_name(ptr, str);
void gtk_menu_button_set_label(ptr, str);
void gtk_menu_button_set_menu_model(ptr, ptr);
void gtk_menu_button_set_popover(ptr, ptr);
void gtk_menu_button_set_primary(ptr, int);
void gtk_menu_button_set_use_underline(ptr, int);
ptr gtk_message_dialog_get_message_area(ptr);
void gtk_message_dialog_set_markup(ptr, str);
ptr gtk_mnemonic_action_get(ptr);
ptr gtk_mnemonic_trigger_new(uint);
uint gtk_mnemonic_trigger_get_keyval(ptr);
ptr gtk_mount_operation_new(ptr);
ptr gtk_mount_operation_get_display(ptr);
ptr gtk_mount_operation_get_parent(ptr);
int gtk_mount_operation_is_showing(ptr);
void gtk_mount_operation_set_display(ptr, ptr);
void gtk_mount_operation_set_parent(ptr, ptr);
void gtk_multi_filter_append(ptr, ptr);
void gtk_multi_filter_remove(ptr, uint);
ptr gtk_multi_selection_new(ptr);
ptr gtk_multi_selection_get_model(ptr);
void gtk_multi_selection_set_model(ptr, ptr);
ptr gtk_multi_sorter_new();
void gtk_multi_sorter_append(ptr, ptr);
void gtk_multi_sorter_remove(ptr, uint);
ptr gtk_named_action_new(str);
str gtk_named_action_get_action_name(ptr);
ptr gtk_native_get_for_surface(ptr, ptr);
ptr gtk_native_get_renderer(ptr);
ptr gtk_native_get_surface(ptr);
void gtk_native_get_surface_transform(ptr, ptr, ptr);
void gtk_native_realize(ptr);
void gtk_native_unrealize(ptr);
void gtk_native_dialog_destroy(ptr);
int gtk_native_dialog_get_modal(ptr);
str gtk_native_dialog_get_title(ptr);
ptr gtk_native_dialog_get_transient_for(ptr);
int gtk_native_dialog_get_visible(ptr);
void gtk_native_dialog_hide(ptr);
void gtk_native_dialog_set_modal(ptr, int);
void gtk_native_dialog_set_title(ptr, str);
void gtk_native_dialog_set_transient_for(ptr, ptr);
void gtk_native_dialog_show(ptr);
ptr gtk_never_trigger_get(ptr);
ptr gtk_no_selection_new(ptr);
ptr gtk_no_selection_get_model(ptr);
void gtk_no_selection_set_model(ptr, ptr);
ptr gtk_notebook_new();
int gtk_notebook_append_page(ptr, ptr, ptr);
int gtk_notebook_append_page_menu(ptr, ptr, ptr, ptr);
void gtk_notebook_detach_tab(ptr, ptr);
ptr gtk_notebook_get_action_widget(ptr, int);
int gtk_notebook_get_current_page(ptr);
str gtk_notebook_get_group_name(ptr);
ptr gtk_notebook_get_menu_label(ptr, ptr);
str gtk_notebook_get_menu_label_text(ptr, ptr);
int gtk_notebook_get_n_pages(ptr);
ptr gtk_notebook_get_nth_page(ptr, int);
ptr gtk_notebook_get_page(ptr, ptr);
ptr gtk_notebook_get_pages(ptr);
int gtk_notebook_get_scrollable(ptr);
int gtk_notebook_get_show_border(ptr);
int gtk_notebook_get_show_tabs(ptr);
int gtk_notebook_get_tab_detachable(ptr, ptr);
ptr gtk_notebook_get_tab_label(ptr, ptr);
str gtk_notebook_get_tab_label_text(ptr, ptr);
int gtk_notebook_get_tab_pos(ptr);
int gtk_notebook_get_tab_reorderable(ptr, ptr);
int gtk_notebook_insert_page(ptr, ptr, ptr, int);
int gtk_notebook_insert_page_menu(ptr, ptr, ptr, ptr, int);
void gtk_notebook_next_page(ptr);
int gtk_notebook_page_num(ptr, ptr);
void gtk_notebook_popup_disable(ptr);
void gtk_notebook_popup_enable(ptr);
int gtk_notebook_prepend_page(ptr, ptr, ptr);
int gtk_notebook_prepend_page_menu(ptr, ptr, ptr, ptr);
void gtk_notebook_prev_page(ptr);
void gtk_notebook_remove_page(ptr, int);
void gtk_notebook_reorder_child(ptr, ptr, int);
void gtk_notebook_set_action_widget(ptr, ptr, int);
void gtk_notebook_set_current_page(ptr, int);
void gtk_notebook_set_group_name(ptr, str);
void gtk_notebook_set_menu_label(ptr, ptr, ptr);
void gtk_notebook_set_menu_label_text(ptr, ptr, str);
void gtk_notebook_set_scrollable(ptr, int);
void gtk_notebook_set_show_border(ptr, int);
void gtk_notebook_set_show_tabs(ptr, int);
void gtk_notebook_set_tab_detachable(ptr, ptr, int);
void gtk_notebook_set_tab_label(ptr, ptr, ptr);
void gtk_notebook_set_tab_label_text(ptr, ptr, str);
void gtk_notebook_set_tab_pos(ptr, int);
void gtk_notebook_set_tab_reorderable(ptr, ptr, int);
ptr gtk_notebook_page_get_child(ptr);
ptr gtk_nothing_action_get(ptr);
ptr gtk_numeric_sorter_new(ptr);
ptr gtk_numeric_sorter_get_expression(ptr);
int gtk_numeric_sorter_get_sort_order(ptr);
void gtk_numeric_sorter_set_expression(ptr, ptr);
void gtk_numeric_sorter_set_sort_order(ptr, int);
ptr gtk_object_expression_new(ptr);
ptr gtk_object_expression_get_object(ptr);
int gtk_orientable_get_orientation(ptr);
void gtk_orientable_set_orientation(ptr, int);
ptr gtk_overlay_new();
void gtk_overlay_add_overlay(ptr, ptr);
ptr gtk_overlay_get_child(ptr);
int gtk_overlay_get_clip_overlay(ptr, ptr);
int gtk_overlay_get_measure_overlay(ptr, ptr);
void gtk_overlay_remove_overlay(ptr, ptr);
void gtk_overlay_set_child(ptr, ptr);
void gtk_overlay_set_clip_overlay(ptr, ptr, int);
void gtk_overlay_set_measure_overlay(ptr, ptr, int);
ptr gtk_overlay_layout_new();
int gtk_overlay_layout_child_get_clip_overlay(ptr);
int gtk_overlay_layout_child_get_measure(ptr);
void gtk_overlay_layout_child_set_clip_overlay(ptr, int);
void gtk_overlay_layout_child_set_measure(ptr, int);
ptr gtk_pad_controller_new(ptr, ptr);
void gtk_pad_controller_set_action(ptr, int, int, int, str, str);
void gtk_pad_controller_set_action_entries(ptr, ptr, int);
ptr gtk_page_setup_new();
ptr gtk_page_setup_new_from_file(ptr, ptr);
ptr gtk_page_setup_new_from_gvariant(ptr);
ptr gtk_page_setup_new_from_key_file(ptr, str, ptr);
ptr gtk_page_setup_copy(ptr);
double gtk_page_setup_get_bottom_margin(ptr, int);
double gtk_page_setup_get_left_margin(ptr, int);
int gtk_page_setup_get_orientation(ptr);
double gtk_page_setup_get_page_height(ptr, int);
double gtk_page_setup_get_page_width(ptr, int);
double gtk_page_setup_get_paper_height(ptr, int);
ptr gtk_page_setup_get_paper_size(ptr);
double gtk_page_setup_get_paper_width(ptr, int);
double gtk_page_setup_get_right_margin(ptr, int);
double gtk_page_setup_get_top_margin(ptr, int);
int gtk_page_setup_load_file(ptr, ptr, ptr);
int gtk_page_setup_load_key_file(ptr, ptr, str, ptr);
void gtk_page_setup_set_bottom_margin(ptr, double, int);
void gtk_page_setup_set_left_margin(ptr, double, int);
void gtk_page_setup_set_orientation(ptr, int);
void gtk_page_setup_set_paper_size(ptr, ptr);
void gtk_page_setup_set_paper_size_and_default_margins(ptr, ptr);
void gtk_page_setup_set_right_margin(ptr, double, int);
void gtk_page_setup_set_top_margin(ptr, double, int);
int gtk_page_setup_to_file(ptr, ptr, ptr);
ptr gtk_page_setup_to_gvariant(ptr);
void gtk_page_setup_to_key_file(ptr, ptr, str);
ptr gtk_page_setup_unix_dialog_new(str, ptr);
ptr gtk_page_setup_unix_dialog_get_page_setup(ptr);
ptr gtk_page_setup_unix_dialog_get_print_settings(ptr);
void gtk_page_setup_unix_dialog_set_page_setup(ptr, ptr);
void gtk_page_setup_unix_dialog_set_print_settings(ptr, ptr);
ptr gtk_paned_new(int);
ptr gtk_paned_get_end_child(ptr);
int gtk_paned_get_position(ptr);
int gtk_paned_get_resize_end_child(ptr);
int gtk_paned_get_resize_start_child(ptr);
int gtk_paned_get_shrink_end_child(ptr);
int gtk_paned_get_shrink_start_child(ptr);
ptr gtk_paned_get_start_child(ptr);
int gtk_paned_get_wide_handle(ptr);
void gtk_paned_set_end_child(ptr, ptr);
void gtk_paned_set_position(ptr, int);
void gtk_paned_set_resize_end_child(ptr, int);
void gtk_paned_set_resize_start_child(ptr, int);
void gtk_paned_set_shrink_end_child(ptr, int);
void gtk_paned_set_shrink_start_child(ptr, int);
void gtk_paned_set_start_child(ptr, ptr);
void gtk_paned_set_wide_handle(ptr, int);
ptr gtk_paper_size_new(str);
ptr gtk_paper_size_new_custom(str, str, double, double, int);
ptr gtk_paper_size_new_from_gvariant(ptr);
ptr gtk_paper_size_new_from_ipp(str, double, double);
ptr gtk_paper_size_new_from_key_file(ptr, str, ptr);
ptr gtk_paper_size_new_from_ppd(str, str, double, double);
ptr gtk_paper_size_copy(ptr);
void gtk_paper_size_free(ptr);
double gtk_paper_size_get_default_bottom_margin(ptr, int);
double gtk_paper_size_get_default_left_margin(ptr, int);
double gtk_paper_size_get_default_right_margin(ptr, int);
double gtk_paper_size_get_default_top_margin(ptr, int);
str gtk_paper_size_get_display_name(ptr);
double gtk_paper_size_get_height(ptr, int);
str gtk_paper_size_get_name(ptr);
str gtk_paper_size_get_ppd_name(ptr);
double gtk_paper_size_get_width(ptr, int);
int gtk_paper_size_is_custom(ptr);
int gtk_paper_size_is_equal(ptr, ptr);
int gtk_paper_size_is_ipp(ptr);
void gtk_paper_size_set_size(ptr, double, double, int);
ptr gtk_paper_size_to_gvariant(ptr);
void gtk_paper_size_to_key_file(ptr, ptr, str);
str gtk_paper_size_get_default(ptr);
ptr gtk_paper_size_get_paper_sizes(ptr, int);
ptr gtk_password_entry_new();
ptr gtk_password_entry_get_extra_menu(ptr);
int gtk_password_entry_get_show_peek_icon(ptr);
void gtk_password_entry_set_extra_menu(ptr, ptr);
void gtk_password_entry_set_show_peek_icon(ptr, int);
ptr gtk_password_entry_buffer_new();
ptr gtk_picture_new();
ptr gtk_picture_new_for_file(ptr);
ptr gtk_picture_new_for_filename(ptr);
ptr gtk_picture_new_for_paintable(ptr);
ptr gtk_picture_new_for_pixbuf(ptr);
ptr gtk_picture_new_for_resource(str);
str gtk_picture_get_alternative_text(ptr);
int gtk_picture_get_can_shrink(ptr);
ptr gtk_picture_get_file(ptr);
int gtk_picture_get_keep_aspect_ratio(ptr);
ptr gtk_picture_get_paintable(ptr);
void gtk_picture_set_alternative_text(ptr, str);
void gtk_picture_set_can_shrink(ptr, int);
void gtk_picture_set_file(ptr, ptr);
void gtk_picture_set_filename(ptr, ptr);
void gtk_picture_set_keep_aspect_ratio(ptr, int);
void gtk_picture_set_paintable(ptr, ptr);
void gtk_picture_set_pixbuf(ptr, ptr);
void gtk_picture_set_resource(ptr, str);
ptr gtk_popover_new();
int gtk_popover_get_autohide(ptr);
int gtk_popover_get_cascade_popdown(ptr);
ptr gtk_popover_get_child(ptr);
int gtk_popover_get_has_arrow(ptr);
int gtk_popover_get_mnemonics_visible(ptr);
void gtk_popover_get_offset(ptr, ptr, ptr);
int gtk_popover_get_pointing_to(ptr, ptr);
int gtk_popover_get_position(ptr);
void gtk_popover_popdown(ptr);
void gtk_popover_popup(ptr);
void gtk_popover_present(ptr);
void gtk_popover_set_autohide(ptr, int);
void gtk_popover_set_cascade_popdown(ptr, int);
void gtk_popover_set_child(ptr, ptr);
void gtk_popover_set_default_widget(ptr, ptr);
void gtk_popover_set_has_arrow(ptr, int);
void gtk_popover_set_mnemonics_visible(ptr, int);
void gtk_popover_set_offset(ptr, int, int);
void gtk_popover_set_pointing_to(ptr, ptr);
void gtk_popover_set_position(ptr, int);
ptr gtk_popover_menu_new_from_model(ptr);
ptr gtk_popover_menu_new_from_model_full(ptr, int);
int gtk_popover_menu_add_child(ptr, ptr, str);
ptr gtk_popover_menu_get_menu_model(ptr);
int gtk_popover_menu_remove_child(ptr, ptr);
void gtk_popover_menu_set_menu_model(ptr, ptr);
ptr gtk_popover_menu_bar_new_from_model(ptr);
int gtk_popover_menu_bar_add_child(ptr, ptr, str);
ptr gtk_popover_menu_bar_get_menu_model(ptr);
int gtk_popover_menu_bar_remove_child(ptr, ptr);
void gtk_popover_menu_bar_set_menu_model(ptr, ptr);
ptr gtk_print_context_create_pango_context(ptr);
ptr gtk_print_context_create_pango_layout(ptr);
ptr gtk_print_context_get_cairo_context(ptr);
double gtk_print_context_get_dpi_x(ptr);
double gtk_print_context_get_dpi_y(ptr);
int gtk_print_context_get_hard_margins(ptr, ptr, ptr, ptr, ptr);
double gtk_print_context_get_height(ptr);
ptr gtk_print_context_get_page_setup(ptr);
ptr gtk_print_context_get_pango_fontmap(ptr);
double gtk_print_context_get_width(ptr);
void gtk_print_context_set_cairo_context(ptr, ptr, double, double);
ptr gtk_print_job_new(str, ptr, ptr, ptr);
int gtk_print_job_get_collate(ptr);
uint gtk_print_job_get_n_up(ptr);
int gtk_print_job_get_n_up_layout(ptr);
int gtk_print_job_get_num_copies(ptr);
ptr gtk_print_job_get_page_ranges(ptr, ptr);
int gtk_print_job_get_page_set(ptr);
int gtk_print_job_get_pages(ptr);
ptr gtk_print_job_get_printer(ptr);
int gtk_print_job_get_reverse(ptr);
int gtk_print_job_get_rotate(ptr);
double gtk_print_job_get_scale(ptr);
ptr gtk_print_job_get_settings(ptr);
int gtk_print_job_get_status(ptr);
ptr gtk_print_job_get_surface(ptr, ptr);
str gtk_print_job_get_title(ptr);
int gtk_print_job_get_track_print_status(ptr);
void gtk_print_job_send(ptr, ptr, ptr, ptr);
void gtk_print_job_set_collate(ptr, int);
void gtk_print_job_set_n_up(ptr, uint);
void gtk_print_job_set_n_up_layout(ptr, int);
void gtk_print_job_set_num_copies(ptr, int);
void gtk_print_job_set_page_ranges(ptr, ptr, int);
void gtk_print_job_set_page_set(ptr, int);
void gtk_print_job_set_pages(ptr, int);
void gtk_print_job_set_reverse(ptr, int);
void gtk_print_job_set_rotate(ptr, int);
void gtk_print_job_set_scale(ptr, double);
int gtk_print_job_set_source_fd(ptr, int, ptr);
int gtk_print_job_set_source_file(ptr, ptr, ptr);
void gtk_print_job_set_track_print_status(ptr, int);
ptr gtk_print_operation_new();
void gtk_print_operation_cancel(ptr);
void gtk_print_operation_draw_page_finish(ptr);
ptr gtk_print_operation_get_default_page_setup(ptr);
int gtk_print_operation_get_embed_page_setup(ptr);
void gtk_print_operation_get_error(ptr, ptr);
int gtk_print_operation_get_has_selection(ptr);
int gtk_print_operation_get_n_pages_to_print(ptr);
ptr gtk_print_operation_get_print_settings(ptr);
int gtk_print_operation_get_status(ptr);
str gtk_print_operation_get_status_string(ptr);
int gtk_print_operation_get_support_selection(ptr);
int gtk_print_operation_is_finished(ptr);
int gtk_print_operation_run(ptr, int, ptr, ptr);
void gtk_print_operation_set_allow_async(ptr, int);
void gtk_print_operation_set_current_page(ptr, int);
void gtk_print_operation_set_custom_tab_label(ptr, str);
void gtk_print_operation_set_default_page_setup(ptr, ptr);
void gtk_print_operation_set_defer_drawing(ptr);
void gtk_print_operation_set_embed_page_setup(ptr, int);
void gtk_print_operation_set_export_filename(ptr, ptr);
void gtk_print_operation_set_has_selection(ptr, int);
void gtk_print_operation_set_job_name(ptr, str);
void gtk_print_operation_set_n_pages(ptr, int);
void gtk_print_operation_set_print_settings(ptr, ptr);
void gtk_print_operation_set_show_progress(ptr, int);
void gtk_print_operation_set_support_selection(ptr, int);
void gtk_print_operation_set_track_print_status(ptr, int);
void gtk_print_operation_set_unit(ptr, int);
void gtk_print_operation_set_use_full_page(ptr, int);
void gtk_print_operation_preview_end_preview(ptr);
int gtk_print_operation_preview_is_selected(ptr, int);
void gtk_print_operation_preview_render_page(ptr, int);
ptr gtk_print_settings_new();
ptr gtk_print_settings_new_from_file(ptr, ptr);
ptr gtk_print_settings_new_from_gvariant(ptr);
ptr gtk_print_settings_new_from_key_file(ptr, str, ptr);
ptr gtk_print_settings_copy(ptr);
void gtk_print_settings_foreach(ptr, ptr, ptr);
str gtk_print_settings_get(ptr, str);
int gtk_print_settings_get_bool(ptr, str);
int gtk_print_settings_get_collate(ptr);
str gtk_print_settings_get_default_source(ptr);
str gtk_print_settings_get_dither(ptr);
double gtk_print_settings_get_double(ptr, str);
double gtk_print_settings_get_double_with_default(ptr, str, double);
int gtk_print_settings_get_duplex(ptr);
str gtk_print_settings_get_finishings(ptr);
int gtk_print_settings_get_int(ptr, str);
int gtk_print_settings_get_int_with_default(ptr, str, int);
double gtk_print_settings_get_length(ptr, str, int);
str gtk_print_settings_get_media_type(ptr);
int gtk_print_settings_get_n_copies(ptr);
int gtk_print_settings_get_number_up(ptr);
int gtk_print_settings_get_number_up_layout(ptr);
int gtk_print_settings_get_orientation(ptr);
str gtk_print_settings_get_output_bin(ptr);
ptr gtk_print_settings_get_page_ranges(ptr, ptr);
int gtk_print_settings_get_page_set(ptr);
double gtk_print_settings_get_paper_height(ptr, int);
ptr gtk_print_settings_get_paper_size(ptr);
double gtk_print_settings_get_paper_width(ptr, int);
int gtk_print_settings_get_print_pages(ptr);
str gtk_print_settings_get_printer(ptr);
double gtk_print_settings_get_printer_lpi(ptr);
int gtk_print_settings_get_quality(ptr);
int gtk_print_settings_get_resolution(ptr);
int gtk_print_settings_get_resolution_x(ptr);
int gtk_print_settings_get_resolution_y(ptr);
int gtk_print_settings_get_reverse(ptr);
double gtk_print_settings_get_scale(ptr);
int gtk_print_settings_get_use_color(ptr);
int gtk_print_settings_has_key(ptr, str);
int gtk_print_settings_load_file(ptr, ptr, ptr);
int gtk_print_settings_load_key_file(ptr, ptr, str, ptr);
void gtk_print_settings_set(ptr, str, str);
void gtk_print_settings_set_bool(ptr, str, int);
void gtk_print_settings_set_collate(ptr, int);
void gtk_print_settings_set_default_source(ptr, str);
void gtk_print_settings_set_dither(ptr, str);
void gtk_print_settings_set_double(ptr, str, double);
void gtk_print_settings_set_duplex(ptr, int);
void gtk_print_settings_set_finishings(ptr, str);
void gtk_print_settings_set_int(ptr, str, int);
void gtk_print_settings_set_length(ptr, str, double, int);
void gtk_print_settings_set_media_type(ptr, str);
void gtk_print_settings_set_n_copies(ptr, int);
void gtk_print_settings_set_number_up(ptr, int);
void gtk_print_settings_set_number_up_layout(ptr, int);
void gtk_print_settings_set_orientation(ptr, int);
void gtk_print_settings_set_output_bin(ptr, str);
void gtk_print_settings_set_page_ranges(ptr, ptr, int);
void gtk_print_settings_set_page_set(ptr, int);
void gtk_print_settings_set_paper_height(ptr, double, int);
void gtk_print_settings_set_paper_size(ptr, ptr);
void gtk_print_settings_set_paper_width(ptr, double, int);
void gtk_print_settings_set_print_pages(ptr, int);
void gtk_print_settings_set_printer(ptr, str);
void gtk_print_settings_set_printer_lpi(ptr, double);
void gtk_print_settings_set_quality(ptr, int);
void gtk_print_settings_set_resolution(ptr, int);
void gtk_print_settings_set_resolution_xy(ptr, int, int);
void gtk_print_settings_set_reverse(ptr, int);
void gtk_print_settings_set_scale(ptr, double);
void gtk_print_settings_set_use_color(ptr, int);
int gtk_print_settings_to_file(ptr, ptr, ptr);
ptr gtk_print_settings_to_gvariant(ptr);
void gtk_print_settings_to_key_file(ptr, ptr, str);
void gtk_print_settings_unset(ptr, str);
ptr gtk_print_unix_dialog_new(str, ptr);
void gtk_print_unix_dialog_add_custom_tab(ptr, ptr, ptr);
int gtk_print_unix_dialog_get_current_page(ptr);
int gtk_print_unix_dialog_get_embed_page_setup(ptr);
int gtk_print_unix_dialog_get_has_selection(ptr);
int gtk_print_unix_dialog_get_manual_capabilities(ptr);
ptr gtk_print_unix_dialog_get_page_setup(ptr);
int gtk_print_unix_dialog_get_page_setup_set(ptr);
ptr gtk_print_unix_dialog_get_selected_printer(ptr);
ptr gtk_print_unix_dialog_get_settings(ptr);
int gtk_print_unix_dialog_get_support_selection(ptr);
void gtk_print_unix_dialog_set_current_page(ptr, int);
void gtk_print_unix_dialog_set_embed_page_setup(ptr, int);
void gtk_print_unix_dialog_set_has_selection(ptr, int);
void gtk_print_unix_dialog_set_manual_capabilities(ptr, int);
void gtk_print_unix_dialog_set_page_setup(ptr, ptr);
void gtk_print_unix_dialog_set_settings(ptr, ptr);
void gtk_print_unix_dialog_set_support_selection(ptr, int);
ptr gtk_printer_new(str, ptr, int);
int gtk_printer_accepts_pdf(ptr);
int gtk_printer_accepts_ps(ptr);
int gtk_printer_compare(ptr, ptr);
ptr gtk_printer_get_backend(ptr);
int gtk_printer_get_capabilities(ptr);
ptr gtk_printer_get_default_page_size(ptr);
str gtk_printer_get_description(ptr);
int gtk_printer_get_hard_margins(ptr, ptr, ptr, ptr, ptr);
int gtk_printer_get_hard_margins_for_paper_size(ptr, ptr, ptr, ptr, ptr, ptr);
str gtk_printer_get_icon_name(ptr);
int gtk_printer_get_job_count(ptr);
str gtk_printer_get_location(ptr);
str gtk_printer_get_name(ptr);
str gtk_printer_get_state_message(ptr);
int gtk_printer_has_details(ptr);
int gtk_printer_is_accepting_jobs(ptr);
int gtk_printer_is_active(ptr);
int gtk_printer_is_default(ptr);
int gtk_printer_is_paused(ptr);
int gtk_printer_is_virtual(ptr);
ptr gtk_printer_list_papers(ptr);
void gtk_printer_request_details(ptr);
ptr gtk_progress_bar_new();
int gtk_progress_bar_get_ellipsize(ptr);
double gtk_progress_bar_get_fraction(ptr);
int gtk_progress_bar_get_inverted(ptr);
double gtk_progress_bar_get_pulse_step(ptr);
int gtk_progress_bar_get_show_text(ptr);
str gtk_progress_bar_get_text(ptr);
void gtk_progress_bar_pulse(ptr);
void gtk_progress_bar_set_ellipsize(ptr, int);
void gtk_progress_bar_set_fraction(ptr, double);
void gtk_progress_bar_set_inverted(ptr, int);
void gtk_progress_bar_set_pulse_step(ptr, double);
void gtk_progress_bar_set_show_text(ptr, int);
void gtk_progress_bar_set_text(ptr, str);
ptr gtk_property_expression_new(ulong, ptr, str);
ptr gtk_property_expression_new_for_pspec(ptr, ptr);
ptr gtk_property_expression_get_expression(ptr);
ptr gtk_property_expression_get_pspec(ptr);
ptr gtk_range_get_adjustment(ptr);
double gtk_range_get_fill_level(ptr);
int gtk_range_get_flippable(ptr);
int gtk_range_get_inverted(ptr);
void gtk_range_get_range_rect(ptr, ptr);
int gtk_range_get_restrict_to_fill_level(ptr);
int gtk_range_get_round_digits(ptr);
int gtk_range_get_show_fill_level(ptr);
void gtk_range_get_slider_range(ptr, ptr, ptr);
int gtk_range_get_slider_size_fixed(ptr);
double gtk_range_get_value(ptr);
void gtk_range_set_adjustment(ptr, ptr);
void gtk_range_set_fill_level(ptr, double);
void gtk_range_set_flippable(ptr, int);
void gtk_range_set_increments(ptr, double, double);
void gtk_range_set_inverted(ptr, int);
void gtk_range_set_range(ptr, double, double);
void gtk_range_set_restrict_to_fill_level(ptr, int);
void gtk_range_set_round_digits(ptr, int);
void gtk_range_set_show_fill_level(ptr, int);
void gtk_range_set_slider_size_fixed(ptr, int);
void gtk_range_set_value(ptr, double);
ptr gtk_recent_info_create_app_info(ptr, str, ptr);
int gtk_recent_info_exists(ptr);
ptr gtk_recent_info_get_added(ptr);
int gtk_recent_info_get_age(ptr);
int gtk_recent_info_get_application_info(ptr, str, str, ptr, ptr);
ptr gtk_recent_info_get_applications(ptr, ptr);
str gtk_recent_info_get_description(ptr);
str gtk_recent_info_get_display_name(ptr);
ptr gtk_recent_info_get_gicon(ptr);
ptr gtk_recent_info_get_groups(ptr, ptr);
str gtk_recent_info_get_mime_type(ptr);
ptr gtk_recent_info_get_modified(ptr);
int gtk_recent_info_get_private_hint(ptr);
ptr gtk_recent_info_get_short_name(ptr);
str gtk_recent_info_get_uri(ptr);
ptr gtk_recent_info_get_uri_display(ptr);
ptr gtk_recent_info_get_visited(ptr);
int gtk_recent_info_has_application(ptr, str);
int gtk_recent_info_has_group(ptr, str);
int gtk_recent_info_is_local(ptr);
ptr gtk_recent_info_last_application(ptr);
int gtk_recent_info_match(ptr, ptr);
ptr gtk_recent_info_ref(ptr);
void gtk_recent_info_unref(ptr);
ptr gtk_recent_manager_new();
ptr gtk_recent_manager_get_default(ptr);
int gtk_recent_manager_add_full(ptr, str, ptr);
int gtk_recent_manager_add_item(ptr, str);
ptr gtk_recent_manager_get_items(ptr);
int gtk_recent_manager_has_item(ptr, str);
ptr gtk_recent_manager_lookup_item(ptr, str, ptr);
int gtk_recent_manager_move_item(ptr, str, str, ptr);
int gtk_recent_manager_purge_items(ptr, ptr);
int gtk_recent_manager_remove_item(ptr, str, ptr);
ptr gtk_requisition_new();
ptr gtk_requisition_copy(ptr);
void gtk_requisition_free(ptr);
ptr gtk_revealer_new();
ptr gtk_revealer_get_child(ptr);
int gtk_revealer_get_child_revealed(ptr);
int gtk_revealer_get_reveal_child(ptr);
uint gtk_revealer_get_transition_duration(ptr);
int gtk_revealer_get_transition_type(ptr);
void gtk_revealer_set_child(ptr, ptr);
void gtk_revealer_set_reveal_child(ptr, int);
void gtk_revealer_set_transition_duration(ptr, uint);
void gtk_revealer_set_transition_type(ptr, int);
ptr gtk_root_get_display(ptr);
ptr gtk_root_get_focus(ptr);
void gtk_root_set_focus(ptr, ptr);
ptr gtk_scale_new(int, ptr);
ptr gtk_scale_new_with_range(int, double, double, double);
void gtk_scale_add_mark(ptr, double, int, str);
void gtk_scale_clear_marks(ptr);
int gtk_scale_get_digits(ptr);
int gtk_scale_get_draw_value(ptr);
int gtk_scale_get_has_origin(ptr);
ptr gtk_scale_get_layout(ptr);
void gtk_scale_get_layout_offsets(ptr, ptr, ptr);
int gtk_scale_get_value_pos(ptr);
void gtk_scale_set_digits(ptr, int);
void gtk_scale_set_draw_value(ptr, int);
void gtk_scale_set_format_value_func(ptr, ptr, ptr, ptr);
void gtk_scale_set_has_origin(ptr, int);
void gtk_scale_set_value_pos(ptr, int);
ptr gtk_scale_button_new(double, double, double, ptr);
ptr gtk_scale_button_get_adjustment(ptr);
ptr gtk_scale_button_get_minus_button(ptr);
ptr gtk_scale_button_get_plus_button(ptr);
ptr gtk_scale_button_get_popup(ptr);
double gtk_scale_button_get_value(ptr);
void gtk_scale_button_set_adjustment(ptr, ptr);
void gtk_scale_button_set_icons(ptr, ptr);
void gtk_scale_button_set_value(ptr, double);
int gtk_scrollable_get_border(ptr, ptr);
ptr gtk_scrollable_get_hadjustment(ptr);
int gtk_scrollable_get_hscroll_policy(ptr);
ptr gtk_scrollable_get_vadjustment(ptr);
int gtk_scrollable_get_vscroll_policy(ptr);
void gtk_scrollable_set_hadjustment(ptr, ptr);
void gtk_scrollable_set_hscroll_policy(ptr, int);
void gtk_scrollable_set_vadjustment(ptr, ptr);
void gtk_scrollable_set_vscroll_policy(ptr, int);
ptr gtk_scrollbar_new(int, ptr);
ptr gtk_scrollbar_get_adjustment(ptr);
void gtk_scrollbar_set_adjustment(ptr, ptr);
ptr gtk_scrolled_window_new();
ptr gtk_scrolled_window_get_child(ptr);
ptr gtk_scrolled_window_get_hadjustment(ptr);
int gtk_scrolled_window_get_has_frame(ptr);
ptr gtk_scrolled_window_get_hscrollbar(ptr);
int gtk_scrolled_window_get_kinetic_scrolling(ptr);
int gtk_scrolled_window_get_max_content_height(ptr);
int gtk_scrolled_window_get_max_content_width(ptr);
int gtk_scrolled_window_get_min_content_height(ptr);
int gtk_scrolled_window_get_min_content_width(ptr);
int gtk_scrolled_window_get_overlay_scrolling(ptr);
int gtk_scrolled_window_get_placement(ptr);
void gtk_scrolled_window_get_policy(ptr, ptr, ptr);
int gtk_scrolled_window_get_propagate_natural_height(ptr);
int gtk_scrolled_window_get_propagate_natural_width(ptr);
ptr gtk_scrolled_window_get_vadjustment(ptr);
ptr gtk_scrolled_window_get_vscrollbar(ptr);
void gtk_scrolled_window_set_child(ptr, ptr);
void gtk_scrolled_window_set_hadjustment(ptr, ptr);
void gtk_scrolled_window_set_has_frame(ptr, int);
void gtk_scrolled_window_set_kinetic_scrolling(ptr, int);
void gtk_scrolled_window_set_max_content_height(ptr, int);
void gtk_scrolled_window_set_max_content_width(ptr, int);
void gtk_scrolled_window_set_min_content_height(ptr, int);
void gtk_scrolled_window_set_min_content_width(ptr, int);
void gtk_scrolled_window_set_overlay_scrolling(ptr, int);
void gtk_scrolled_window_set_placement(ptr, int);
void gtk_scrolled_window_set_policy(ptr, int, int);
void gtk_scrolled_window_set_propagate_natural_height(ptr, int);
void gtk_scrolled_window_set_propagate_natural_width(ptr, int);
void gtk_scrolled_window_set_vadjustment(ptr, ptr);
void gtk_scrolled_window_unset_placement(ptr);
ptr gtk_search_bar_new();
void gtk_search_bar_connect_entry(ptr, ptr);
ptr gtk_search_bar_get_child(ptr);
ptr gtk_search_bar_get_key_capture_widget(ptr);
int gtk_search_bar_get_search_mode(ptr);
int gtk_search_bar_get_show_close_button(ptr);
void gtk_search_bar_set_child(ptr, ptr);
void gtk_search_bar_set_key_capture_widget(ptr, ptr);
void gtk_search_bar_set_search_mode(ptr, int);
void gtk_search_bar_set_show_close_button(ptr, int);
ptr gtk_search_entry_new();
ptr gtk_search_entry_get_key_capture_widget(ptr);
void gtk_search_entry_set_key_capture_widget(ptr, ptr);
ptr gtk_selection_filter_model_new(ptr);
ptr gtk_selection_filter_model_get_model(ptr);
void gtk_selection_filter_model_set_model(ptr, ptr);
ptr gtk_selection_model_get_selection(ptr);
ptr gtk_selection_model_get_selection_in_range(ptr, uint, uint);
int gtk_selection_model_is_selected(ptr, uint);
int gtk_selection_model_select_all(ptr);
int gtk_selection_model_select_item(ptr, uint, int);
int gtk_selection_model_select_range(ptr, uint, uint, int);
void gtk_selection_model_selection_changed(ptr, uint, uint);
int gtk_selection_model_set_selection(ptr, ptr, ptr);
int gtk_selection_model_unselect_all(ptr);
int gtk_selection_model_unselect_item(ptr, uint);
int gtk_selection_model_unselect_range(ptr, uint, uint);
ptr gtk_separator_new(int);
ptr gtk_settings_get_default(ptr);
ptr gtk_settings_get_for_display(ptr, ptr);
void gtk_settings_reset_property(ptr, str);
ptr gtk_shortcut_new(ptr, ptr);
ptr gtk_shortcut_get_action(ptr);
ptr gtk_shortcut_get_arguments(ptr);
ptr gtk_shortcut_get_trigger(ptr);
void gtk_shortcut_set_action(ptr, ptr);
void gtk_shortcut_set_arguments(ptr, ptr);
void gtk_shortcut_set_trigger(ptr, ptr);
ptr gtk_shortcut_action_parse_string(str);
int gtk_shortcut_action_activate(ptr, int, ptr, ptr);
void gtk_shortcut_action_print(ptr, ptr);
ptr gtk_shortcut_action_to_string(ptr);
ptr gtk_shortcut_controller_new();
ptr gtk_shortcut_controller_new_for_model(ptr);
void gtk_shortcut_controller_add_shortcut(ptr, ptr);
int gtk_shortcut_controller_get_mnemonics_modifiers(ptr);
int gtk_shortcut_controller_get_scope(ptr);
void gtk_shortcut_controller_remove_shortcut(ptr, ptr);
void gtk_shortcut_controller_set_mnemonics_modifiers(ptr, int);
void gtk_shortcut_controller_set_scope(ptr, int);
ptr gtk_shortcut_label_new(str);
str gtk_shortcut_label_get_accelerator(ptr);
str gtk_shortcut_label_get_disabled_text(ptr);
void gtk_shortcut_label_set_accelerator(ptr, str);
void gtk_shortcut_label_set_disabled_text(ptr, str);
ptr gtk_shortcut_trigger_parse_string(str);
int gtk_shortcut_trigger_compare(ptr, ptr);
int gtk_shortcut_trigger_equal(ptr, ptr);
uint gtk_shortcut_trigger_hash(ptr);
void gtk_shortcut_trigger_print(ptr, ptr);
int gtk_shortcut_trigger_print_label(ptr, ptr, ptr);
ptr gtk_shortcut_trigger_to_label(ptr, ptr);
ptr gtk_shortcut_trigger_to_string(ptr);
int gtk_shortcut_trigger_trigger(ptr, ptr, int);
ptr gtk_signal_action_new(str);
str gtk_signal_action_get_signal_name(ptr);
ptr gtk_signal_list_item_factory_new();
ptr gtk_single_selection_new(ptr);
int gtk_single_selection_get_autoselect(ptr);
int gtk_single_selection_get_can_unselect(ptr);
ptr gtk_single_selection_get_model(ptr);
uint gtk_single_selection_get_selected(ptr);
ptr gtk_single_selection_get_selected_item(ptr);
void gtk_single_selection_set_autoselect(ptr, int);
void gtk_single_selection_set_can_unselect(ptr, int);
void gtk_single_selection_set_model(ptr, ptr);
void gtk_single_selection_set_selected(ptr, uint);
ptr gtk_size_group_new(int);
void gtk_size_group_add_widget(ptr, ptr);
int gtk_size_group_get_mode(ptr);
ptr gtk_size_group_get_widgets(ptr);
void gtk_size_group_remove_widget(ptr, ptr);
void gtk_size_group_set_mode(ptr, int);
ptr gtk_slice_list_model_new(ptr, uint, uint);
ptr gtk_slice_list_model_get_model(ptr);
uint gtk_slice_list_model_get_offset(ptr);
uint gtk_slice_list_model_get_size(ptr);
void gtk_slice_list_model_set_model(ptr, ptr);
void gtk_slice_list_model_set_offset(ptr, uint);
void gtk_slice_list_model_set_size(ptr, uint);
ptr gtk_snapshot_new();
void gtk_snapshot_append_border(ptr, ptr, ptr, ptr);
ptr gtk_snapshot_append_cairo(ptr, ptr);
void gtk_snapshot_append_color(ptr, ptr, ptr);
void gtk_snapshot_append_conic_gradient(ptr, ptr, ptr, float, ptr, ulong);
void gtk_snapshot_append_inset_shadow(ptr, ptr, ptr, float, float, float, float);
void gtk_snapshot_append_layout(ptr, ptr, ptr);
void gtk_snapshot_append_linear_gradient(ptr, ptr, ptr, ptr, ptr, ulong);
void gtk_snapshot_append_node(ptr, ptr);
void gtk_snapshot_append_outset_shadow(ptr, ptr, ptr, float, float, float, float);
void gtk_snapshot_append_radial_gradient(ptr, ptr, ptr, float, float, float, float, ptr, ulong);
void gtk_snapshot_append_repeating_linear_gradient(ptr, ptr, ptr, ptr, ptr, ulong);
void gtk_snapshot_append_repeating_radial_gradient(ptr, ptr, ptr, float, float, float, float, ptr, ulong);
void gtk_snapshot_append_texture(ptr, ptr, ptr);
void gtk_snapshot_gl_shader_pop_texture(ptr);
void gtk_snapshot_perspective(ptr, float);
void gtk_snapshot_pop(ptr);
void gtk_snapshot_push_blend(ptr, int);
void gtk_snapshot_push_blur(ptr, double);
void gtk_snapshot_push_clip(ptr, ptr);
void gtk_snapshot_push_color_matrix(ptr, ptr, ptr);
void gtk_snapshot_push_cross_fade(ptr, double);
void gtk_snapshot_push_gl_shader(ptr, ptr, ptr, ptr);
void gtk_snapshot_push_opacity(ptr, double);
void gtk_snapshot_push_repeat(ptr, ptr, ptr);
void gtk_snapshot_push_rounded_clip(ptr, ptr);
void gtk_snapshot_push_shadow(ptr, ptr, ulong);
void gtk_snapshot_render_background(ptr, ptr, double, double, double, double);
void gtk_snapshot_render_focus(ptr, ptr, double, double, double, double);
void gtk_snapshot_render_frame(ptr, ptr, double, double, double, double);
void gtk_snapshot_render_insertion_cursor(ptr, ptr, double, double, ptr, int, int);
void gtk_snapshot_render_layout(ptr, ptr, double, double, ptr);
void gtk_snapshot_restore(ptr);
void gtk_snapshot_rotate(ptr, float);
void gtk_snapshot_rotate_3d(ptr, float, ptr);
void gtk_snapshot_save(ptr);
void gtk_snapshot_scale(ptr, float, float);
void gtk_snapshot_scale_3d(ptr, float, float, float);
ptr gtk_snapshot_to_node(ptr);
ptr gtk_snapshot_to_paintable(ptr, ptr);
void gtk_snapshot_transform(ptr, ptr);
void gtk_snapshot_transform_matrix(ptr, ptr);
void gtk_snapshot_translate(ptr, ptr);
void gtk_snapshot_translate_3d(ptr, ptr);
ptr gtk_sort_list_model_new(ptr, ptr);
int gtk_sort_list_model_get_incremental(ptr);
ptr gtk_sort_list_model_get_model(ptr);
uint gtk_sort_list_model_get_pending(ptr);
ptr gtk_sort_list_model_get_sorter(ptr);
void gtk_sort_list_model_set_incremental(ptr, int);
void gtk_sort_list_model_set_model(ptr, ptr);
void gtk_sort_list_model_set_sorter(ptr, ptr);
void gtk_sorter_changed(ptr, int);
int gtk_sorter_compare(ptr, ptr, ptr);
int gtk_sorter_get_order(ptr);
ptr gtk_spin_button_new(ptr, double, uint);
ptr gtk_spin_button_new_with_range(double, double, double);
void gtk_spin_button_configure(ptr, ptr, double, uint);
ptr gtk_spin_button_get_adjustment(ptr);
double gtk_spin_button_get_climb_rate(ptr);
uint gtk_spin_button_get_digits(ptr);
void gtk_spin_button_get_increments(ptr, ptr, ptr);
int gtk_spin_button_get_numeric(ptr);
void gtk_spin_button_get_range(ptr, ptr, ptr);
int gtk_spin_button_get_snap_to_ticks(ptr);
int gtk_spin_button_get_update_policy(ptr);
double gtk_spin_button_get_value(ptr);
int gtk_spin_button_get_value_as_int(ptr);
int gtk_spin_button_get_wrap(ptr);
void gtk_spin_button_set_adjustment(ptr, ptr);
void gtk_spin_button_set_climb_rate(ptr, double);
void gtk_spin_button_set_digits(ptr, uint);
void gtk_spin_button_set_increments(ptr, double, double);
void gtk_spin_button_set_numeric(ptr, int);
void gtk_spin_button_set_range(ptr, double, double);
void gtk_spin_button_set_snap_to_ticks(ptr, int);
void gtk_spin_button_set_update_policy(ptr, int);
void gtk_spin_button_set_value(ptr, double);
void gtk_spin_button_set_wrap(ptr, int);
void gtk_spin_button_spin(ptr, int, double);
void gtk_spin_button_update(ptr);
ptr gtk_spinner_new();
int gtk_spinner_get_spinning(ptr);
void gtk_spinner_set_spinning(ptr, int);
void gtk_spinner_start(ptr);
void gtk_spinner_stop(ptr);
ptr gtk_stack_new();
ptr gtk_stack_add_child(ptr, ptr);
ptr gtk_stack_add_named(ptr, ptr, str);
ptr gtk_stack_add_titled(ptr, ptr, str, str);
ptr gtk_stack_get_child_by_name(ptr, str);
int gtk_stack_get_hhomogeneous(ptr);
int gtk_stack_get_interpolate_size(ptr);
ptr gtk_stack_get_page(ptr, ptr);
ptr gtk_stack_get_pages(ptr);
uint gtk_stack_get_transition_duration(ptr);
int gtk_stack_get_transition_running(ptr);
int gtk_stack_get_transition_type(ptr);
int gtk_stack_get_vhomogeneous(ptr);
ptr gtk_stack_get_visible_child(ptr);
str gtk_stack_get_visible_child_name(ptr);
void gtk_stack_remove(ptr, ptr);
void gtk_stack_set_hhomogeneous(ptr, int);
void gtk_stack_set_interpolate_size(ptr, int);
void gtk_stack_set_transition_duration(ptr, uint);
void gtk_stack_set_transition_type(ptr, int);
void gtk_stack_set_vhomogeneous(ptr, int);
void gtk_stack_set_visible_child(ptr, ptr);
void gtk_stack_set_visible_child_full(ptr, str, int);
void gtk_stack_set_visible_child_name(ptr, str);
ptr gtk_stack_page_get_child(ptr);
str gtk_stack_page_get_icon_name(ptr);
str gtk_stack_page_get_name(ptr);
int gtk_stack_page_get_needs_attention(ptr);
str gtk_stack_page_get_title(ptr);
int gtk_stack_page_get_use_underline(ptr);
int gtk_stack_page_get_visible(ptr);
void gtk_stack_page_set_icon_name(ptr, str);
void gtk_stack_page_set_name(ptr, str);
void gtk_stack_page_set_needs_attention(ptr, int);
void gtk_stack_page_set_title(ptr, str);
void gtk_stack_page_set_use_underline(ptr, int);
void gtk_stack_page_set_visible(ptr, int);
ptr gtk_stack_sidebar_new();
ptr gtk_stack_sidebar_get_stack(ptr);
void gtk_stack_sidebar_set_stack(ptr, ptr);
ptr gtk_stack_switcher_new();
ptr gtk_stack_switcher_get_stack(ptr);
void gtk_stack_switcher_set_stack(ptr, ptr);
ptr gtk_statusbar_new();
uint gtk_statusbar_get_context_id(ptr, str);
void gtk_statusbar_pop(ptr, uint);
uint gtk_statusbar_push(ptr, uint, str);
void gtk_statusbar_remove(ptr, uint, uint);
void gtk_statusbar_remove_all(ptr, uint);
ptr gtk_string_filter_new(ptr);
ptr gtk_string_filter_get_expression(ptr);
int gtk_string_filter_get_ignore_case(ptr);
int gtk_string_filter_get_match_mode(ptr);
str gtk_string_filter_get_search(ptr);
void gtk_string_filter_set_expression(ptr, ptr);
void gtk_string_filter_set_ignore_case(ptr, int);
void gtk_string_filter_set_match_mode(ptr, int);
void gtk_string_filter_set_search(ptr, str);
ptr gtk_string_list_new(ptr);
void gtk_string_list_append(ptr, str);
str gtk_string_list_get_string(ptr, uint);
void gtk_string_list_remove(ptr, uint);
void gtk_string_list_splice(ptr, uint, uint, ptr);
void gtk_string_list_take(ptr, ptr);
ptr gtk_string_object_new(str);
str gtk_string_object_get_string(ptr);
ptr gtk_string_sorter_new(ptr);
ptr gtk_string_sorter_get_expression(ptr);
int gtk_string_sorter_get_ignore_case(ptr);
void gtk_string_sorter_set_expression(ptr, ptr);
void gtk_string_sorter_set_ignore_case(ptr, int);
void gtk_style_context_add_provider_for_display(ptr, ptr, ptr, uint);
void gtk_style_context_remove_provider_for_display(ptr, ptr, ptr);
void gtk_style_context_add_class(ptr, str);
void gtk_style_context_add_provider(ptr, ptr, uint);
void gtk_style_context_get_border(ptr, ptr);
void gtk_style_context_get_color(ptr, ptr);
ptr gtk_style_context_get_display(ptr);
void gtk_style_context_get_margin(ptr, ptr);
void gtk_style_context_get_padding(ptr, ptr);
int gtk_style_context_get_scale(ptr);
int gtk_style_context_get_state(ptr);
int gtk_style_context_has_class(ptr, str);
int gtk_style_context_lookup_color(ptr, str, ptr);
void gtk_style_context_remove_class(ptr, str);
void gtk_style_context_remove_provider(ptr, ptr);
void gtk_style_context_restore(ptr);
void gtk_style_context_save(ptr);
void gtk_style_context_set_display(ptr, ptr);
void gtk_style_context_set_scale(ptr, int);
void gtk_style_context_set_state(ptr, int);
ptr gtk_style_context_to_string(ptr, int);
ptr gtk_switch_new();
int gtk_switch_get_active(ptr);
int gtk_switch_get_state(ptr);
void gtk_switch_set_active(ptr, int);
void gtk_switch_set_state(ptr, int);
void gtk_symbolic_paintable_snapshot_symbolic(ptr, ptr, double, double, ptr, ulong);
ptr gtk_text_new();
ptr gtk_text_new_with_buffer(ptr);
void gtk_text_compute_cursor_extents(ptr, ulong, ptr, ptr);
int gtk_text_get_activates_default(ptr);
ptr gtk_text_get_attributes(ptr);
ptr gtk_text_get_buffer(ptr);
int gtk_text_get_enable_emoji_completion(ptr);
ptr gtk_text_get_extra_menu(ptr);
int gtk_text_get_input_hints(ptr);
int gtk_text_get_input_purpose(ptr);
ptr gtk_text_get_invisible_char(ptr);
int gtk_text_get_max_length(ptr);
int gtk_text_get_overwrite_mode(ptr);
str gtk_text_get_placeholder_text(ptr);
int gtk_text_get_propagate_text_width(ptr);
ptr gtk_text_get_tabs(ptr);
ushort gtk_text_get_text_length(ptr);
int gtk_text_get_truncate_multiline(ptr);
int gtk_text_get_visibility(ptr);
int gtk_text_grab_focus_without_selecting(ptr);
void gtk_text_set_activates_default(ptr, int);
void gtk_text_set_attributes(ptr, ptr);
void gtk_text_set_buffer(ptr, ptr);
void gtk_text_set_enable_emoji_completion(ptr, int);
void gtk_text_set_extra_menu(ptr, ptr);
void gtk_text_set_input_hints(ptr, int);
void gtk_text_set_input_purpose(ptr, int);
void gtk_text_set_invisible_char(ptr, ptr);
void gtk_text_set_max_length(ptr, int);
void gtk_text_set_overwrite_mode(ptr, int);
void gtk_text_set_placeholder_text(ptr, str);
void gtk_text_set_propagate_text_width(ptr, int);
void gtk_text_set_tabs(ptr, ptr);
void gtk_text_set_truncate_multiline(ptr, int);
void gtk_text_set_visibility(ptr, int);
void gtk_text_unset_invisible_char(ptr);
ptr gtk_text_buffer_new(ptr);
void gtk_text_buffer_add_mark(ptr, ptr, ptr);
void gtk_text_buffer_add_selection_clipboard(ptr, ptr);
void gtk_text_buffer_apply_tag(ptr, ptr, ptr, ptr);
void gtk_text_buffer_apply_tag_by_name(ptr, str, ptr, ptr);
int gtk_text_buffer_backspace(ptr, ptr, int, int);
void gtk_text_buffer_begin_irreversible_action(ptr);
void gtk_text_buffer_begin_user_action(ptr);
void gtk_text_buffer_copy_clipboard(ptr, ptr);
ptr gtk_text_buffer_create_child_anchor(ptr, ptr);
ptr gtk_text_buffer_create_mark(ptr, str, ptr, int);
void gtk_text_buffer_cut_clipboard(ptr, ptr, int);
void gtk_text_buffer_delete(ptr, ptr, ptr);
int gtk_text_buffer_delete_interactive(ptr, ptr, ptr, int);
void gtk_text_buffer_delete_mark(ptr, ptr);
void gtk_text_buffer_delete_mark_by_name(ptr, str);
int gtk_text_buffer_delete_selection(ptr, int, int);
void gtk_text_buffer_end_irreversible_action(ptr);
void gtk_text_buffer_end_user_action(ptr);
void gtk_text_buffer_get_bounds(ptr, ptr, ptr);
int gtk_text_buffer_get_can_redo(ptr);
int gtk_text_buffer_get_can_undo(ptr);
int gtk_text_buffer_get_char_count(ptr);
int gtk_text_buffer_get_enable_undo(ptr);
void gtk_text_buffer_get_end_iter(ptr, ptr);
int gtk_text_buffer_get_has_selection(ptr);
ptr gtk_text_buffer_get_insert(ptr);
void gtk_text_buffer_get_iter_at_child_anchor(ptr, ptr, ptr);
int gtk_text_buffer_get_iter_at_line(ptr, ptr, int);
int gtk_text_buffer_get_iter_at_line_index(ptr, ptr, int, int);
int gtk_text_buffer_get_iter_at_line_offset(ptr, ptr, int, int);
void gtk_text_buffer_get_iter_at_mark(ptr, ptr, ptr);
void gtk_text_buffer_get_iter_at_offset(ptr, ptr, int);
int gtk_text_buffer_get_line_count(ptr);
ptr gtk_text_buffer_get_mark(ptr, str);
uint gtk_text_buffer_get_max_undo_levels(ptr);
int gtk_text_buffer_get_modified(ptr);
ptr gtk_text_buffer_get_selection_bound(ptr);
int gtk_text_buffer_get_selection_bounds(ptr, ptr, ptr);
ptr gtk_text_buffer_get_selection_content(ptr);
ptr gtk_text_buffer_get_slice(ptr, ptr, ptr, int);
void gtk_text_buffer_get_start_iter(ptr, ptr);
ptr gtk_text_buffer_get_tag_table(ptr);
ptr gtk_text_buffer_get_text(ptr, ptr, ptr, int);
void gtk_text_buffer_insert(ptr, ptr, str, int);
void gtk_text_buffer_insert_at_cursor(ptr, str, int);
void gtk_text_buffer_insert_child_anchor(ptr, ptr, ptr);
int gtk_text_buffer_insert_interactive(ptr, ptr, str, int, int);
int gtk_text_buffer_insert_interactive_at_cursor(ptr, str, int, int);
void gtk_text_buffer_insert_markup(ptr, ptr, str, int);
void gtk_text_buffer_insert_paintable(ptr, ptr, ptr);
void gtk_text_buffer_insert_range(ptr, ptr, ptr, ptr);
int gtk_text_buffer_insert_range_interactive(ptr, ptr, ptr, ptr, int);
void gtk_text_buffer_move_mark(ptr, ptr, ptr);
void gtk_text_buffer_move_mark_by_name(ptr, str, ptr);
void gtk_text_buffer_paste_clipboard(ptr, ptr, ptr, int);
void gtk_text_buffer_place_cursor(ptr, ptr);
void gtk_text_buffer_redo(ptr);
void gtk_text_buffer_remove_all_tags(ptr, ptr, ptr);
void gtk_text_buffer_remove_selection_clipboard(ptr, ptr);
void gtk_text_buffer_remove_tag(ptr, ptr, ptr, ptr);
void gtk_text_buffer_remove_tag_by_name(ptr, str, ptr, ptr);
void gtk_text_buffer_select_range(ptr, ptr, ptr);
void gtk_text_buffer_set_enable_undo(ptr, int);
void gtk_text_buffer_set_max_undo_levels(ptr, uint);
void gtk_text_buffer_set_modified(ptr, int);
void gtk_text_buffer_set_text(ptr, str, int);
void gtk_text_buffer_undo(ptr);
ptr gtk_text_child_anchor_new();
ptr gtk_text_child_anchor_new_with_replacement(str);
int gtk_text_child_anchor_get_deleted(ptr);
ptr gtk_text_child_anchor_get_widgets(ptr, ptr);
void gtk_text_iter_assign(ptr, ptr);
int gtk_text_iter_backward_char(ptr);
int gtk_text_iter_backward_chars(ptr, int);
int gtk_text_iter_backward_cursor_position(ptr);
int gtk_text_iter_backward_cursor_positions(ptr, int);
int gtk_text_iter_backward_find_char(ptr, ptr, ptr, ptr);
int gtk_text_iter_backward_line(ptr);
int gtk_text_iter_backward_lines(ptr, int);
int gtk_text_iter_backward_search(ptr, str, int, ptr, ptr, ptr);
int gtk_text_iter_backward_sentence_start(ptr);
int gtk_text_iter_backward_sentence_starts(ptr, int);
int gtk_text_iter_backward_to_tag_toggle(ptr, ptr);
int gtk_text_iter_backward_visible_cursor_position(ptr);
int gtk_text_iter_backward_visible_cursor_positions(ptr, int);
int gtk_text_iter_backward_visible_line(ptr);
int gtk_text_iter_backward_visible_lines(ptr, int);
int gtk_text_iter_backward_visible_word_start(ptr);
int gtk_text_iter_backward_visible_word_starts(ptr, int);
int gtk_text_iter_backward_word_start(ptr);
int gtk_text_iter_backward_word_starts(ptr, int);
int gtk_text_iter_can_insert(ptr, int);
int gtk_text_iter_compare(ptr, ptr);
ptr gtk_text_iter_copy(ptr);
int gtk_text_iter_editable(ptr, int);
int gtk_text_iter_ends_line(ptr);
int gtk_text_iter_ends_sentence(ptr);
int gtk_text_iter_ends_tag(ptr, ptr);
int gtk_text_iter_ends_word(ptr);
int gtk_text_iter_equal(ptr, ptr);
int gtk_text_iter_forward_char(ptr);
int gtk_text_iter_forward_chars(ptr, int);
int gtk_text_iter_forward_cursor_position(ptr);
int gtk_text_iter_forward_cursor_positions(ptr, int);
int gtk_text_iter_forward_find_char(ptr, ptr, ptr, ptr);
int gtk_text_iter_forward_line(ptr);
int gtk_text_iter_forward_lines(ptr, int);
int gtk_text_iter_forward_search(ptr, str, int, ptr, ptr, ptr);
int gtk_text_iter_forward_sentence_end(ptr);
int gtk_text_iter_forward_sentence_ends(ptr, int);
void gtk_text_iter_forward_to_end(ptr);
int gtk_text_iter_forward_to_line_end(ptr);
int gtk_text_iter_forward_to_tag_toggle(ptr, ptr);
int gtk_text_iter_forward_visible_cursor_position(ptr);
int gtk_text_iter_forward_visible_cursor_positions(ptr, int);
int gtk_text_iter_forward_visible_line(ptr);
int gtk_text_iter_forward_visible_lines(ptr, int);
int gtk_text_iter_forward_visible_word_end(ptr);
int gtk_text_iter_forward_visible_word_ends(ptr, int);
int gtk_text_iter_forward_word_end(ptr);
int gtk_text_iter_forward_word_ends(ptr, int);
void gtk_text_iter_free(ptr);
ptr gtk_text_iter_get_buffer(ptr);
int gtk_text_iter_get_bytes_in_line(ptr);
ptr gtk_text_iter_get_char(ptr);
int gtk_text_iter_get_chars_in_line(ptr);
ptr gtk_text_iter_get_child_anchor(ptr);
ptr gtk_text_iter_get_language(ptr);
int gtk_text_iter_get_line(ptr);
int gtk_text_iter_get_line_index(ptr);
int gtk_text_iter_get_line_offset(ptr);
ptr gtk_text_iter_get_marks(ptr);
int gtk_text_iter_get_offset(ptr);
ptr gtk_text_iter_get_paintable(ptr);
ptr gtk_text_iter_get_slice(ptr, ptr);
ptr gtk_text_iter_get_tags(ptr);
ptr gtk_text_iter_get_text(ptr, ptr);
ptr gtk_text_iter_get_toggled_tags(ptr, int);
int gtk_text_iter_get_visible_line_index(ptr);
int gtk_text_iter_get_visible_line_offset(ptr);
ptr gtk_text_iter_get_visible_slice(ptr, ptr);
ptr gtk_text_iter_get_visible_text(ptr, ptr);
int gtk_text_iter_has_tag(ptr, ptr);
int gtk_text_iter_in_range(ptr, ptr, ptr);
int gtk_text_iter_inside_sentence(ptr);
int gtk_text_iter_inside_word(ptr);
int gtk_text_iter_is_cursor_position(ptr);
int gtk_text_iter_is_end(ptr);
int gtk_text_iter_is_start(ptr);
void gtk_text_iter_order(ptr, ptr);
void gtk_text_iter_set_line(ptr, int);
void gtk_text_iter_set_line_index(ptr, int);
void gtk_text_iter_set_line_offset(ptr, int);
void gtk_text_iter_set_offset(ptr, int);
void gtk_text_iter_set_visible_line_index(ptr, int);
void gtk_text_iter_set_visible_line_offset(ptr, int);
int gtk_text_iter_starts_line(ptr);
int gtk_text_iter_starts_sentence(ptr);
int gtk_text_iter_starts_tag(ptr, ptr);
int gtk_text_iter_starts_word(ptr);
int gtk_text_iter_toggles_tag(ptr, ptr);
ptr gtk_text_mark_new(str, int);
ptr gtk_text_mark_get_buffer(ptr);
int gtk_text_mark_get_deleted(ptr);
int gtk_text_mark_get_left_gravity(ptr);
str gtk_text_mark_get_name(ptr);
int gtk_text_mark_get_visible(ptr);
void gtk_text_mark_set_visible(ptr, int);
ptr gtk_text_tag_new(str);
void gtk_text_tag_changed(ptr, int);
int gtk_text_tag_get_priority(ptr);
void gtk_text_tag_set_priority(ptr, int);
ptr gtk_text_tag_table_new();
int gtk_text_tag_table_add(ptr, ptr);
void gtk_text_tag_table_foreach(ptr, ptr, ptr);
int gtk_text_tag_table_get_size(ptr);
ptr gtk_text_tag_table_lookup(ptr, str);
void gtk_text_tag_table_remove(ptr, ptr);
ptr gtk_text_view_new();
ptr gtk_text_view_new_with_buffer(ptr);
void gtk_text_view_add_child_at_anchor(ptr, ptr, ptr);
void gtk_text_view_add_overlay(ptr, ptr, int, int);
int gtk_text_view_backward_display_line(ptr, ptr);
int gtk_text_view_backward_display_line_start(ptr, ptr);
void gtk_text_view_buffer_to_window_coords(ptr, int, int, int, ptr, ptr);
int gtk_text_view_forward_display_line(ptr, ptr);
int gtk_text_view_forward_display_line_end(ptr, ptr);
int gtk_text_view_get_accepts_tab(ptr);
int gtk_text_view_get_bottom_margin(ptr);
ptr gtk_text_view_get_buffer(ptr);
void gtk_text_view_get_cursor_locations(ptr, ptr, ptr, ptr);
int gtk_text_view_get_cursor_visible(ptr);
int gtk_text_view_get_editable(ptr);
ptr gtk_text_view_get_extra_menu(ptr);
ptr gtk_text_view_get_gutter(ptr, int);
int gtk_text_view_get_indent(ptr);
int gtk_text_view_get_input_hints(ptr);
int gtk_text_view_get_input_purpose(ptr);
int gtk_text_view_get_iter_at_location(ptr, ptr, int, int);
int gtk_text_view_get_iter_at_position(ptr, ptr, ptr, int, int);
void gtk_text_view_get_iter_location(ptr, ptr, ptr);
int gtk_text_view_get_justification(ptr);
int gtk_text_view_get_left_margin(ptr);
void gtk_text_view_get_line_at_y(ptr, ptr, int, ptr);
void gtk_text_view_get_line_yrange(ptr, ptr, ptr, ptr);
ptr gtk_text_view_get_ltr_context(ptr);
int gtk_text_view_get_monospace(ptr);
int gtk_text_view_get_overwrite(ptr);
int gtk_text_view_get_pixels_above_lines(ptr);
int gtk_text_view_get_pixels_below_lines(ptr);
int gtk_text_view_get_pixels_inside_wrap(ptr);
int gtk_text_view_get_right_margin(ptr);
ptr gtk_text_view_get_rtl_context(ptr);
ptr gtk_text_view_get_tabs(ptr);
int gtk_text_view_get_top_margin(ptr);
void gtk_text_view_get_visible_rect(ptr, ptr);
int gtk_text_view_get_wrap_mode(ptr);
int gtk_text_view_im_context_filter_keypress(ptr, ptr);
int gtk_text_view_move_mark_onscreen(ptr, ptr);
void gtk_text_view_move_overlay(ptr, ptr, int, int);
int gtk_text_view_move_visually(ptr, ptr, int);
int gtk_text_view_place_cursor_onscreen(ptr);
void gtk_text_view_remove(ptr, ptr);
void gtk_text_view_reset_cursor_blink(ptr);
void gtk_text_view_reset_im_context(ptr);
void gtk_text_view_scroll_mark_onscreen(ptr, ptr);
int gtk_text_view_scroll_to_iter(ptr, ptr, double, int, double, double);
void gtk_text_view_scroll_to_mark(ptr, ptr, double, int, double, double);
void gtk_text_view_set_accepts_tab(ptr, int);
void gtk_text_view_set_bottom_margin(ptr, int);
void gtk_text_view_set_buffer(ptr, ptr);
void gtk_text_view_set_cursor_visible(ptr, int);
void gtk_text_view_set_editable(ptr, int);
void gtk_text_view_set_extra_menu(ptr, ptr);
void gtk_text_view_set_gutter(ptr, int, ptr);
void gtk_text_view_set_indent(ptr, int);
void gtk_text_view_set_input_hints(ptr, int);
void gtk_text_view_set_input_purpose(ptr, int);
void gtk_text_view_set_justification(ptr, int);
void gtk_text_view_set_left_margin(ptr, int);
void gtk_text_view_set_monospace(ptr, int);
void gtk_text_view_set_overwrite(ptr, int);
void gtk_text_view_set_pixels_above_lines(ptr, int);
void gtk_text_view_set_pixels_below_lines(ptr, int);
void gtk_text_view_set_pixels_inside_wrap(ptr, int);
void gtk_text_view_set_right_margin(ptr, int);
void gtk_text_view_set_tabs(ptr, ptr);
void gtk_text_view_set_top_margin(ptr, int);
void gtk_text_view_set_wrap_mode(ptr, int);
int gtk_text_view_starts_display_line(ptr, ptr);
void gtk_text_view_window_to_buffer_coords(ptr, int, int, int, ptr, ptr);
ptr gtk_toggle_button_new();
ptr gtk_toggle_button_new_with_label(str);
ptr gtk_toggle_button_new_with_mnemonic(str);
int gtk_toggle_button_get_active(ptr);
void gtk_toggle_button_set_active(ptr, int);
void gtk_toggle_button_set_group(ptr, ptr);
void gtk_toggle_button_toggled(ptr);
void gtk_tooltip_set_custom(ptr, ptr);
void gtk_tooltip_set_icon(ptr, ptr);
void gtk_tooltip_set_icon_from_gicon(ptr, ptr);
void gtk_tooltip_set_icon_from_icon_name(ptr, str);
void gtk_tooltip_set_markup(ptr, str);
void gtk_tooltip_set_text(ptr, str);
void gtk_tooltip_set_tip_area(ptr, ptr);
int gtk_tree_drag_dest_drag_data_received(ptr, ptr, ptr);
int gtk_tree_drag_dest_row_drop_possible(ptr, ptr, ptr);
int gtk_tree_drag_source_drag_data_delete(ptr, ptr);
ptr gtk_tree_drag_source_drag_data_get(ptr, ptr);
int gtk_tree_drag_source_row_draggable(ptr, ptr);
ptr gtk_tree_expander_new();
ptr gtk_tree_expander_get_child(ptr);
int gtk_tree_expander_get_indent_for_icon(ptr);
ptr gtk_tree_expander_get_item(ptr);
ptr gtk_tree_expander_get_list_row(ptr);
void gtk_tree_expander_set_child(ptr, ptr);
void gtk_tree_expander_set_indent_for_icon(ptr, int);
void gtk_tree_expander_set_list_row(ptr, ptr);
ptr gtk_tree_iter_copy(ptr);
void gtk_tree_iter_free(ptr);
ptr gtk_tree_list_model_new(ptr, int, int, ptr, ptr, ptr);
int gtk_tree_list_model_get_autoexpand(ptr);
ptr gtk_tree_list_model_get_child_row(ptr, uint);
ptr gtk_tree_list_model_get_model(ptr);
int gtk_tree_list_model_get_passthrough(ptr);
ptr gtk_tree_list_model_get_row(ptr, uint);
void gtk_tree_list_model_set_autoexpand(ptr, int);
ptr gtk_tree_list_row_get_child_row(ptr, uint);
ptr gtk_tree_list_row_get_children(ptr);
uint gtk_tree_list_row_get_depth(ptr);
int gtk_tree_list_row_get_expanded(ptr);
ptr gtk_tree_list_row_get_item(ptr);
ptr gtk_tree_list_row_get_parent(ptr);
uint gtk_tree_list_row_get_position(ptr);
int gtk_tree_list_row_is_expandable(ptr);
void gtk_tree_list_row_set_expanded(ptr, int);
ptr gtk_tree_list_row_sorter_new(ptr);
ptr gtk_tree_list_row_sorter_get_sorter(ptr);
void gtk_tree_list_row_sorter_set_sorter(ptr, ptr);
ptr gtk_tree_model_filter_new(ptr, ptr);
void gtk_tree_model_foreach(ptr, ptr, ptr);
ulong gtk_tree_model_get_column_type(ptr, int);
int gtk_tree_model_get_flags(ptr);
int gtk_tree_model_get_iter(ptr, ptr, ptr);
int gtk_tree_model_get_iter_first(ptr, ptr);
int gtk_tree_model_get_iter_from_string(ptr, ptr, str);
int gtk_tree_model_get_n_columns(ptr);
ptr gtk_tree_model_get_path(ptr, ptr);
ptr gtk_tree_model_get_string_from_iter(ptr, ptr);
void gtk_tree_model_get_value(ptr, ptr, int, ptr);
int gtk_tree_model_iter_children(ptr, ptr, ptr);
int gtk_tree_model_iter_has_child(ptr, ptr);
int gtk_tree_model_iter_n_children(ptr, ptr);
int gtk_tree_model_iter_next(ptr, ptr);
int gtk_tree_model_iter_nth_child(ptr, ptr, ptr, int);
int gtk_tree_model_iter_parent(ptr, ptr, ptr);
int gtk_tree_model_iter_previous(ptr, ptr);
void gtk_tree_model_ref_node(ptr, ptr);
void gtk_tree_model_row_changed(ptr, ptr, ptr);
void gtk_tree_model_row_deleted(ptr, ptr);
void gtk_tree_model_row_has_child_toggled(ptr, ptr, ptr);
void gtk_tree_model_row_inserted(ptr, ptr, ptr);
void gtk_tree_model_rows_reordered_with_length(ptr, ptr, ptr, ptr, int);
void gtk_tree_model_unref_node(ptr, ptr);
void gtk_tree_model_filter_clear_cache(ptr);
int gtk_tree_model_filter_convert_child_iter_to_iter(ptr, ptr, ptr);
ptr gtk_tree_model_filter_convert_child_path_to_path(ptr, ptr);
void gtk_tree_model_filter_convert_iter_to_child_iter(ptr, ptr, ptr);
ptr gtk_tree_model_filter_convert_path_to_child_path(ptr, ptr);
ptr gtk_tree_model_filter_get_model(ptr);
void gtk_tree_model_filter_refilter(ptr);
void gtk_tree_model_filter_set_modify_func(ptr, int, ptr, ptr, ptr, ptr);
void gtk_tree_model_filter_set_visible_column(ptr, int);
void gtk_tree_model_filter_set_visible_func(ptr, ptr, ptr, ptr);
ptr gtk_tree_model_sort_new_with_model(ptr);
void gtk_tree_model_sort_clear_cache(ptr);
int gtk_tree_model_sort_convert_child_iter_to_iter(ptr, ptr, ptr);
ptr gtk_tree_model_sort_convert_child_path_to_path(ptr, ptr);
void gtk_tree_model_sort_convert_iter_to_child_iter(ptr, ptr, ptr);
ptr gtk_tree_model_sort_convert_path_to_child_path(ptr, ptr);
ptr gtk_tree_model_sort_get_model(ptr);
int gtk_tree_model_sort_iter_is_valid(ptr, ptr);
void gtk_tree_model_sort_reset_default_sort_func(ptr);
ptr gtk_tree_path_new();
ptr gtk_tree_path_new_first();
ptr gtk_tree_path_new_from_indicesv(ptr, ulong);
ptr gtk_tree_path_new_from_string(str);
void gtk_tree_path_append_index(ptr, int);
int gtk_tree_path_compare(ptr, ptr);
ptr gtk_tree_path_copy(ptr);
void gtk_tree_path_down(ptr);
void gtk_tree_path_free(ptr);
int gtk_tree_path_get_depth(ptr);
ptr gtk_tree_path_get_indices_with_depth(ptr, ptr);
int gtk_tree_path_is_ancestor(ptr, ptr);
int gtk_tree_path_is_descendant(ptr, ptr);
void gtk_tree_path_next(ptr);
void gtk_tree_path_prepend_index(ptr, int);
int gtk_tree_path_prev(ptr);
ptr gtk_tree_path_to_string(ptr);
int gtk_tree_path_up(ptr);
ptr gtk_tree_row_reference_new(ptr, ptr);
ptr gtk_tree_row_reference_new_proxy(ptr, ptr, ptr);
ptr gtk_tree_row_reference_copy(ptr);
void gtk_tree_row_reference_free(ptr);
ptr gtk_tree_row_reference_get_model(ptr);
ptr gtk_tree_row_reference_get_path(ptr);
int gtk_tree_row_reference_valid(ptr);
void gtk_tree_row_reference_deleted(ptr, ptr, ptr);
void gtk_tree_row_reference_inserted(ptr, ptr, ptr);
int gtk_tree_selection_count_selected_rows(ptr);
int gtk_tree_selection_get_mode(ptr);
int gtk_tree_selection_get_selected(ptr, ptr, ptr);
ptr gtk_tree_selection_get_selected_rows(ptr, ptr);
ptr gtk_tree_selection_get_tree_view(ptr);
int gtk_tree_selection_iter_is_selected(ptr, ptr);
int gtk_tree_selection_path_is_selected(ptr, ptr);
void gtk_tree_selection_select_all(ptr);
void gtk_tree_selection_select_iter(ptr, ptr);
void gtk_tree_selection_select_path(ptr, ptr);
void gtk_tree_selection_select_range(ptr, ptr, ptr);
void gtk_tree_selection_selected_foreach(ptr, ptr, ptr);
void gtk_tree_selection_set_mode(ptr, int);
void gtk_tree_selection_set_select_function(ptr, ptr, ptr, ptr);
void gtk_tree_selection_unselect_all(ptr);
void gtk_tree_selection_unselect_iter(ptr, ptr);
void gtk_tree_selection_unselect_path(ptr, ptr);
void gtk_tree_selection_unselect_range(ptr, ptr, ptr);
int gtk_tree_sortable_get_sort_column_id(ptr, ptr, ptr);
int gtk_tree_sortable_has_default_sort_func(ptr);
void gtk_tree_sortable_set_default_sort_func(ptr, ptr, ptr, ptr);
void gtk_tree_sortable_set_sort_column_id(ptr, int, int);
void gtk_tree_sortable_set_sort_func(ptr, int, ptr, ptr, ptr);
void gtk_tree_sortable_sort_column_changed(ptr);
ptr gtk_tree_store_newv(int, ptr);
void gtk_tree_store_append(ptr, ptr, ptr);
void gtk_tree_store_clear(ptr);
void gtk_tree_store_insert(ptr, ptr, ptr, int);
void gtk_tree_store_insert_after(ptr, ptr, ptr, ptr);
void gtk_tree_store_insert_before(ptr, ptr, ptr, ptr);
void gtk_tree_store_insert_with_valuesv(ptr, ptr, ptr, int, ptr, ptr, int);
int gtk_tree_store_is_ancestor(ptr, ptr, ptr);
int gtk_tree_store_iter_depth(ptr, ptr);
int gtk_tree_store_iter_is_valid(ptr, ptr);
void gtk_tree_store_move_after(ptr, ptr, ptr);
void gtk_tree_store_move_before(ptr, ptr, ptr);
void gtk_tree_store_prepend(ptr, ptr, ptr);
int gtk_tree_store_remove(ptr, ptr);
void gtk_tree_store_set_column_types(ptr, int, ptr);
void gtk_tree_store_set_value(ptr, ptr, int, ptr);
void gtk_tree_store_set_valuesv(ptr, ptr, ptr, ptr, int);
void gtk_tree_store_swap(ptr, ptr, ptr);
ptr gtk_tree_view_new();
ptr gtk_tree_view_new_with_model(ptr);
int gtk_tree_view_append_column(ptr, ptr);
void gtk_tree_view_collapse_all(ptr);
int gtk_tree_view_collapse_row(ptr, ptr);
void gtk_tree_view_columns_autosize(ptr);
void gtk_tree_view_convert_bin_window_to_tree_coords(ptr, int, int, ptr, ptr);
void gtk_tree_view_convert_bin_window_to_widget_coords(ptr, int, int, ptr, ptr);
void gtk_tree_view_convert_tree_to_bin_window_coords(ptr, int, int, ptr, ptr);
void gtk_tree_view_convert_tree_to_widget_coords(ptr, int, int, ptr, ptr);
void gtk_tree_view_convert_widget_to_bin_window_coords(ptr, int, int, ptr, ptr);
void gtk_tree_view_convert_widget_to_tree_coords(ptr, int, int, ptr, ptr);
ptr gtk_tree_view_create_row_drag_icon(ptr, ptr);
void gtk_tree_view_enable_model_drag_dest(ptr, ptr, int);
void gtk_tree_view_enable_model_drag_source(ptr, int, ptr, int);
void gtk_tree_view_expand_all(ptr);
int gtk_tree_view_expand_row(ptr, ptr, int);
void gtk_tree_view_expand_to_path(ptr, ptr);
int gtk_tree_view_get_activate_on_single_click(ptr);
void gtk_tree_view_get_background_area(ptr, ptr, ptr, ptr);
void gtk_tree_view_get_cell_area(ptr, ptr, ptr, ptr);
ptr gtk_tree_view_get_column(ptr, int);
ptr gtk_tree_view_get_columns(ptr);
void gtk_tree_view_get_cursor(ptr, ptr, ptr);
int gtk_tree_view_get_dest_row_at_pos(ptr, int, int, ptr, ptr);
void gtk_tree_view_get_drag_dest_row(ptr, ptr, ptr);
int gtk_tree_view_get_enable_search(ptr);
int gtk_tree_view_get_enable_tree_lines(ptr);
ptr gtk_tree_view_get_expander_column(ptr);
int gtk_tree_view_get_fixed_height_mode(ptr);
int gtk_tree_view_get_grid_lines(ptr);
int gtk_tree_view_get_headers_clickable(ptr);
int gtk_tree_view_get_headers_visible(ptr);
int gtk_tree_view_get_hover_expand(ptr);
int gtk_tree_view_get_hover_selection(ptr);
int gtk_tree_view_get_level_indentation(ptr);
ptr gtk_tree_view_get_model(ptr);
uint gtk_tree_view_get_n_columns(ptr);
int gtk_tree_view_get_path_at_pos(ptr, int, int, ptr, ptr, ptr, ptr);
int gtk_tree_view_get_reorderable(ptr);
int gtk_tree_view_get_rubber_banding(ptr);
int gtk_tree_view_get_search_column(ptr);
ptr gtk_tree_view_get_search_entry(ptr);
ptr gtk_tree_view_get_selection(ptr);
int gtk_tree_view_get_show_expanders(ptr);
int gtk_tree_view_get_tooltip_column(ptr);
int gtk_tree_view_get_tooltip_context(ptr, int, int, int, ptr, ptr, ptr);
int gtk_tree_view_get_visible_range(ptr, ptr, ptr);
void gtk_tree_view_get_visible_rect(ptr, ptr);
int gtk_tree_view_insert_column(ptr, ptr, int);
int gtk_tree_view_insert_column_with_data_func(ptr, int, str, ptr, ptr, ptr, ptr);
int gtk_tree_view_is_blank_at_pos(ptr, int, int, ptr, ptr, ptr, ptr);
int gtk_tree_view_is_rubber_banding_active(ptr);
void gtk_tree_view_map_expanded_rows(ptr, ptr, ptr);
void gtk_tree_view_move_column_after(ptr, ptr, ptr);
int gtk_tree_view_remove_column(ptr, ptr);
void gtk_tree_view_row_activated(ptr, ptr, ptr);
int gtk_tree_view_row_expanded(ptr, ptr);
void gtk_tree_view_scroll_to_cell(ptr, ptr, ptr, int, float, float);
void gtk_tree_view_scroll_to_point(ptr, int, int);
void gtk_tree_view_set_activate_on_single_click(ptr, int);
void gtk_tree_view_set_column_drag_function(ptr, ptr, ptr, ptr);
void gtk_tree_view_set_cursor(ptr, ptr, ptr, int);
void gtk_tree_view_set_cursor_on_cell(ptr, ptr, ptr, ptr, int);
void gtk_tree_view_set_drag_dest_row(ptr, ptr, int);
void gtk_tree_view_set_enable_search(ptr, int);
void gtk_tree_view_set_enable_tree_lines(ptr, int);
void gtk_tree_view_set_expander_column(ptr, ptr);
void gtk_tree_view_set_fixed_height_mode(ptr, int);
void gtk_tree_view_set_grid_lines(ptr, int);
void gtk_tree_view_set_headers_clickable(ptr, int);
void gtk_tree_view_set_headers_visible(ptr, int);
void gtk_tree_view_set_hover_expand(ptr, int);
void gtk_tree_view_set_hover_selection(ptr, int);
void gtk_tree_view_set_level_indentation(ptr, int);
void gtk_tree_view_set_model(ptr, ptr);
void gtk_tree_view_set_reorderable(ptr, int);
void gtk_tree_view_set_row_separator_func(ptr, ptr, ptr, ptr);
void gtk_tree_view_set_rubber_banding(ptr, int);
void gtk_tree_view_set_search_column(ptr, int);
void gtk_tree_view_set_search_entry(ptr, ptr);
void gtk_tree_view_set_search_equal_func(ptr, ptr, ptr, ptr);
void gtk_tree_view_set_show_expanders(ptr, int);
void gtk_tree_view_set_tooltip_cell(ptr, ptr, ptr, ptr, ptr);
void gtk_tree_view_set_tooltip_column(ptr, int);
void gtk_tree_view_set_tooltip_row(ptr, ptr, ptr);
void gtk_tree_view_unset_rows_drag_dest(ptr);
void gtk_tree_view_unset_rows_drag_source(ptr);
ptr gtk_tree_view_column_new();
ptr gtk_tree_view_column_new_with_area(ptr);
void gtk_tree_view_column_add_attribute(ptr, ptr, str, int);
int gtk_tree_view_column_cell_get_position(ptr, ptr, ptr, ptr);
void gtk_tree_view_column_cell_get_size(ptr, ptr, ptr, ptr, ptr);
int gtk_tree_view_column_cell_is_visible(ptr);
void gtk_tree_view_column_cell_set_cell_data(ptr, ptr, ptr, int, int);
void gtk_tree_view_column_clear(ptr);
void gtk_tree_view_column_clear_attributes(ptr, ptr);
void gtk_tree_view_column_clicked(ptr);
void gtk_tree_view_column_focus_cell(ptr, ptr);
float gtk_tree_view_column_get_alignment(ptr);
ptr gtk_tree_view_column_get_button(ptr);
int gtk_tree_view_column_get_clickable(ptr);
int gtk_tree_view_column_get_expand(ptr);
int gtk_tree_view_column_get_fixed_width(ptr);
int gtk_tree_view_column_get_max_width(ptr);
int gtk_tree_view_column_get_min_width(ptr);
int gtk_tree_view_column_get_reorderable(ptr);
int gtk_tree_view_column_get_resizable(ptr);
int gtk_tree_view_column_get_sizing(ptr);
int gtk_tree_view_column_get_sort_column_id(ptr);
int gtk_tree_view_column_get_sort_indicator(ptr);
int gtk_tree_view_column_get_sort_order(ptr);
int gtk_tree_view_column_get_spacing(ptr);
str gtk_tree_view_column_get_title(ptr);
ptr gtk_tree_view_column_get_tree_view(ptr);
int gtk_tree_view_column_get_visible(ptr);
ptr gtk_tree_view_column_get_widget(ptr);
int gtk_tree_view_column_get_width(ptr);
int gtk_tree_view_column_get_x_offset(ptr);
void gtk_tree_view_column_pack_end(ptr, ptr, int);
void gtk_tree_view_column_pack_start(ptr, ptr, int);
void gtk_tree_view_column_queue_resize(ptr);
void gtk_tree_view_column_set_alignment(ptr, float);
void gtk_tree_view_column_set_cell_data_func(ptr, ptr, ptr, ptr, ptr);
void gtk_tree_view_column_set_clickable(ptr, int);
void gtk_tree_view_column_set_expand(ptr, int);
void gtk_tree_view_column_set_fixed_width(ptr, int);
void gtk_tree_view_column_set_max_width(ptr, int);
void gtk_tree_view_column_set_min_width(ptr, int);
void gtk_tree_view_column_set_reorderable(ptr, int);
void gtk_tree_view_column_set_resizable(ptr, int);
void gtk_tree_view_column_set_sizing(ptr, int);
void gtk_tree_view_column_set_sort_column_id(ptr, int);
void gtk_tree_view_column_set_sort_indicator(ptr, int);
void gtk_tree_view_column_set_sort_order(ptr, int);
void gtk_tree_view_column_set_spacing(ptr, int);
void gtk_tree_view_column_set_title(ptr, str);
void gtk_tree_view_column_set_visible(ptr, int);
void gtk_tree_view_column_set_widget(ptr, ptr);
ptr gtk_video_new();
ptr gtk_video_new_for_file(ptr);
ptr gtk_video_new_for_filename(ptr);
ptr gtk_video_new_for_media_stream(ptr);
ptr gtk_video_new_for_resource(str);
int gtk_video_get_autoplay(ptr);
ptr gtk_video_get_file(ptr);
int gtk_video_get_loop(ptr);
ptr gtk_video_get_media_stream(ptr);
void gtk_video_set_autoplay(ptr, int);
void gtk_video_set_file(ptr, ptr);
void gtk_video_set_filename(ptr, ptr);
void gtk_video_set_loop(ptr, int);
void gtk_video_set_media_stream(ptr, ptr);
void gtk_video_set_resource(ptr, str);
ptr gtk_viewport_new(ptr, ptr);
ptr gtk_viewport_get_child(ptr);
int gtk_viewport_get_scroll_to_focus(ptr);
void gtk_viewport_set_child(ptr, ptr);
void gtk_viewport_set_scroll_to_focus(ptr, int);
ptr gtk_volume_button_new();
int gtk_widget_get_default_direction(ptr);
void gtk_widget_set_default_direction(ptr, int);
void gtk_widget_action_set_enabled(ptr, str, int);
int gtk_widget_activate(ptr);
int gtk_widget_activate_action_variant(ptr, str, ptr);
void gtk_widget_activate_default(ptr);
void gtk_widget_add_controller(ptr, ptr);
void gtk_widget_add_css_class(ptr, str);
void gtk_widget_add_mnemonic_label(ptr, ptr);
uint gtk_widget_add_tick_callback(ptr, ptr, ptr, ptr);
void gtk_widget_allocate(ptr, int, int, int, ptr);
int gtk_widget_child_focus(ptr, int);
int gtk_widget_compute_bounds(ptr, ptr, ptr);
int gtk_widget_compute_expand(ptr, int);
int gtk_widget_compute_point(ptr, ptr, ptr, ptr);
int gtk_widget_compute_transform(ptr, ptr, ptr);
int gtk_widget_contains(ptr, double, double);
ptr gtk_widget_create_pango_context(ptr);
ptr gtk_widget_create_pango_layout(ptr, str);
int gtk_drag_check_threshold(ptr, int, int, int, int);
void gtk_widget_error_bell(ptr);
int gtk_widget_get_allocated_baseline(ptr);
int gtk_widget_get_allocated_height(ptr);
int gtk_widget_get_allocated_width(ptr);
void gtk_widget_get_allocation(ptr, ptr);
ptr gtk_widget_get_ancestor(ptr, ulong);
int gtk_widget_get_can_focus(ptr);
int gtk_widget_get_can_target(ptr);
int gtk_widget_get_child_visible(ptr);
ptr gtk_widget_get_clipboard(ptr);
ptr gtk_widget_get_css_classes(ptr);
str gtk_widget_get_css_name(ptr);
ptr gtk_widget_get_cursor(ptr);
int gtk_widget_get_direction(ptr);
ptr gtk_widget_get_display(ptr);
ptr gtk_widget_get_first_child(ptr);
ptr gtk_widget_get_focus_child(ptr);
int gtk_widget_get_focus_on_click(ptr);
int gtk_widget_get_focusable(ptr);
ptr gtk_widget_get_font_map(ptr);
ptr gtk_widget_get_font_options(ptr);
ptr gtk_widget_get_frame_clock(ptr);
int gtk_widget_get_halign(ptr);
int gtk_widget_get_has_tooltip(ptr);
int gtk_widget_get_height(ptr);
int gtk_widget_get_hexpand(ptr);
int gtk_widget_get_hexpand_set(ptr);
ptr gtk_widget_get_last_child(ptr);
ptr gtk_widget_get_layout_manager(ptr);
int gtk_widget_get_mapped(ptr);
int gtk_widget_get_margin_bottom(ptr);
int gtk_widget_get_margin_end(ptr);
int gtk_widget_get_margin_start(ptr);
int gtk_widget_get_margin_top(ptr);
str gtk_widget_get_name(ptr);
ptr gtk_widget_get_native(ptr);
ptr gtk_widget_get_next_sibling(ptr);
double gtk_widget_get_opacity(ptr);
int gtk_widget_get_overflow(ptr);
ptr gtk_widget_get_pango_context(ptr);
ptr gtk_widget_get_parent(ptr);
void gtk_widget_get_preferred_size(ptr, ptr, ptr);
ptr gtk_widget_get_prev_sibling(ptr);
ptr gtk_widget_get_primary_clipboard(ptr);
int gtk_widget_get_realized(ptr);
int gtk_widget_get_receives_default(ptr);
int gtk_widget_get_request_mode(ptr);
ptr gtk_widget_get_root(ptr);
int gtk_widget_get_scale_factor(ptr);
int gtk_widget_get_sensitive(ptr);
ptr gtk_widget_get_settings(ptr);
int gtk_widget_get_size(ptr, int);
void gtk_widget_get_size_request(ptr, ptr, ptr);
int gtk_widget_get_state_flags(ptr);
ptr gtk_widget_get_style_context(ptr);
ptr gtk_widget_get_template_child(ptr, ulong, str);
str gtk_widget_get_tooltip_markup(ptr);
str gtk_widget_get_tooltip_text(ptr);
int gtk_widget_get_valign(ptr);
int gtk_widget_get_vexpand(ptr);
int gtk_widget_get_vexpand_set(ptr);
int gtk_widget_get_visible(ptr);
int gtk_widget_get_width(ptr);
int gtk_widget_grab_focus(ptr);
int gtk_widget_has_css_class(ptr, str);
int gtk_widget_has_default(ptr);
int gtk_widget_has_focus(ptr);
int gtk_widget_has_visible_focus(ptr);
void gtk_widget_hide(ptr);
int gtk_widget_in_destruction(ptr);
void gtk_widget_init_template(ptr);
void gtk_widget_insert_action_group(ptr, str, ptr);
void gtk_widget_insert_after(ptr, ptr, ptr);
void gtk_widget_insert_before(ptr, ptr, ptr);
int gtk_widget_is_ancestor(ptr, ptr);
int gtk_widget_is_drawable(ptr);
int gtk_widget_is_focus(ptr);
int gtk_widget_is_sensitive(ptr);
int gtk_widget_is_visible(ptr);
int gtk_widget_keynav_failed(ptr, int);
ptr gtk_widget_list_mnemonic_labels(ptr);
void gtk_widget_map(ptr);
void gtk_widget_measure(ptr, int, int, ptr, ptr, ptr, ptr);
int gtk_widget_mnemonic_activate(ptr, int);
ptr gtk_widget_observe_children(ptr);
ptr gtk_widget_observe_controllers(ptr);
ptr gtk_widget_pick(ptr, double, double, int);
void gtk_widget_queue_allocate(ptr);
void gtk_widget_queue_draw(ptr);
void gtk_widget_queue_resize(ptr);
void gtk_widget_realize(ptr);
void gtk_widget_remove_controller(ptr, ptr);
void gtk_widget_remove_css_class(ptr, str);
void gtk_widget_remove_mnemonic_label(ptr, ptr);
void gtk_widget_remove_tick_callback(ptr, uint);
void gtk_widget_set_can_focus(ptr, int);
void gtk_widget_set_can_target(ptr, int);
void gtk_widget_set_child_visible(ptr, int);
void gtk_widget_set_css_classes(ptr, ptr);
void gtk_widget_set_cursor(ptr, ptr);
void gtk_widget_set_cursor_from_name(ptr, str);
void gtk_widget_set_direction(ptr, int);
void gtk_widget_set_focus_child(ptr, ptr);
void gtk_widget_set_focus_on_click(ptr, int);
void gtk_widget_set_focusable(ptr, int);
void gtk_widget_set_font_map(ptr, ptr);
void gtk_widget_set_font_options(ptr, ptr);
void gtk_widget_set_halign(ptr, int);
void gtk_widget_set_has_tooltip(ptr, int);
void gtk_widget_set_hexpand(ptr, int);
void gtk_widget_set_hexpand_set(ptr, int);
void gtk_widget_set_layout_manager(ptr, ptr);
void gtk_widget_set_margin_bottom(ptr, int);
void gtk_widget_set_margin_end(ptr, int);
void gtk_widget_set_margin_start(ptr, int);
void gtk_widget_set_margin_top(ptr, int);
void gtk_widget_set_name(ptr, str);
void gtk_widget_set_opacity(ptr, double);
void gtk_widget_set_overflow(ptr, int);
void gtk_widget_set_parent(ptr, ptr);
void gtk_widget_set_receives_default(ptr, int);
void gtk_widget_set_sensitive(ptr, int);
void gtk_widget_set_size_request(ptr, int, int);
void gtk_widget_set_state_flags(ptr, int, int);
void gtk_widget_set_tooltip_markup(ptr, str);
void gtk_widget_set_tooltip_text(ptr, str);
void gtk_widget_set_valign(ptr, int);
void gtk_widget_set_vexpand(ptr, int);
void gtk_widget_set_vexpand_set(ptr, int);
void gtk_widget_set_visible(ptr, int);
int gtk_widget_should_layout(ptr);
void gtk_widget_show(ptr);
void gtk_widget_size_allocate(ptr, ptr, int);
void gtk_widget_snapshot_child(ptr, ptr, ptr);
int gtk_widget_translate_coordinates(ptr, ptr, double, double, ptr, ptr);
void gtk_widget_trigger_tooltip_query(ptr);
void gtk_widget_unmap(ptr);
void gtk_widget_unparent(ptr);
void gtk_widget_unrealize(ptr);
void gtk_widget_unset_state_flags(ptr, int);
void gtk_widget_class_add_shortcut(ptr, ptr);
void gtk_widget_class_bind_template_callback_full(ptr, str, ptr);
void gtk_widget_class_bind_template_child_full(ptr, str, int, long);
int gtk_widget_class_get_accessible_role(ptr);
uint gtk_widget_class_get_activate_signal(ptr);
str gtk_widget_class_get_css_name(ptr);
ulong gtk_widget_class_get_layout_manager_type(ptr);
void gtk_widget_class_install_action(ptr, str, str, ptr);
void gtk_widget_class_install_property_action(ptr, str, str);
int gtk_widget_class_query_action(ptr, uint, ptr, str, ptr, str);
void gtk_widget_class_set_accessible_role(ptr, int);
void gtk_widget_class_set_activate_signal(ptr, uint);
void gtk_widget_class_set_activate_signal_from_name(ptr, str);
void gtk_widget_class_set_css_name(ptr, str);
void gtk_widget_class_set_layout_manager_type(ptr, ulong);
void gtk_widget_class_set_template(ptr, ptr);
void gtk_widget_class_set_template_from_resource(ptr, str);
void gtk_widget_class_set_template_scope(ptr, ptr);
ptr gtk_widget_paintable_new(ptr);
ptr gtk_widget_paintable_get_widget(ptr);
void gtk_widget_paintable_set_widget(ptr, ptr);
ptr gtk_window_new();
str gtk_window_get_default_icon_name(ptr);
ptr gtk_window_get_toplevels(ptr);
ptr gtk_window_list_toplevels(ptr);
void gtk_window_set_auto_startup_notification(ptr, int);
void gtk_window_set_default_icon_name(ptr, str);
void gtk_window_set_interactive_debugging(ptr, int);
void gtk_window_close(ptr);
void gtk_window_destroy(ptr);
void gtk_window_fullscreen(ptr);
void gtk_window_fullscreen_on_monitor(ptr, ptr);
ptr gtk_window_get_application(ptr);
ptr gtk_window_get_child(ptr);
int gtk_window_get_decorated(ptr);
void gtk_window_get_default_size(ptr, ptr, ptr);
ptr gtk_window_get_default_widget(ptr);
int gtk_window_get_deletable(ptr);
int gtk_window_get_destroy_with_parent(ptr);
ptr gtk_window_get_focus(ptr);
int gtk_window_get_focus_visible(ptr);
ptr gtk_window_get_group(ptr);
int gtk_window_get_handle_menubar_accel(ptr);
int gtk_window_get_hide_on_close(ptr);
str gtk_window_get_icon_name(ptr);
int gtk_window_get_mnemonics_visible(ptr);
int gtk_window_get_modal(ptr);
int gtk_window_get_resizable(ptr);
str gtk_window_get_title(ptr);
ptr gtk_window_get_titlebar(ptr);
ptr gtk_window_get_transient_for(ptr);
int gtk_window_has_group(ptr);
int gtk_window_is_active(ptr);
int gtk_window_is_fullscreen(ptr);
int gtk_window_is_maximized(ptr);
void gtk_window_maximize(ptr);
void gtk_window_minimize(ptr);
void gtk_window_present(ptr);
void gtk_window_present_with_time(ptr, uint);
void gtk_window_set_application(ptr, ptr);
void gtk_window_set_child(ptr, ptr);
void gtk_window_set_decorated(ptr, int);
void gtk_window_set_default_size(ptr, int, int);
void gtk_window_set_default_widget(ptr, ptr);
void gtk_window_set_deletable(ptr, int);
void gtk_window_set_destroy_with_parent(ptr, int);
void gtk_window_set_display(ptr, ptr);
void gtk_window_set_focus(ptr, ptr);
void gtk_window_set_focus_visible(ptr, int);
void gtk_window_set_handle_menubar_accel(ptr, int);
void gtk_window_set_hide_on_close(ptr, int);
void gtk_window_set_icon_name(ptr, str);
void gtk_window_set_mnemonics_visible(ptr, int);
void gtk_window_set_modal(ptr, int);
void gtk_window_set_resizable(ptr, int);
void gtk_window_set_startup_id(ptr, str);
void gtk_window_set_title(ptr, str);
void gtk_window_set_titlebar(ptr, ptr);
void gtk_window_set_transient_for(ptr, ptr);
void gtk_window_unfullscreen(ptr);
void gtk_window_unmaximize(ptr);
void gtk_window_unminimize(ptr);
ptr gtk_window_controls_new(int);
str gtk_window_controls_get_decoration_layout(ptr);
int gtk_window_controls_get_empty(ptr);
int gtk_window_controls_get_side(ptr);
void gtk_window_controls_set_decoration_layout(ptr, str);
void gtk_window_controls_set_side(ptr, int);
ptr gtk_window_group_new();
void gtk_window_group_add_window(ptr, ptr);
ptr gtk_window_group_list_windows(ptr);
void gtk_window_group_remove_window(ptr, ptr);
ptr gtk_window_handle_new();
ptr gtk_window_handle_get_child(ptr);
void gtk_window_handle_set_child(ptr, ptr);
int gtk_accelerator_get_default_mod_mask();
ptr gtk_accelerator_get_label(uint, int);
ptr gtk_accelerator_get_label_with_keycode(ptr, uint, uint, int);
ptr gtk_accelerator_name(uint, int);
ptr gtk_accelerator_name_with_keycode(ptr, uint, uint, int);
int gtk_accelerator_parse(str, ptr, ptr);
int gtk_accelerator_parse_with_keycode(str, ptr, ptr, ptr, ptr);
int gtk_accelerator_valid(uint, int);
void gtk_accessible_property_init_value(int, ptr);
void gtk_accessible_relation_init_value(int, ptr);
void gtk_accessible_state_init_value(int, ptr);
int gtk_bitset_iter_init_at(ptr, ptr, uint, ptr);
int gtk_bitset_iter_init_first(ptr, ptr, ptr);
int gtk_bitset_iter_init_last(ptr, ptr, ptr);
uint gtk_builder_error_quark();
str gtk_check_version(uint, uint, uint);
uint gtk_constraint_vfl_parser_error_quark();
uint gtk_css_parser_error_quark();
uint gtk_css_parser_warning_quark();
void gtk_disable_setlocale();
int gtk_distribute_natural_allocation(int, uint, ptr);
int gtk_editable_delegate_get_property(ptr, uint, ptr, ptr);
int gtk_editable_delegate_set_property(ptr, uint, ptr, ptr);
uint gtk_editable_install_properties(ptr, uint);
void gtk_enumerate_printers(ptr, ptr, ptr, int);
uint gtk_file_chooser_error_quark();
uint gtk_get_binary_age();
int gtk_get_debug_flags();
ptr gtk_get_default_language();
uint gtk_get_interface_age();
int gtk_get_locale_direction();
uint gtk_get_major_version();
uint gtk_get_micro_version();
uint gtk_get_minor_version();
void gtk_hsv_to_rgb(float, float, float, ptr, ptr, ptr);
uint gtk_icon_theme_error_quark();
void gtk_init();
int gtk_init_check();
int gtk_is_initialized();
ptr gtk_native_get_for_surface(ptr);
int gtk_ordering_from_cmpfunc(int);
str gtk_paper_size_get_default();
ptr gtk_paper_size_get_paper_sizes(int);
ptr gtk_param_spec_expression(str, str, str, int);
uint gtk_print_error_quark();
ptr gtk_print_run_page_setup_dialog(ptr, ptr, ptr);
void gtk_print_run_page_setup_dialog_async(ptr, ptr, ptr, ptr, ptr);
uint gtk_recent_manager_error_quark();
void gtk_render_activity(ptr, ptr, double, double, double, double);
void gtk_render_arrow(ptr, ptr, double, double, double, double);
void gtk_render_background(ptr, ptr, double, double, double, double);
void gtk_render_check(ptr, ptr, double, double, double, double);
void gtk_render_expander(ptr, ptr, double, double, double, double);
void gtk_render_focus(ptr, ptr, double, double, double, double);
void gtk_render_frame(ptr, ptr, double, double, double, double);
void gtk_render_handle(ptr, ptr, double, double, double, double);
void gtk_render_icon(ptr, ptr, ptr, double, double);
void gtk_render_layout(ptr, ptr, double, double, ptr);
void gtk_render_line(ptr, ptr, double, double, double, double);
void gtk_render_option(ptr, ptr, double, double, double, double);
void gtk_rgb_to_hsv(float, float, float, ptr, ptr, ptr);
void gtk_set_debug_flags(int);
void gtk_show_uri(ptr, str, uint);
void gtk_show_uri_full(ptr, str, uint, ptr, ptr, ptr);
int gtk_show_uri_full_finish(ptr, ptr, ptr);
void gtk_test_accessible_assertion_message_role(str, str, int, str, str, ptr, int, int);
int gtk_test_accessible_has_property(ptr, int);
int gtk_test_accessible_has_relation(ptr, int);
int gtk_test_accessible_has_role(ptr, int);
int gtk_test_accessible_has_state(ptr, int);
ptr gtk_test_list_all_types(ptr);
void gtk_test_register_all_types();
void gtk_test_widget_wait_for_draw(ptr);
ptr gtk_tree_create_row_drag_content(ptr, ptr);
int gtk_tree_get_row_drag_data(ptr, ptr, ptr);
void gtk_tree_row_reference_deleted(ptr, ptr);
void gtk_tree_row_reference_inserted(ptr, ptr);
ptr gtk_value_dup_expression(ptr);
ptr gtk_value_get_expression(ptr);
void gtk_value_set_expression(ptr, ptr);
void gtk_value_take_expression(ptr, ptr);
};

extern callback int GtkAssistantPageFunc(int, ptr);
extern callback int GtkCellAllocCallback(ptr, ptr, ptr, ptr);
extern callback int GtkCellCallback(ptr, ptr);
extern callback void GtkCellLayoutDataFunc(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkCustomAllocateFunc(ptr, int, int, int);
extern callback int GtkCustomFilterFunc(ptr, ptr);
extern callback void GtkCustomMeasureFunc(ptr, int, int, ptr, ptr, ptr, ptr);
extern callback int GtkCustomRequestModeFunc(ptr);
extern callback void GtkDrawingAreaDrawFunc(ptr, ptr, int, int, ptr);
extern callback int GtkEntryCompletionMatchFunc(ptr, str, ptr, ptr);
extern callback void GtkExpressionNotify(ptr);
extern callback ptr GtkFlowBoxCreateWidgetFunc(ptr, ptr);
extern callback int GtkFlowBoxFilterFunc(ptr, ptr);
extern callback void GtkFlowBoxForeachFunc(ptr, ptr, ptr);
extern callback int GtkFlowBoxSortFunc(ptr, ptr, ptr);
extern callback int GtkFontFilterFunc(ptr, ptr, ptr);
extern callback void GtkIconViewForeachFunc(ptr, ptr, ptr);
extern callback ptr GtkListBoxCreateWidgetFunc(ptr, ptr);
extern callback int GtkListBoxFilterFunc(ptr, ptr);
extern callback void GtkListBoxForeachFunc(ptr, ptr, ptr);
extern callback int GtkListBoxSortFunc(ptr, ptr, ptr);
extern callback void GtkListBoxUpdateHeaderFunc(ptr, ptr, ptr);
extern callback ptr GtkMapListModelMapFunc(ptr, ptr);
extern callback void GtkMenuButtonCreatePopupFunc(ptr, ptr);
extern callback void GtkPageSetupDoneFunc(ptr, ptr);
extern callback void GtkPrintJobCompleteFunc(ptr, ptr, ptr);
extern callback void GtkPrintSettingsFunc(str, str, ptr);
extern callback int GtkPrinterFunc(ptr, ptr);
extern callback ptr GtkScaleFormatValueFunc(ptr, double, ptr);
extern callback int GtkShortcutFunc(ptr, ptr, ptr);
extern callback int GtkTextCharPredicate(ptr, ptr);
extern callback void GtkTextTagTableForeach(ptr, ptr);
extern callback int GtkTickCallback(ptr, ptr, ptr);
extern callback void GtkTreeCellDataFunc(ptr, ptr, ptr, ptr, ptr);
extern callback int GtkTreeIterCompareFunc(ptr, ptr, ptr, ptr);
extern callback ptr GtkTreeListModelCreateModelFunc(ptr, ptr);
extern callback void GtkTreeModelFilterModifyFunc(ptr, ptr, ptr, int, ptr);
extern callback int GtkTreeModelFilterVisibleFunc(ptr, ptr, ptr);
extern callback int GtkTreeModelForeachFunc(ptr, ptr, ptr, ptr);
extern callback void GtkTreeSelectionForeachFunc(ptr, ptr, ptr, ptr);
extern callback int GtkTreeSelectionFunc(ptr, ptr, ptr, int, ptr);
extern callback int GtkTreeViewColumnDropFunc(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkTreeViewMappingFunc(ptr, ptr, ptr);
extern callback int GtkTreeViewRowSeparatorFunc(ptr, ptr, ptr);
extern callback int GtkTreeViewSearchEqualFunc(ptr, int, str, ptr, ptr);
extern callback void GtkWidgetActionActivateFunc(ptr, str, ptr);
extern struct GtkATContextClass{

};

extern struct GtkAccessibleInterface{

};

extern struct GtkActionableInterface{
byte g_iface[16],  // GtkTypeInterface
ptr get_action_name,  // ::get_action_name
ptr set_action_name,  // ::set_action_name
ptr get_action_target_value,  // ::get_action_target_value
ptr set_action_target_value,  // ::set_action_target_value
};

extern struct GtkActivateActionClass{

};

extern struct GtkAdjustmentClass{
byte parent_class[136],  // GtkInitiallyUnownedClass
ptr changed,  // ::changed
ptr value_changed,  // ::value_changed
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkAlternativeTriggerClass{

};

extern struct GtkAnyFilterClass{

};

extern struct GtkApplicationClass{
byte parent_class[312],  // GtkApplicationClass
ptr window_added,  // ::window_added
ptr window_removed,  // ::window_removed
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkApplicationWindowClass{
byte parent_class[512],  // GtkWindowClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkBinLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

// name GtkBitset
extern struct GtkBitset{

};

// name GtkBitsetIter
extern struct GtkBitsetIter{
ptr private_data_0,
ptr private_data_1,
ptr private_data_2,
ptr private_data_3,
ptr private_data_4,
ptr private_data_5,
ptr private_data_6,
ptr private_data_7,
ptr private_data_8,
ptr private_data_9,
};

extern struct GtkBookmarkListClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkBoolFilterClass{
byte parent_class[216],  // GtkFilterClass
};

// name GtkBorder
extern struct GtkBorder{
short left,  // gint16
short right,  // gint16
short top,  // gint16
short bottom,  // gint16
};

extern struct GtkBoxClass{
byte parent_class[408],  // GtkWidgetClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkBoxLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkBuildableIface{
byte g_iface[16],  // GtkTypeInterface
ptr set_id,  // ::set_id
ptr get_id,  // ::get_id
ptr add_child,  // ::add_child
ptr set_buildable_property,  // ::set_buildable_property
ptr construct_child,  // void*
ptr custom_tag_start,  // ::custom_tag_start
ptr custom_tag_end,  // ::custom_tag_end
ptr custom_finished,  // ::custom_finished
ptr parser_finished,  // ::parser_finished
ptr get_internal_child,  // ::get_internal_child
};

extern struct GtkBuildableParseContext{

};

extern struct GtkBuildableParser{
ptr start_element,  // ::start_element
ptr end_element,  // ::end_element
ptr text,  // ::text
ptr error,  // ::error
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
};

extern struct GtkBuilderCScopeClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkBuilderClass{

};

extern struct GtkBuilderListItemFactoryClass{

};

extern struct GtkBuilderScopeInterface{
byte g_iface[16],  // GtkTypeInterface
ptr get_type_from_name,  // ::get_type_from_name
ptr get_type_from_function,  // ::get_type_from_function
ptr create_closure,  // ::create_closure
};

extern struct GtkButtonClass{
byte parent_class[408],  // GtkWidgetClass
ptr clicked,  // ::clicked
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkButtonPrivate{

};

extern struct GtkCallbackActionClass{

};

extern struct GtkCellAreaClass{
byte parent_class[136],  // GtkInitiallyUnownedClass
ptr add,  // ::add
ptr remove,  // ::remove
ptr foreach,  // ::foreach
ptr foreach_alloc,  // ::foreach_alloc
ptr event,  // ::event
ptr snapshot,  // ::snapshot
ptr apply_attributes,  // ::apply_attributes
ptr create_context,  // ::create_context
ptr copy_context,  // ::copy_context
ptr get_request_mode,  // ::get_request_mode
ptr get_preferred_width,  // ::get_preferred_width
ptr get_preferred_height_for_width,  // ::get_preferred_height_for_width
ptr get_preferred_height,  // ::get_preferred_height
ptr get_preferred_width_for_height,  // ::get_preferred_width_for_height
ptr set_cell_property,  // ::set_cell_property
ptr get_cell_property,  // ::get_cell_property
ptr focus,  // ::focus
ptr is_activatable,  // ::is_activatable
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkCellAreaContextClass{
byte parent_class[136],  // GtkObjectClass
ptr allocate,  // ::allocate
ptr reset,  // ::reset
ptr get_preferred_height_for_width,  // ::get_preferred_height_for_width
ptr get_preferred_width_for_height,  // ::get_preferred_width_for_height
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkCellAreaContextPrivate{

};

extern struct GtkCellEditableIface{
byte g_iface[16],  // GtkTypeInterface
ptr editing_done,  // ::editing_done
ptr remove_widget,  // ::remove_widget
ptr start_editing,  // ::start_editing
};

extern struct GtkCellLayoutIface{
byte g_iface[16],  // GtkTypeInterface
ptr pack_start,  // ::pack_start
ptr pack_end,  // ::pack_end
ptr clear,  // ::clear
ptr add_attribute,  // ::add_attribute
ptr set_cell_data_func,  // ::set_cell_data_func
ptr clear_attributes,  // ::clear_attributes
ptr reorder,  // ::reorder
ptr get_cells,  // ::get_cells
ptr get_area,  // ::get_area
};

extern struct GtkCellRendererClass{
byte parent_class[136],  // GtkInitiallyUnownedClass
ptr get_request_mode,  // ::get_request_mode
ptr get_preferred_width,  // ::get_preferred_width
ptr get_preferred_height_for_width,  // ::get_preferred_height_for_width
ptr get_preferred_height,  // ::get_preferred_height
ptr get_preferred_width_for_height,  // ::get_preferred_width_for_height
ptr get_aligned_area,  // ::get_aligned_area
ptr snapshot,  // ::snapshot
ptr activate,  // ::activate
ptr start_editing,  // ::start_editing
ptr editing_canceled,  // ::editing_canceled
ptr editing_started,  // ::editing_started
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkCellRendererClassPrivate{

};

extern struct GtkCellRendererPrivate{

};

extern struct GtkCellRendererTextClass{
byte parent_class[288],  // GtkCellRendererClass
ptr edited,  // ::edited
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkCenterBoxClass{

};

extern struct GtkCenterLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkCheckButtonClass{
byte parent_class[408],  // GtkWidgetClass
ptr toggled,  // ::toggled
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
};

extern struct GtkColorChooserInterface{
byte base_interface[16],  // GtkTypeInterface
ptr get_rgba,  // ::get_rgba
ptr set_rgba,  // ::set_rgba
ptr add_palette,  // ::add_palette
ptr color_activated,  // ::color_activated
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
ptr padding_8,
ptr padding_9,
ptr padding_10,
ptr padding_11,
};

extern struct GtkColumnViewClass{

};

extern struct GtkColumnViewColumnClass{

};

extern struct GtkComboBoxClass{
byte parent_class[408],  // GtkWidgetClass
ptr changed,  // ::changed
ptr format_entry_text,  // ::format_entry_text
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
};

extern struct GtkConstraintClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkConstraintGuideClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkConstraintLayoutChildClass{
byte parent_class[136],  // GtkLayoutChildClass
};

extern struct GtkConstraintLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkConstraintTargetInterface{

};

extern struct GtkCssLocation{
ulong bytes,  // guint64
ulong chars,  // guint64
ulong lines,  // guint64
ulong line_bytes,  // guint64
ulong line_chars,  // guint64
};

extern struct GtkCssProviderClass{

};

extern struct GtkCssProviderPrivate{

};

// name GtkCssSection
extern struct GtkCssSection{

};

extern struct GtkCssStyleChange{

};

extern struct GtkCustomFilterClass{
byte parent_class[216],  // GtkFilterClass
};

extern struct GtkCustomLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkCustomSorterClass{
byte parent_class[216],  // GtkSorterClass
};

extern struct GtkDialogClass{
byte parent_class[512],  // GtkWindowClass
ptr response,  // ::response
ptr close,  // ::close
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkDirectoryListClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkDragIconClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkDragSourceClass{

};

extern struct GtkDrawingAreaClass{
byte parent_class[408],  // GtkWidgetClass
ptr resize,  // ::resize
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkDropControllerMotionClass{

};

extern struct GtkDropDownClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkDropTargetAsyncClass{

};

extern struct GtkDropTargetClass{

};

extern struct GtkEditableInterface{
byte base_iface[16],  // GtkTypeInterface
ptr insert_text,  // ::insert_text
ptr delete_text,  // ::delete_text
ptr changed,  // ::changed
ptr get_text,  // ::get_text
ptr do_insert_text,  // ::do_insert_text
ptr do_delete_text,  // ::do_delete_text
ptr get_selection_bounds,  // ::get_selection_bounds
ptr set_selection_bounds,  // ::set_selection_bounds
ptr get_delegate,  // ::get_delegate
};

extern struct GtkEditableLabelClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkEmojiChooserClass{

};

extern struct GtkEntryBufferClass{
byte parent_class[136],  // GtkObjectClass
ptr inserted_text,  // ::inserted_text
ptr deleted_text,  // ::deleted_text
ptr get_text,  // ::get_text
ptr get_length,  // ::get_length
ptr insert_text,  // ::insert_text
ptr delete_text,  // ::delete_text
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
ptr _gtk_reserved5,  // void*
ptr _gtk_reserved6,  // void*
ptr _gtk_reserved7,  // void*
ptr _gtk_reserved8,  // void*
};

extern struct GtkEntryClass{
byte parent_class[408],  // GtkWidgetClass
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkEventControllerClass{

};

extern struct GtkEventControllerFocusClass{

};

extern struct GtkEventControllerKeyClass{

};

extern struct GtkEventControllerLegacyClass{

};

extern struct GtkEventControllerMotionClass{

};

extern struct GtkEventControllerScrollClass{

};

extern struct GtkEveryFilterClass{

};

// name GtkExpressionWatch
extern struct GtkExpressionWatch{

};

extern struct GtkFileChooserNativeClass{
byte parent_class[192],  // GtkNativeDialogClass
};

extern struct GtkFilterClass{
byte parent_class[136],  // GtkObjectClass
ptr match,  // ::match
ptr get_strictness,  // ::get_strictness
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
ptr _gtk_reserved5,  // void*
ptr _gtk_reserved6,  // void*
ptr _gtk_reserved7,  // void*
ptr _gtk_reserved8,  // void*
};

extern struct GtkFilterListModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkFixedClass{
byte parent_class[408],  // GtkWidgetClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkFixedLayoutChildClass{
byte parent_class[136],  // GtkLayoutChildClass
};

extern struct GtkFixedLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkFlattenListModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkFlowBoxChildClass{
byte parent_class[408],  // GtkWidgetClass
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkFontChooserIface{
byte base_iface[16],  // GtkTypeInterface
ptr get_font_family,  // ::get_font_family
ptr get_font_face,  // ::get_font_face
ptr get_font_size,  // ::get_font_size
ptr set_filter_func,  // ::set_filter_func
ptr font_activated,  // ::font_activated
ptr set_font_map,  // ::set_font_map
ptr get_font_map,  // ::get_font_map
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
ptr padding_8,
ptr padding_9,
};

extern struct GtkFrameClass{
byte parent_class[408],  // GtkWidgetClass
ptr compute_child_allocation,  // ::compute_child_allocation
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkGLAreaClass{
byte parent_class[408],  // GtkWidgetClass
ptr render,  // ::render
ptr resize,  // ::resize
ptr create_context,  // void*
ptr _padding_0,
ptr _padding_1,
ptr _padding_2,
ptr _padding_3,
ptr _padding_4,
ptr _padding_5,
ptr _padding_6,
ptr _padding_7,
};

extern struct GtkGestureClass{

};

extern struct GtkGestureClickClass{

};

extern struct GtkGestureDragClass{

};

extern struct GtkGestureLongPressClass{

};

extern struct GtkGesturePanClass{

};

extern struct GtkGestureRotateClass{

};

extern struct GtkGestureSingleClass{

};

extern struct GtkGestureStylusClass{

};

extern struct GtkGestureSwipeClass{

};

extern struct GtkGestureZoomClass{

};

extern struct GtkGridClass{
byte parent_class[408],  // GtkWidgetClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkGridLayoutChildClass{
byte parent_class[136],  // GtkLayoutChildClass
};

extern struct GtkGridLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkGridViewClass{

};

extern struct GtkIMContextClass{
byte parent_class[136],  // GtkObjectClass
ptr preedit_start,  // ::preedit_start
ptr preedit_end,  // ::preedit_end
ptr preedit_changed,  // ::preedit_changed
ptr commit,  // ::commit
ptr retrieve_surrounding,  // ::retrieve_surrounding
ptr delete_surrounding,  // ::delete_surrounding
ptr set_client_widget,  // ::set_client_widget
ptr get_preedit_string,  // ::get_preedit_string
ptr filter_keypress,  // ::filter_keypress
ptr focus_in,  // ::focus_in
ptr focus_out,  // ::focus_out
ptr reset,  // ::reset
ptr set_cursor_location,  // ::set_cursor_location
ptr set_use_preedit,  // ::set_use_preedit
ptr set_surrounding,  // ::set_surrounding
ptr get_surrounding,  // ::get_surrounding
ptr set_surrounding_with_selection,  // ::set_surrounding_with_selection
ptr get_surrounding_with_selection,  // ::get_surrounding_with_selection
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
ptr _gtk_reserved5,  // void*
};

extern struct GtkIMContextSimpleClass{
byte parent_class[320],  // GtkIMContextClass
};

extern struct GtkIMContextSimplePrivate{

};

extern struct GtkIMMulticontextClass{
byte parent_class[320],  // GtkIMContextClass
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkIMMulticontextPrivate{

};

extern struct GtkKeyvalTriggerClass{

};

extern struct GtkLayoutChildClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkLayoutManagerClass{
byte parent_class[136],  // GtkObjectClass
ptr get_request_mode,  // ::get_request_mode
ptr measure,  // ::measure
ptr allocate,  // ::allocate
ulong layout_child_type,  // GType
ptr create_layout_child,  // ::create_layout_child
ptr root,  // ::root
ptr unroot,  // ::unroot
ptr _padding_0,
ptr _padding_1,
ptr _padding_2,
ptr _padding_3,
ptr _padding_4,
ptr _padding_5,
ptr _padding_6,
ptr _padding_7,
ptr _padding_8,
ptr _padding_9,
ptr _padding_10,
ptr _padding_11,
ptr _padding_12,
ptr _padding_13,
ptr _padding_14,
ptr _padding_15,
};

extern struct GtkListBaseClass{

};

extern struct GtkListBoxRowClass{
byte parent_class[408],  // GtkWidgetClass
ptr activate,  // ::activate
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkListItemClass{

};

extern struct GtkListItemFactoryClass{

};

extern struct GtkListStoreClass{
byte parent_class[136],  // GtkObjectClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkListStorePrivate{

};

extern struct GtkListViewClass{

};

extern struct GtkMapListModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkMediaControlsClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkMediaFileClass{
byte parent_class[248],  // GtkMediaStreamClass
ptr open,  // ::open
ptr close,  // ::close
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkMediaStreamClass{
byte parent_class[136],  // GtkObjectClass
ptr play,  // ::play
ptr pause,  // ::pause
ptr seek,  // ::seek
ptr update_audio,  // ::update_audio
ptr realize,  // ::realize
ptr unrealize,  // ::unrealize
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
ptr _gtk_reserved5,  // void*
ptr _gtk_reserved6,  // void*
ptr _gtk_reserved7,  // void*
ptr _gtk_reserved8,  // void*
};

extern struct GtkMessageDialogClass{

};

extern struct GtkMnemonicActionClass{

};

extern struct GtkMnemonicTriggerClass{

};

extern struct GtkMountOperationClass{
byte parent_class[256],  // GtkMountOperationClass
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkMountOperationPrivate{

};

extern struct GtkMultiFilterClass{

};

extern struct GtkMultiSelectionClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkMultiSorterClass{
byte parent_class[216],  // GtkSorterClass
};

extern struct GtkNamedActionClass{

};

extern struct GtkNativeDialogClass{
byte parent_class[136],  // GtkObjectClass
ptr response,  // ::response
ptr show,  // ::show
ptr hide,  // ::hide
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkNativeInterface{

};

extern struct GtkNeverTriggerClass{

};

extern struct GtkNoSelectionClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkNothingActionClass{

};

extern struct GtkNumericSorterClass{
byte parent_class[216],  // GtkSorterClass
};

extern struct GtkOrientableIface{
byte base_iface[16],  // GtkTypeInterface
};

extern struct GtkOverlayLayoutChildClass{
byte parent_class[136],  // GtkLayoutChildClass
};

extern struct GtkOverlayLayoutClass{
byte parent_class[320],  // GtkLayoutManagerClass
};

extern struct GtkPadActionEntry{
int type,  // GtkPadActionType
int index,  // gint32
int mode,  // gint32
str label,  // utf8*
str action_name,  // utf8*
};

extern struct GtkPadControllerClass{

};

extern struct GtkPageRange{
int start,  // gint32
int end,  // gint32
};

// name GtkPaperSize
extern struct GtkPaperSize{

};

extern struct GtkPasswordEntryBufferClass{
byte parent_class[248],  // GtkEntryBufferClass
};

extern struct GtkPasswordEntryClass{

};

extern struct GtkPictureClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkPopoverClass{
byte parent_class[408],  // GtkWidgetClass
ptr closed,  // ::closed
ptr activate_default,  // ::activate_default
ptr reserved_0,
ptr reserved_1,
ptr reserved_2,
ptr reserved_3,
ptr reserved_4,
ptr reserved_5,
ptr reserved_6,
ptr reserved_7,
};

extern struct GtkPrintBackend{

};

extern struct GtkPrintOperationClass{
byte parent_class[136],  // GtkObjectClass
ptr done,  // ::done
ptr begin_print,  // ::begin_print
ptr paginate,  // ::paginate
ptr request_page_setup,  // ::request_page_setup
ptr draw_page,  // ::draw_page
ptr end_print,  // ::end_print
ptr status_changed,  // ::status_changed
ptr create_custom_widget,  // void*
ptr custom_widget_apply,  // ::custom_widget_apply
ptr preview,  // ::preview
ptr update_custom_widget,  // ::update_custom_widget
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkPrintOperationPreviewIface{
byte g_iface[16],  // GtkTypeInterface
ptr ready,  // ::ready
ptr got_page_size,  // ::got_page_size
ptr render_page,  // ::render_page
ptr is_selected,  // ::is_selected
ptr end_preview,  // ::end_preview
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
ptr _gtk_reserved5,  // void*
ptr _gtk_reserved6,  // void*
ptr _gtk_reserved7,  // void*
ptr _gtk_reserved8,  // void*
};

extern struct GtkPrintOperationPrivate{

};

extern struct GtkRangeClass{
byte parent_class[408],  // GtkWidgetClass
ptr value_changed,  // ::value_changed
ptr adjust_bounds,  // ::adjust_bounds
ptr move_slider,  // ::move_slider
ptr get_range_border,  // ::get_range_border
ptr change_value,  // ::change_value
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkRecentData{
str display_name,  // utf8*
str description,  // utf8*
str mime_type,  // utf8*
str app_name,  // utf8*
str app_exec,  // utf8*
ptr groups,  // array*
int is_private,  // gboolean
};

// name GtkRecentInfo
extern struct GtkRecentInfo{

};

extern struct GtkRecentManagerClass{
byte parent_class[136],  // GtkObjectClass
ptr changed,  // ::changed
ptr _gtk_recent1,  // void*
ptr _gtk_recent2,  // void*
ptr _gtk_recent3,  // void*
ptr _gtk_recent4,  // void*
};

extern struct GtkRecentManagerPrivate{

};

extern struct GtkRequestedSize{
ptr data,  // void*
int minimum_size,  // gint32
int natural_size,  // gint32
};

// name GtkRequisition
extern struct GtkRequisition{
int width,  // gint32
int height,  // gint32
};

extern struct GtkRootInterface{

};

extern struct GtkScaleButtonClass{
byte parent_class[408],  // GtkWidgetClass
ptr value_changed,  // ::value_changed
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkScaleClass{
byte parent_class[512],  // GtkRangeClass
ptr get_layout_offsets,  // ::get_layout_offsets
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkScrollableInterface{
byte base_iface[16],  // GtkTypeInterface
ptr get_border,  // ::get_border
};

extern struct GtkSelectionFilterModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkSelectionModelInterface{
byte g_iface[16],  // GtkTypeInterface
ptr is_selected,  // ::is_selected
ptr get_selection_in_range,  // ::get_selection_in_range
ptr select_item,  // ::select_item
ptr unselect_item,  // ::unselect_item
ptr select_range,  // ::select_range
ptr unselect_range,  // ::unselect_range
ptr select_all,  // ::select_all
ptr unselect_all,  // ::unselect_all
ptr set_selection,  // ::set_selection
};

extern struct GtkShortcutActionClass{

};

extern struct GtkShortcutClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkShortcutControllerClass{

};

extern struct GtkShortcutLabelClass{

};

extern struct GtkShortcutManagerInterface{
byte g_iface[16],  // GtkTypeInterface
ptr add_controller,  // ::add_controller
ptr remove_controller,  // ::remove_controller
};

extern struct GtkShortcutTriggerClass{

};

extern struct GtkShortcutsGroupClass{

};

extern struct GtkShortcutsSectionClass{

};

extern struct GtkShortcutsShortcutClass{

};

extern struct GtkSignalActionClass{

};

extern struct GtkSignalListItemFactoryClass{

};

extern struct GtkSingleSelectionClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkSliceListModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkSnapshotClass{

};

extern struct GtkSortListModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkSorterClass{
byte parent_class[136],  // GtkObjectClass
ptr compare,  // ::compare
ptr get_order,  // ::get_order
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
ptr _gtk_reserved5,  // void*
ptr _gtk_reserved6,  // void*
ptr _gtk_reserved7,  // void*
ptr _gtk_reserved8,  // void*
};

extern struct GtkStringFilterClass{
byte parent_class[216],  // GtkFilterClass
};

extern struct GtkStringListClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkStringObjectClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkStringSorterClass{
byte parent_class[216],  // GtkSorterClass
};

extern struct GtkStyleContextClass{
byte parent_class[136],  // GtkObjectClass
ptr changed,  // ::changed
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkSymbolicPaintableInterface{
byte g_iface[16],  // GtkTypeInterface
ptr snapshot_symbolic,  // ::snapshot_symbolic
};

extern struct GtkTextBufferClass{
byte parent_class[136],  // GtkObjectClass
ptr insert_text,  // ::insert_text
ptr insert_paintable,  // ::insert_paintable
ptr insert_child_anchor,  // ::insert_child_anchor
ptr delete_range,  // ::delete_range
ptr changed,  // ::changed
ptr modified_changed,  // ::modified_changed
ptr mark_set,  // ::mark_set
ptr mark_deleted,  // ::mark_deleted
ptr apply_tag,  // ::apply_tag
ptr remove_tag,  // ::remove_tag
ptr begin_user_action,  // ::begin_user_action
ptr end_user_action,  // ::end_user_action
ptr paste_done,  // ::paste_done
ptr undo,  // ::undo
ptr redo,  // ::redo
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkTextBufferPrivate{

};

extern struct GtkTextChildAnchorClass{
byte parent_class[136],  // GtkObjectClass
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

// name GtkTextIter
extern struct GtkTextIter{
ptr dummy1,  // void*
ptr dummy2,  // void*
int dummy3,  // gint32
int dummy4,  // gint32
int dummy5,  // gint32
int dummy6,  // gint32
int dummy7,  // gint32
int dummy8,  // gint32
ptr dummy9,  // void*
ptr dummy10,  // void*
int dummy11,  // gint32
int dummy12,  // gint32
int dummy13,  // gint32
ptr dummy14,  // void*
};

extern struct GtkTextMarkClass{
byte parent_class[136],  // GtkObjectClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTextTagClass{
byte parent_class[136],  // GtkObjectClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTextTagPrivate{

};

extern struct GtkTextViewClass{
byte parent_class[408],  // GtkWidgetClass
ptr move_cursor,  // ::move_cursor
ptr set_anchor,  // ::set_anchor
ptr insert_at_cursor,  // ::insert_at_cursor
ptr delete_from_cursor,  // ::delete_from_cursor
ptr backspace,  // ::backspace
ptr cut_clipboard,  // ::cut_clipboard
ptr copy_clipboard,  // ::copy_clipboard
ptr paste_clipboard,  // ::paste_clipboard
ptr toggle_overwrite,  // ::toggle_overwrite
ptr create_buffer,  // void*
ptr snapshot_layer,  // ::snapshot_layer
ptr extend_selection,  // ::extend_selection
ptr insert_emoji,  // ::insert_emoji
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTextViewPrivate{

};

extern struct GtkToggleButtonClass{
byte parent_class[488],  // GtkButtonClass
ptr toggled,  // ::toggled
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTreeDragDestIface{
byte g_iface[16],  // GtkTypeInterface
ptr drag_data_received,  // ::drag_data_received
ptr row_drop_possible,  // ::row_drop_possible
};

extern struct GtkTreeDragSourceIface{
byte g_iface[16],  // GtkTypeInterface
ptr row_draggable,  // ::row_draggable
ptr drag_data_get,  // ::drag_data_get
ptr drag_data_delete,  // ::drag_data_delete
};

extern struct GtkTreeExpanderClass{
byte parent_class[408],  // GtkWidgetClass
};

// name GtkTreeIter
extern struct GtkTreeIter{
int stamp,  // gint32
ptr user_data,  // void*
ptr user_data2,  // void*
ptr user_data3,  // void*
};

extern struct GtkTreeListModelClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkTreeListRowClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkTreeListRowSorterClass{
byte parent_class[216],  // GtkSorterClass
};

extern struct GtkTreeModelFilterClass{
byte parent_class[136],  // GtkObjectClass
ptr visible,  // ::visible
ptr modify,  // ::modify
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTreeModelFilterPrivate{

};

extern struct GtkTreeModelIface{
byte g_iface[16],  // GtkTypeInterface
ptr row_changed,  // ::row_changed
ptr row_inserted,  // ::row_inserted
ptr row_has_child_toggled,  // ::row_has_child_toggled
ptr row_deleted,  // ::row_deleted
ptr rows_reordered,  // ::rows_reordered
ptr get_flags,  // ::get_flags
ptr get_n_columns,  // ::get_n_columns
ptr get_column_type,  // ::get_column_type
ptr get_iter,  // ::get_iter
ptr get_path,  // ::get_path
ptr get_value,  // ::get_value
ptr iter_next,  // ::iter_next
ptr iter_previous,  // ::iter_previous
ptr iter_children,  // ::iter_children
ptr iter_has_child,  // ::iter_has_child
ptr iter_n_children,  // ::iter_n_children
ptr iter_nth_child,  // ::iter_nth_child
ptr iter_parent,  // ::iter_parent
ptr ref_node,  // ::ref_node
ptr unref_node,  // ::unref_node
};

extern struct GtkTreeModelSortClass{
byte parent_class[136],  // GtkObjectClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTreeModelSortPrivate{

};

// name GtkTreePath
extern struct GtkTreePath{

};

// name GtkTreeRowReference
extern struct GtkTreeRowReference{

};

extern struct GtkTreeSortableIface{
byte g_iface[16],  // GtkTypeInterface
ptr sort_column_changed,  // ::sort_column_changed
ptr get_sort_column_id,  // ::get_sort_column_id
ptr set_sort_column_id,  // ::set_sort_column_id
ptr set_sort_func,  // ::set_sort_func
ptr set_default_sort_func,  // ::set_default_sort_func
ptr has_default_sort_func,  // ::has_default_sort_func
};

extern struct GtkTreeStoreClass{
byte parent_class[136],  // GtkObjectClass
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkTreeStorePrivate{

};

extern struct GtkTreeViewClass{
byte parent_class[408],  // GtkWidgetClass
ptr row_activated,  // ::row_activated
ptr test_expand_row,  // ::test_expand_row
ptr test_collapse_row,  // ::test_collapse_row
ptr row_expanded,  // ::row_expanded
ptr row_collapsed,  // ::row_collapsed
ptr columns_changed,  // ::columns_changed
ptr cursor_changed,  // ::cursor_changed
ptr move_cursor,  // ::move_cursor
ptr select_all,  // ::select_all
ptr unselect_all,  // ::unselect_all
ptr select_cursor_row,  // ::select_cursor_row
ptr toggle_cursor_row,  // ::toggle_cursor_row
ptr expand_collapse_cursor_row,  // ::expand_collapse_cursor_row
ptr select_cursor_parent,  // ::select_cursor_parent
ptr start_interactive_search,  // ::start_interactive_search
ptr _reserved_0,
ptr _reserved_1,
ptr _reserved_2,
ptr _reserved_3,
ptr _reserved_4,
ptr _reserved_5,
ptr _reserved_6,
ptr _reserved_7,
ptr _reserved_8,
ptr _reserved_9,
ptr _reserved_10,
ptr _reserved_11,
ptr _reserved_12,
ptr _reserved_13,
ptr _reserved_14,
ptr _reserved_15,
};

extern struct GtkVideoClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkWidgetClass{
byte parent_class[136],  // GtkInitiallyUnownedClass
ptr show,  // ::show
ptr hide,  // ::hide
ptr map,  // ::map
ptr unmap,  // ::unmap
ptr realize,  // ::realize
ptr unrealize,  // ::unrealize
ptr root,  // ::root
ptr unroot,  // ::unroot
ptr size_allocate,  // ::size_allocate
ptr state_flags_changed,  // ::state_flags_changed
ptr direction_changed,  // ::direction_changed
ptr get_request_mode,  // ::get_request_mode
ptr measure,  // ::measure
ptr mnemonic_activate,  // ::mnemonic_activate
ptr grab_focus,  // ::grab_focus
ptr focus,  // ::focus
ptr set_focus_child,  // ::set_focus_child
ptr move_focus,  // ::move_focus
ptr keynav_failed,  // ::keynav_failed
ptr query_tooltip,  // ::query_tooltip
ptr compute_expand,  // ::compute_expand
ptr css_changed,  // ::css_changed
ptr system_setting_changed,  // ::system_setting_changed
ptr snapshot,  // ::snapshot
ptr contains,  // ::contains
ptr priv,  // GtkWidgetClassPrivate*
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkWidgetClassPrivate{

};

extern struct GtkWidgetPaintableClass{
byte parent_class[136],  // GtkObjectClass
};

extern struct GtkWidgetPrivate{

};

extern struct GtkWindowClass{
byte parent_class[408],  // GtkWidgetClass
ptr activate_focus,  // ::activate_focus
ptr activate_default,  // ::activate_default
ptr keys_changed,  // ::keys_changed
ptr enable_debugging,  // ::enable_debugging
ptr close_request,  // ::close_request
ptr padding_0,
ptr padding_1,
ptr padding_2,
ptr padding_3,
ptr padding_4,
ptr padding_5,
ptr padding_6,
ptr padding_7,
};

extern struct GtkWindowControlsClass{
byte parent_class[408],  // GtkWidgetClass
};

extern struct GtkWindowGroupClass{
byte parent_class[136],  // GtkObjectClass
ptr _gtk_reserved1,  // void*
ptr _gtk_reserved2,  // void*
ptr _gtk_reserved3,  // void*
ptr _gtk_reserved4,  // void*
};

extern struct GtkWindowGroupPrivate{

};

extern struct GtkWindowHandleClass{
byte parent_class[408],  // GtkWidgetClass
};

var Gtk_AccessibleAutocomplete_none = 0;
var Gtk_AccessibleAutocomplete_inline = 1;
var Gtk_AccessibleAutocomplete_list = 2;
var Gtk_AccessibleAutocomplete_both = 3;

var Gtk_AccessibleInvalidState_false = 0;
var Gtk_AccessibleInvalidState_true = 1;
var Gtk_AccessibleInvalidState_grammar = 2;
var Gtk_AccessibleInvalidState_spelling = 3;

var Gtk_AccessibleProperty_autocomplete = 0;
var Gtk_AccessibleProperty_description = 1;
var Gtk_AccessibleProperty_has_popup = 2;
var Gtk_AccessibleProperty_key_shortcuts = 3;
var Gtk_AccessibleProperty_label = 4;
var Gtk_AccessibleProperty_level = 5;
var Gtk_AccessibleProperty_modal = 6;
var Gtk_AccessibleProperty_multi_line = 7;
var Gtk_AccessibleProperty_multi_selectable = 8;
var Gtk_AccessibleProperty_orientation = 9;
var Gtk_AccessibleProperty_placeholder = 10;
var Gtk_AccessibleProperty_read_only = 11;
var Gtk_AccessibleProperty_required = 12;
var Gtk_AccessibleProperty_role_description = 13;
var Gtk_AccessibleProperty_sort = 14;
var Gtk_AccessibleProperty_value_max = 15;
var Gtk_AccessibleProperty_value_min = 16;
var Gtk_AccessibleProperty_value_now = 17;
var Gtk_AccessibleProperty_value_text = 18;

var Gtk_AccessibleRelation_active_descendant = 0;
var Gtk_AccessibleRelation_col_count = 1;
var Gtk_AccessibleRelation_col_index = 2;
var Gtk_AccessibleRelation_col_index_text = 3;
var Gtk_AccessibleRelation_col_span = 4;
var Gtk_AccessibleRelation_controls = 5;
var Gtk_AccessibleRelation_described_by = 6;
var Gtk_AccessibleRelation_details = 7;
var Gtk_AccessibleRelation_error_message = 8;
var Gtk_AccessibleRelation_flow_to = 9;
var Gtk_AccessibleRelation_labelled_by = 10;
var Gtk_AccessibleRelation_owns = 11;
var Gtk_AccessibleRelation_pos_in_set = 12;
var Gtk_AccessibleRelation_row_count = 13;
var Gtk_AccessibleRelation_row_index = 14;
var Gtk_AccessibleRelation_row_index_text = 15;
var Gtk_AccessibleRelation_row_span = 16;
var Gtk_AccessibleRelation_set_size = 17;

var Gtk_AccessibleRole_alert = 0;
var Gtk_AccessibleRole_alert_dialog = 1;
var Gtk_AccessibleRole_banner = 2;
var Gtk_AccessibleRole_button = 3;
var Gtk_AccessibleRole_caption = 4;
var Gtk_AccessibleRole_cell = 5;
var Gtk_AccessibleRole_checkbox = 6;
var Gtk_AccessibleRole_column_header = 7;
var Gtk_AccessibleRole_combo_box = 8;
var Gtk_AccessibleRole_command = 9;
var Gtk_AccessibleRole_composite = 10;
var Gtk_AccessibleRole_dialog = 11;
var Gtk_AccessibleRole_document = 12;
var Gtk_AccessibleRole_feed = 13;
var Gtk_AccessibleRole_form = 14;
var Gtk_AccessibleRole_generic = 15;
var Gtk_AccessibleRole_grid = 16;
var Gtk_AccessibleRole_grid_cell = 17;
var Gtk_AccessibleRole_group = 18;
var Gtk_AccessibleRole_heading = 19;
var Gtk_AccessibleRole_img = 20;
var Gtk_AccessibleRole_input = 21;
var Gtk_AccessibleRole_label = 22;
var Gtk_AccessibleRole_landmark = 23;
var Gtk_AccessibleRole_legend = 24;
var Gtk_AccessibleRole_link = 25;
var Gtk_AccessibleRole_list = 26;
var Gtk_AccessibleRole_list_box = 27;
var Gtk_AccessibleRole_list_item = 28;
var Gtk_AccessibleRole_log = 29;
var Gtk_AccessibleRole_main = 30;
var Gtk_AccessibleRole_marquee = 31;
var Gtk_AccessibleRole_math = 32;
var Gtk_AccessibleRole_meter = 33;
var Gtk_AccessibleRole_menu = 34;
var Gtk_AccessibleRole_menu_bar = 35;
var Gtk_AccessibleRole_menu_item = 36;
var Gtk_AccessibleRole_menu_item_checkbox = 37;
var Gtk_AccessibleRole_menu_item_radio = 38;
var Gtk_AccessibleRole_navigation = 39;
var Gtk_AccessibleRole_none = 40;
var Gtk_AccessibleRole_note = 41;
var Gtk_AccessibleRole_option = 42;
var Gtk_AccessibleRole_presentation = 43;
var Gtk_AccessibleRole_progress_bar = 44;
var Gtk_AccessibleRole_radio = 45;
var Gtk_AccessibleRole_radio_group = 46;
var Gtk_AccessibleRole_range = 47;
var Gtk_AccessibleRole_region = 48;
var Gtk_AccessibleRole_row = 49;
var Gtk_AccessibleRole_row_group = 50;
var Gtk_AccessibleRole_row_header = 51;
var Gtk_AccessibleRole_scrollbar = 52;
var Gtk_AccessibleRole_search = 53;
var Gtk_AccessibleRole_search_box = 54;
var Gtk_AccessibleRole_section = 55;
var Gtk_AccessibleRole_section_head = 56;
var Gtk_AccessibleRole_select = 57;
var Gtk_AccessibleRole_separator = 58;
var Gtk_AccessibleRole_slider = 59;
var Gtk_AccessibleRole_spin_button = 60;
var Gtk_AccessibleRole_status = 61;
var Gtk_AccessibleRole_structure = 62;
var Gtk_AccessibleRole_switch = 63;
var Gtk_AccessibleRole_tab = 64;
var Gtk_AccessibleRole_table = 65;
var Gtk_AccessibleRole_tab_list = 66;
var Gtk_AccessibleRole_tab_panel = 67;
var Gtk_AccessibleRole_text_box = 68;
var Gtk_AccessibleRole_time = 69;
var Gtk_AccessibleRole_timer = 70;
var Gtk_AccessibleRole_toolbar = 71;
var Gtk_AccessibleRole_tooltip = 72;
var Gtk_AccessibleRole_tree = 73;
var Gtk_AccessibleRole_tree_grid = 74;
var Gtk_AccessibleRole_tree_item = 75;
var Gtk_AccessibleRole_widget = 76;
var Gtk_AccessibleRole_window = 77;

var Gtk_AccessibleSort_none = 0;
var Gtk_AccessibleSort_ascending = 1;
var Gtk_AccessibleSort_descending = 2;
var Gtk_AccessibleSort_other = 3;

var Gtk_AccessibleState_busy = 0;
var Gtk_AccessibleState_checked = 1;
var Gtk_AccessibleState_disabled = 2;
var Gtk_AccessibleState_expanded = 3;
var Gtk_AccessibleState_hidden = 4;
var Gtk_AccessibleState_invalid = 5;
var Gtk_AccessibleState_pressed = 6;
var Gtk_AccessibleState_selected = 7;

var Gtk_AccessibleTristate_false = 0;
var Gtk_AccessibleTristate_true = 1;
var Gtk_AccessibleTristate_mixed = 2;

var Gtk_Align_fill = 0;
var Gtk_Align_start = 1;
var Gtk_Align_end = 2;
var Gtk_Align_center = 3;
var Gtk_Align_baseline = 4;

var Gtk_ApplicationInhibitFlags_logout = 1;
var Gtk_ApplicationInhibitFlags_switch = 2;
var Gtk_ApplicationInhibitFlags_suspend = 4;
var Gtk_ApplicationInhibitFlags_idle = 8;

var Gtk_ArrowType_up = 0;
var Gtk_ArrowType_down = 1;
var Gtk_ArrowType_left = 2;
var Gtk_ArrowType_right = 3;
var Gtk_ArrowType_none = 4;

var Gtk_AssistantPageType_content = 0;
var Gtk_AssistantPageType_intro = 1;
var Gtk_AssistantPageType_confirm = 2;
var Gtk_AssistantPageType_summary = 3;
var Gtk_AssistantPageType_progress = 4;
var Gtk_AssistantPageType_custom = 5;

var Gtk_BaselinePosition_top = 0;
var Gtk_BaselinePosition_center = 1;
var Gtk_BaselinePosition_bottom = 2;

var Gtk_BorderStyle_none = 0;
var Gtk_BorderStyle_hidden = 1;
var Gtk_BorderStyle_solid = 2;
var Gtk_BorderStyle_inset = 3;
var Gtk_BorderStyle_outset = 4;
var Gtk_BorderStyle_dotted = 5;
var Gtk_BorderStyle_dashed = 6;
var Gtk_BorderStyle_double = 7;
var Gtk_BorderStyle_groove = 8;
var Gtk_BorderStyle_ridge = 9;

var Gtk_BuilderClosureFlags_swapped = 1;

var Gtk_BuilderError_invalid_type_function = 0;
var Gtk_BuilderError_unhandled_tag = 1;
var Gtk_BuilderError_missing_attribute = 2;
var Gtk_BuilderError_invalid_attribute = 3;
var Gtk_BuilderError_invalid_tag = 4;
var Gtk_BuilderError_missing_property_value = 5;
var Gtk_BuilderError_invalid_value = 6;
var Gtk_BuilderError_version_mismatch = 7;
var Gtk_BuilderError_duplicate_id = 8;
var Gtk_BuilderError_object_type_refused = 9;
var Gtk_BuilderError_template_mismatch = 10;
var Gtk_BuilderError_invalid_property = 11;
var Gtk_BuilderError_invalid_signal = 12;
var Gtk_BuilderError_invalid_id = 13;
var Gtk_BuilderError_invalid_function = 14;

var Gtk_ButtonsType_none = 0;
var Gtk_ButtonsType_ok = 1;
var Gtk_ButtonsType_close = 2;
var Gtk_ButtonsType_cancel = 3;
var Gtk_ButtonsType_yes_no = 4;
var Gtk_ButtonsType_ok_cancel = 5;

var Gtk_CellRendererAccelMode_gtk = 0;
var Gtk_CellRendererAccelMode_other = 1;

var Gtk_CellRendererMode_inert = 0;
var Gtk_CellRendererMode_activatable = 1;
var Gtk_CellRendererMode_editable = 2;

var Gtk_CellRendererState_selected = 1;
var Gtk_CellRendererState_prelit = 2;
var Gtk_CellRendererState_insensitive = 4;
var Gtk_CellRendererState_sorted = 8;
var Gtk_CellRendererState_focused = 16;
var Gtk_CellRendererState_expandable = 32;
var Gtk_CellRendererState_expanded = 64;

var Gtk_ConstraintAttribute_none = 0;
var Gtk_ConstraintAttribute_left = 1;
var Gtk_ConstraintAttribute_right = 2;
var Gtk_ConstraintAttribute_top = 3;
var Gtk_ConstraintAttribute_bottom = 4;
var Gtk_ConstraintAttribute_start = 5;
var Gtk_ConstraintAttribute_end = 6;
var Gtk_ConstraintAttribute_width = 7;
var Gtk_ConstraintAttribute_height = 8;
var Gtk_ConstraintAttribute_center_x = 9;
var Gtk_ConstraintAttribute_center_y = 10;
var Gtk_ConstraintAttribute_baseline = 11;

var Gtk_ConstraintRelation_le = -1;
var Gtk_ConstraintRelation_eq = 0;
var Gtk_ConstraintRelation_ge = 1;

var Gtk_ConstraintStrength_required = 1001001000;
var Gtk_ConstraintStrength_strong = 1000000000;
var Gtk_ConstraintStrength_medium = 1000;
var Gtk_ConstraintStrength_weak = 1;

var Gtk_ConstraintVflParserError_symbol = 0;
var Gtk_ConstraintVflParserError_attribute = 1;
var Gtk_ConstraintVflParserError_view = 2;
var Gtk_ConstraintVflParserError_metric = 3;
var Gtk_ConstraintVflParserError_priority = 4;
var Gtk_ConstraintVflParserError_relation = 5;

var Gtk_CornerType_top_left = 0;
var Gtk_CornerType_bottom_left = 1;
var Gtk_CornerType_top_right = 2;
var Gtk_CornerType_bottom_right = 3;

var Gtk_CssParserError_failed = 0;
var Gtk_CssParserError_syntax = 1;
var Gtk_CssParserError_import = 2;
var Gtk_CssParserError_name = 3;
var Gtk_CssParserError_unknown_value = 4;

var Gtk_CssParserWarning_deprecated = 0;
var Gtk_CssParserWarning_syntax = 1;
var Gtk_CssParserWarning_unimplemented = 2;

var Gtk_DebugFlags_text = 1;
var Gtk_DebugFlags_tree = 2;
var Gtk_DebugFlags_keybindings = 4;
var Gtk_DebugFlags_modules = 8;
var Gtk_DebugFlags_geometry = 16;
var Gtk_DebugFlags_icontheme = 32;
var Gtk_DebugFlags_printing = 64;
var Gtk_DebugFlags_builder = 128;
var Gtk_DebugFlags_size_request = 256;
var Gtk_DebugFlags_no_css_cache = 512;
var Gtk_DebugFlags_interactive = 1024;
var Gtk_DebugFlags_touchscreen = 2048;
var Gtk_DebugFlags_actions = 4096;
var Gtk_DebugFlags_layout = 8192;
var Gtk_DebugFlags_snapshot = 16384;
var Gtk_DebugFlags_constraints = 32768;
var Gtk_DebugFlags_builder_objects = 65536;
var Gtk_DebugFlags_a11y = 131072;
var Gtk_DebugFlags_iconfallback = 262144;

var Gtk_DeleteType_chars = 0;
var Gtk_DeleteType_word_ends = 1;
var Gtk_DeleteType_words = 2;
var Gtk_DeleteType_display_lines = 3;
var Gtk_DeleteType_display_line_ends = 4;
var Gtk_DeleteType_paragraph_ends = 5;
var Gtk_DeleteType_paragraphs = 6;
var Gtk_DeleteType_whitespace = 7;

var Gtk_DialogFlags_modal = 1;
var Gtk_DialogFlags_destroy_with_parent = 2;
var Gtk_DialogFlags_use_header_bar = 4;

var Gtk_DirectionType_tab_forward = 0;
var Gtk_DirectionType_tab_backward = 1;
var Gtk_DirectionType_up = 2;
var Gtk_DirectionType_down = 3;
var Gtk_DirectionType_left = 4;
var Gtk_DirectionType_right = 5;

var Gtk_EditableProperties_prop_text = 0;
var Gtk_EditableProperties_prop_cursor_position = 1;
var Gtk_EditableProperties_prop_selection_bound = 2;
var Gtk_EditableProperties_prop_editable = 3;
var Gtk_EditableProperties_prop_width_chars = 4;
var Gtk_EditableProperties_prop_max_width_chars = 5;
var Gtk_EditableProperties_prop_xalign = 6;
var Gtk_EditableProperties_prop_enable_undo = 7;
var Gtk_EditableProperties_num_properties = 8;

var Gtk_EntryIconPosition_primary = 0;
var Gtk_EntryIconPosition_secondary = 1;

var Gtk_EventControllerScrollFlags_none = 0;
var Gtk_EventControllerScrollFlags_vertical = 1;
var Gtk_EventControllerScrollFlags_horizontal = 2;
var Gtk_EventControllerScrollFlags_discrete = 4;
var Gtk_EventControllerScrollFlags_kinetic = 8;
var Gtk_EventControllerScrollFlags_both_axes = 3;

var Gtk_EventSequenceState_none = 0;
var Gtk_EventSequenceState_claimed = 1;
var Gtk_EventSequenceState_denied = 2;

var Gtk_FileChooserAction_open = 0;
var Gtk_FileChooserAction_save = 1;
var Gtk_FileChooserAction_select_folder = 2;

var Gtk_FileChooserError_nonexistent = 0;
var Gtk_FileChooserError_bad_filename = 1;
var Gtk_FileChooserError_already_exists = 2;
var Gtk_FileChooserError_incomplete_hostname = 3;

var Gtk_FilterChange_different = 0;
var Gtk_FilterChange_less_strict = 1;
var Gtk_FilterChange_more_strict = 2;

var Gtk_FilterMatch_some = 0;
var Gtk_FilterMatch_none = 1;
var Gtk_FilterMatch_all = 2;

var Gtk_FontChooserLevel_family = 0;
var Gtk_FontChooserLevel_style = 1;
var Gtk_FontChooserLevel_size = 2;
var Gtk_FontChooserLevel_variations = 4;
var Gtk_FontChooserLevel_features = 8;

var Gtk_IconLookupFlags_force_regular = 1;
var Gtk_IconLookupFlags_force_symbolic = 2;
var Gtk_IconLookupFlags_preload = 4;

var Gtk_IconSize_inherit = 0;
var Gtk_IconSize_normal = 1;
var Gtk_IconSize_large = 2;

var Gtk_IconThemeError_not_found = 0;
var Gtk_IconThemeError_failed = 1;

var Gtk_IconViewDropPosition_no_drop = 0;
var Gtk_IconViewDropPosition_drop_into = 1;
var Gtk_IconViewDropPosition_drop_left = 2;
var Gtk_IconViewDropPosition_drop_right = 3;
var Gtk_IconViewDropPosition_drop_above = 4;
var Gtk_IconViewDropPosition_drop_below = 5;

var Gtk_ImageType_empty = 0;
var Gtk_ImageType_icon_name = 1;
var Gtk_ImageType_gicon = 2;
var Gtk_ImageType_paintable = 3;

var Gtk_InputHints_none = 0;
var Gtk_InputHints_spellcheck = 1;
var Gtk_InputHints_no_spellcheck = 2;
var Gtk_InputHints_word_completion = 4;
var Gtk_InputHints_lowercase = 8;
var Gtk_InputHints_uppercase_chars = 16;
var Gtk_InputHints_uppercase_words = 32;
var Gtk_InputHints_uppercase_sentences = 64;
var Gtk_InputHints_inhibit_osk = 128;
var Gtk_InputHints_vertical_writing = 256;
var Gtk_InputHints_emoji = 512;
var Gtk_InputHints_no_emoji = 1024;
var Gtk_InputHints_private = 2048;

var Gtk_InputPurpose_free_form = 0;
var Gtk_InputPurpose_alpha = 1;
var Gtk_InputPurpose_digits = 2;
var Gtk_InputPurpose_number = 3;
var Gtk_InputPurpose_phone = 4;
var Gtk_InputPurpose_url = 5;
var Gtk_InputPurpose_email = 6;
var Gtk_InputPurpose_name = 7;
var Gtk_InputPurpose_password = 8;
var Gtk_InputPurpose_pin = 9;
var Gtk_InputPurpose_terminal = 10;

var Gtk_Justification_left = 0;
var Gtk_Justification_right = 1;
var Gtk_Justification_center = 2;
var Gtk_Justification_fill = 3;

var Gtk_LevelBarMode_continuous = 0;
var Gtk_LevelBarMode_discrete = 1;

var Gtk_License_unknown = 0;
var Gtk_License_custom = 1;
var Gtk_License_gpl_2_0 = 2;
var Gtk_License_gpl_3_0 = 3;
var Gtk_License_lgpl_2_1 = 4;
var Gtk_License_lgpl_3_0 = 5;
var Gtk_License_bsd = 6;
var Gtk_License_mit_x11 = 7;
var Gtk_License_artistic = 8;
var Gtk_License_gpl_2_0_only = 9;
var Gtk_License_gpl_3_0_only = 10;
var Gtk_License_lgpl_2_1_only = 11;
var Gtk_License_lgpl_3_0_only = 12;
var Gtk_License_agpl_3_0 = 13;
var Gtk_License_agpl_3_0_only = 14;
var Gtk_License_bsd_3 = 15;
var Gtk_License_apache_2_0 = 16;
var Gtk_License_mpl_2_0 = 17;

var Gtk_MessageType_info = 0;
var Gtk_MessageType_warning = 1;
var Gtk_MessageType_question = 2;
var Gtk_MessageType_error = 3;
var Gtk_MessageType_other = 4;

var Gtk_MovementStep_logical_positions = 0;
var Gtk_MovementStep_visual_positions = 1;
var Gtk_MovementStep_words = 2;
var Gtk_MovementStep_display_lines = 3;
var Gtk_MovementStep_display_line_ends = 4;
var Gtk_MovementStep_paragraphs = 5;
var Gtk_MovementStep_paragraph_ends = 6;
var Gtk_MovementStep_pages = 7;
var Gtk_MovementStep_buffer_ends = 8;
var Gtk_MovementStep_horizontal_pages = 9;

var Gtk_NaturalWrapMode_inherit = 0;
var Gtk_NaturalWrapMode_none = 1;
var Gtk_NaturalWrapMode_word = 2;

var Gtk_NotebookTab_first = 0;
var Gtk_NotebookTab_last = 1;

var Gtk_NumberUpLayout_lrtb = 0;
var Gtk_NumberUpLayout_lrbt = 1;
var Gtk_NumberUpLayout_rltb = 2;
var Gtk_NumberUpLayout_rlbt = 3;
var Gtk_NumberUpLayout_tblr = 4;
var Gtk_NumberUpLayout_tbrl = 5;
var Gtk_NumberUpLayout_btlr = 6;
var Gtk_NumberUpLayout_btrl = 7;

var Gtk_Ordering_smaller = -1;
var Gtk_Ordering_equal = 0;
var Gtk_Ordering_larger = 1;

var Gtk_Orientation_horizontal = 0;
var Gtk_Orientation_vertical = 1;

var Gtk_Overflow_visible = 0;
var Gtk_Overflow_hidden = 1;

var Gtk_PackType_start = 0;
var Gtk_PackType_end = 1;

var Gtk_PadActionType_button = 0;
var Gtk_PadActionType_ring = 1;
var Gtk_PadActionType_strip = 2;

var Gtk_PageOrientation_portrait = 0;
var Gtk_PageOrientation_landscape = 1;
var Gtk_PageOrientation_reverse_portrait = 2;
var Gtk_PageOrientation_reverse_landscape = 3;

var Gtk_PageSet_all = 0;
var Gtk_PageSet_even = 1;
var Gtk_PageSet_odd = 2;

var Gtk_PanDirection_left = 0;
var Gtk_PanDirection_right = 1;
var Gtk_PanDirection_up = 2;
var Gtk_PanDirection_down = 3;

var Gtk_PickFlags_default = 0;
var Gtk_PickFlags_insensitive = 1;
var Gtk_PickFlags_non_targetable = 2;

var Gtk_PolicyType_always = 0;
var Gtk_PolicyType_automatic = 1;
var Gtk_PolicyType_never = 2;
var Gtk_PolicyType_external = 3;

var Gtk_PopoverMenuFlags_nested = 1;

var Gtk_PositionType_left = 0;
var Gtk_PositionType_right = 1;
var Gtk_PositionType_top = 2;
var Gtk_PositionType_bottom = 3;

var Gtk_PrintCapabilities_page_set = 1;
var Gtk_PrintCapabilities_copies = 2;
var Gtk_PrintCapabilities_collate = 4;
var Gtk_PrintCapabilities_reverse = 8;
var Gtk_PrintCapabilities_scale = 16;
var Gtk_PrintCapabilities_generate_pdf = 32;
var Gtk_PrintCapabilities_generate_ps = 64;
var Gtk_PrintCapabilities_preview = 128;
var Gtk_PrintCapabilities_number_up = 256;
var Gtk_PrintCapabilities_number_up_layout = 512;

var Gtk_PrintDuplex_simplex = 0;
var Gtk_PrintDuplex_horizontal = 1;
var Gtk_PrintDuplex_vertical = 2;

var Gtk_PrintError_general = 0;
var Gtk_PrintError_internal_error = 1;
var Gtk_PrintError_nomem = 2;
var Gtk_PrintError_invalid_file = 3;

var Gtk_PrintOperationAction_print_dialog = 0;
var Gtk_PrintOperationAction_print = 1;
var Gtk_PrintOperationAction_preview = 2;
var Gtk_PrintOperationAction_export = 3;

var Gtk_PrintOperationResult_error = 0;
var Gtk_PrintOperationResult_apply = 1;
var Gtk_PrintOperationResult_cancel = 2;
var Gtk_PrintOperationResult_in_progress = 3;

var Gtk_PrintPages_all = 0;
var Gtk_PrintPages_current = 1;
var Gtk_PrintPages_ranges = 2;
var Gtk_PrintPages_selection = 3;

var Gtk_PrintQuality_low = 0;
var Gtk_PrintQuality_normal = 1;
var Gtk_PrintQuality_high = 2;
var Gtk_PrintQuality_draft = 3;

var Gtk_PrintStatus_initial = 0;
var Gtk_PrintStatus_preparing = 1;
var Gtk_PrintStatus_generating_data = 2;
var Gtk_PrintStatus_sending_data = 3;
var Gtk_PrintStatus_pending = 4;
var Gtk_PrintStatus_pending_issue = 5;
var Gtk_PrintStatus_printing = 6;
var Gtk_PrintStatus_finished = 7;
var Gtk_PrintStatus_finished_aborted = 8;

var Gtk_PropagationLimit_none = 0;
var Gtk_PropagationLimit_same_native = 1;

var Gtk_PropagationPhase_none = 0;
var Gtk_PropagationPhase_capture = 1;
var Gtk_PropagationPhase_bubble = 2;
var Gtk_PropagationPhase_target = 3;

var Gtk_RecentManagerError_not_found = 0;
var Gtk_RecentManagerError_invalid_uri = 1;
var Gtk_RecentManagerError_invalid_encoding = 2;
var Gtk_RecentManagerError_not_registered = 3;
var Gtk_RecentManagerError_read = 4;
var Gtk_RecentManagerError_write = 5;
var Gtk_RecentManagerError_unknown = 6;

var Gtk_ResponseType_none = -1;
var Gtk_ResponseType_reject = -2;
var Gtk_ResponseType_accept = -3;
var Gtk_ResponseType_delete_event = -4;
var Gtk_ResponseType_ok = -5;
var Gtk_ResponseType_cancel = -6;
var Gtk_ResponseType_close = -7;
var Gtk_ResponseType_yes = -8;
var Gtk_ResponseType_no = -9;
var Gtk_ResponseType_apply = -10;
var Gtk_ResponseType_help = -11;

var Gtk_RevealerTransitionType_none = 0;
var Gtk_RevealerTransitionType_crossfade = 1;
var Gtk_RevealerTransitionType_slide_right = 2;
var Gtk_RevealerTransitionType_slide_left = 3;
var Gtk_RevealerTransitionType_slide_up = 4;
var Gtk_RevealerTransitionType_slide_down = 5;
var Gtk_RevealerTransitionType_swing_right = 6;
var Gtk_RevealerTransitionType_swing_left = 7;
var Gtk_RevealerTransitionType_swing_up = 8;
var Gtk_RevealerTransitionType_swing_down = 9;

var Gtk_ScrollStep_steps = 0;
var Gtk_ScrollStep_pages = 1;
var Gtk_ScrollStep_ends = 2;
var Gtk_ScrollStep_horizontal_steps = 3;
var Gtk_ScrollStep_horizontal_pages = 4;
var Gtk_ScrollStep_horizontal_ends = 5;

var Gtk_ScrollType_none = 0;
var Gtk_ScrollType_jump = 1;
var Gtk_ScrollType_step_backward = 2;
var Gtk_ScrollType_step_forward = 3;
var Gtk_ScrollType_page_backward = 4;
var Gtk_ScrollType_page_forward = 5;
var Gtk_ScrollType_step_up = 6;
var Gtk_ScrollType_step_down = 7;
var Gtk_ScrollType_page_up = 8;
var Gtk_ScrollType_page_down = 9;
var Gtk_ScrollType_step_left = 10;
var Gtk_ScrollType_step_right = 11;
var Gtk_ScrollType_page_left = 12;
var Gtk_ScrollType_page_right = 13;
var Gtk_ScrollType_start = 14;
var Gtk_ScrollType_end = 15;

var Gtk_ScrollablePolicy_minimum = 0;
var Gtk_ScrollablePolicy_natural = 1;

var Gtk_SelectionMode_none = 0;
var Gtk_SelectionMode_single = 1;
var Gtk_SelectionMode_browse = 2;
var Gtk_SelectionMode_multiple = 3;

var Gtk_SensitivityType_auto = 0;
var Gtk_SensitivityType_on = 1;
var Gtk_SensitivityType_off = 2;

var Gtk_ShortcutActionFlags_exclusive = 1;

var Gtk_ShortcutScope_local = 0;
var Gtk_ShortcutScope_managed = 1;
var Gtk_ShortcutScope_global = 2;

var Gtk_ShortcutType_accelerator = 0;
var Gtk_ShortcutType_gesture_pinch = 1;
var Gtk_ShortcutType_gesture_stretch = 2;
var Gtk_ShortcutType_gesture_rotate_clockwise = 3;
var Gtk_ShortcutType_gesture_rotate_counterclockwise = 4;
var Gtk_ShortcutType_gesture_two_finger_swipe_left = 5;
var Gtk_ShortcutType_gesture_two_finger_swipe_right = 6;
var Gtk_ShortcutType_gesture = 7;
var Gtk_ShortcutType_gesture_swipe_left = 8;
var Gtk_ShortcutType_gesture_swipe_right = 9;

var Gtk_SizeGroupMode_none = 0;
var Gtk_SizeGroupMode_horizontal = 1;
var Gtk_SizeGroupMode_vertical = 2;
var Gtk_SizeGroupMode_both = 3;

var Gtk_SizeRequestMode_height_for_width = 0;
var Gtk_SizeRequestMode_width_for_height = 1;
var Gtk_SizeRequestMode_constant_size = 2;

var Gtk_SortType_ascending = 0;
var Gtk_SortType_descending = 1;

var Gtk_SorterChange_different = 0;
var Gtk_SorterChange_inverted = 1;
var Gtk_SorterChange_less_strict = 2;
var Gtk_SorterChange_more_strict = 3;

var Gtk_SorterOrder_partial = 0;
var Gtk_SorterOrder_none = 1;
var Gtk_SorterOrder_total = 2;

var Gtk_SpinButtonUpdatePolicy_always = 0;
var Gtk_SpinButtonUpdatePolicy_if_valid = 1;

var Gtk_SpinType_step_forward = 0;
var Gtk_SpinType_step_backward = 1;
var Gtk_SpinType_page_forward = 2;
var Gtk_SpinType_page_backward = 3;
var Gtk_SpinType_home = 4;
var Gtk_SpinType_end = 5;
var Gtk_SpinType_user_defined = 6;

var Gtk_StackTransitionType_none = 0;
var Gtk_StackTransitionType_crossfade = 1;
var Gtk_StackTransitionType_slide_right = 2;
var Gtk_StackTransitionType_slide_left = 3;
var Gtk_StackTransitionType_slide_up = 4;
var Gtk_StackTransitionType_slide_down = 5;
var Gtk_StackTransitionType_slide_left_right = 6;
var Gtk_StackTransitionType_slide_up_down = 7;
var Gtk_StackTransitionType_over_up = 8;
var Gtk_StackTransitionType_over_down = 9;
var Gtk_StackTransitionType_over_left = 10;
var Gtk_StackTransitionType_over_right = 11;
var Gtk_StackTransitionType_under_up = 12;
var Gtk_StackTransitionType_under_down = 13;
var Gtk_StackTransitionType_under_left = 14;
var Gtk_StackTransitionType_under_right = 15;
var Gtk_StackTransitionType_over_up_down = 16;
var Gtk_StackTransitionType_over_down_up = 17;
var Gtk_StackTransitionType_over_left_right = 18;
var Gtk_StackTransitionType_over_right_left = 19;
var Gtk_StackTransitionType_rotate_left = 20;
var Gtk_StackTransitionType_rotate_right = 21;
var Gtk_StackTransitionType_rotate_left_right = 22;

var Gtk_StateFlags_normal = 0;
var Gtk_StateFlags_active = 1;
var Gtk_StateFlags_prelight = 2;
var Gtk_StateFlags_selected = 4;
var Gtk_StateFlags_insensitive = 8;
var Gtk_StateFlags_inconsistent = 16;
var Gtk_StateFlags_focused = 32;
var Gtk_StateFlags_backdrop = 64;
var Gtk_StateFlags_dir_ltr = 128;
var Gtk_StateFlags_dir_rtl = 256;
var Gtk_StateFlags_link = 512;
var Gtk_StateFlags_visited = 1024;
var Gtk_StateFlags_checked = 2048;
var Gtk_StateFlags_drop_active = 4096;
var Gtk_StateFlags_focus_visible = 8192;
var Gtk_StateFlags_focus_within = 16384;

var Gtk_StringFilterMatchMode_exact = 0;
var Gtk_StringFilterMatchMode_substring = 1;
var Gtk_StringFilterMatchMode_prefix = 2;

var Gtk_StyleContextPrintFlags_none = 0;
var Gtk_StyleContextPrintFlags_recurse = 1;
var Gtk_StyleContextPrintFlags_show_style = 2;
var Gtk_StyleContextPrintFlags_show_change = 4;

var Gtk_SymbolicColor_foreground = 0;
var Gtk_SymbolicColor_error = 1;
var Gtk_SymbolicColor_warning = 2;
var Gtk_SymbolicColor_success = 3;

var Gtk_SystemSetting_dpi = 0;
var Gtk_SystemSetting_font_name = 1;
var Gtk_SystemSetting_font_config = 2;
var Gtk_SystemSetting_display = 3;
var Gtk_SystemSetting_icon_theme = 4;

var Gtk_TextDirection_none = 0;
var Gtk_TextDirection_ltr = 1;
var Gtk_TextDirection_rtl = 2;

var Gtk_TextExtendSelection_word = 0;
var Gtk_TextExtendSelection_line = 1;

var Gtk_TextSearchFlags_visible_only = 1;
var Gtk_TextSearchFlags_text_only = 2;
var Gtk_TextSearchFlags_case_insensitive = 4;

var Gtk_TextViewLayer_below_text = 0;
var Gtk_TextViewLayer_above_text = 1;

var Gtk_TextWindowType_widget = 1;
var Gtk_TextWindowType_text = 2;
var Gtk_TextWindowType_left = 3;
var Gtk_TextWindowType_right = 4;
var Gtk_TextWindowType_top = 5;
var Gtk_TextWindowType_bottom = 6;

var Gtk_TreeModelFlags_iters_persist = 1;
var Gtk_TreeModelFlags_list_only = 2;

var Gtk_TreeViewColumnSizing_grow_only = 0;
var Gtk_TreeViewColumnSizing_autosize = 1;
var Gtk_TreeViewColumnSizing_fixed = 2;

var Gtk_TreeViewDropPosition_before = 0;
var Gtk_TreeViewDropPosition_after = 1;
var Gtk_TreeViewDropPosition_into_or_before = 2;
var Gtk_TreeViewDropPosition_into_or_after = 3;

var Gtk_TreeViewGridLines_none = 0;
var Gtk_TreeViewGridLines_horizontal = 1;
var Gtk_TreeViewGridLines_vertical = 2;
var Gtk_TreeViewGridLines_both = 3;

var Gtk_Unit_none = 0;
var Gtk_Unit_points = 1;
var Gtk_Unit_inch = 2;
var Gtk_Unit_mm = 3;

var Gtk_WrapMode_none = 0;
var Gtk_WrapMode_char = 1;
var Gtk_WrapMode_word = 2;
var Gtk_WrapMode_word_char = 3;

var Gtk_ACCESSIBLE_VALUE_UNDEFINED_ACCESSIBLE_VALUE_UNDEFINED = -1;

var Gtk_BINARY_AGE_BINARY_AGE = 606;

var Gtk_IM_MODULE_EXTENSION_POINT_NAME_IM_MODULE_EXTENSION_POINT_NAME = "gtk-im-module";
var Gtk_INPUT_ERROR_INPUT_ERROR = -1;

var Gtk_INTERFACE_AGE_INTERFACE_AGE = 6;

var Gtk_LEVEL_BAR_OFFSET_FULL_LEVEL_BAR_OFFSET_FULL = "full";
var Gtk_LEVEL_BAR_OFFSET_HIGH_LEVEL_BAR_OFFSET_HIGH = "high";
var Gtk_LEVEL_BAR_OFFSET_LOW_LEVEL_BAR_OFFSET_LOW = "low";
var Gtk_MAJOR_VERSION_MAJOR_VERSION = 4;

var Gtk_MAX_COMPOSE_LEN_MAX_COMPOSE_LEN = 7;

var Gtk_MEDIA_FILE_EXTENSION_POINT_NAME_MEDIA_FILE_EXTENSION_POINT_NAME = "gtk-media-file";
var Gtk_MICRO_VERSION_MICRO_VERSION = 6;

var Gtk_MINOR_VERSION_MINOR_VERSION = 6;

var Gtk_PAPER_NAME_A3_PAPER_NAME_A3 = "iso_a3";
var Gtk_PAPER_NAME_A4_PAPER_NAME_A4 = "iso_a4";
var Gtk_PAPER_NAME_A5_PAPER_NAME_A5 = "iso_a5";
var Gtk_PAPER_NAME_B5_PAPER_NAME_B5 = "iso_b5";
var Gtk_PAPER_NAME_EXECUTIVE_PAPER_NAME_EXECUTIVE = "na_executive";
var Gtk_PAPER_NAME_LEGAL_PAPER_NAME_LEGAL = "na_legal";
var Gtk_PAPER_NAME_LETTER_PAPER_NAME_LETTER = "na_letter";
var Gtk_PRINT_SETTINGS_COLLATE_PRINT_SETTINGS_COLLATE = "collate";
var Gtk_PRINT_SETTINGS_DEFAULT_SOURCE_PRINT_SETTINGS_DEFAULT_SOURCE = "default-source";
var Gtk_PRINT_SETTINGS_DITHER_PRINT_SETTINGS_DITHER = "dither";
var Gtk_PRINT_SETTINGS_DUPLEX_PRINT_SETTINGS_DUPLEX = "duplex";
var Gtk_PRINT_SETTINGS_FINISHINGS_PRINT_SETTINGS_FINISHINGS = "finishings";
var Gtk_PRINT_SETTINGS_MEDIA_TYPE_PRINT_SETTINGS_MEDIA_TYPE = "media-type";
var Gtk_PRINT_SETTINGS_NUMBER_UP_PRINT_SETTINGS_NUMBER_UP = "number-up";
var Gtk_PRINT_SETTINGS_NUMBER_UP_LAYOUT_PRINT_SETTINGS_NUMBER_UP_LAYOUT = "number-up-layout";
var Gtk_PRINT_SETTINGS_N_COPIES_PRINT_SETTINGS_N_COPIES = "n-copies";
var Gtk_PRINT_SETTINGS_ORIENTATION_PRINT_SETTINGS_ORIENTATION = "orientation";
var Gtk_PRINT_SETTINGS_OUTPUT_BASENAME_PRINT_SETTINGS_OUTPUT_BASENAME = "output-basename";
var Gtk_PRINT_SETTINGS_OUTPUT_BIN_PRINT_SETTINGS_OUTPUT_BIN = "output-bin";
var Gtk_PRINT_SETTINGS_OUTPUT_DIR_PRINT_SETTINGS_OUTPUT_DIR = "output-dir";
var Gtk_PRINT_SETTINGS_OUTPUT_FILE_FORMAT_PRINT_SETTINGS_OUTPUT_FILE_FORMAT = "output-file-format";
var Gtk_PRINT_SETTINGS_OUTPUT_URI_PRINT_SETTINGS_OUTPUT_URI = "output-uri";
var Gtk_PRINT_SETTINGS_PAGE_RANGES_PRINT_SETTINGS_PAGE_RANGES = "page-ranges";
var Gtk_PRINT_SETTINGS_PAGE_SET_PRINT_SETTINGS_PAGE_SET = "page-set";
var Gtk_PRINT_SETTINGS_PAPER_FORMAT_PRINT_SETTINGS_PAPER_FORMAT = "paper-format";
var Gtk_PRINT_SETTINGS_PAPER_HEIGHT_PRINT_SETTINGS_PAPER_HEIGHT = "paper-height";
var Gtk_PRINT_SETTINGS_PAPER_WIDTH_PRINT_SETTINGS_PAPER_WIDTH = "paper-width";
var Gtk_PRINT_SETTINGS_PRINTER_PRINT_SETTINGS_PRINTER = "printer";
var Gtk_PRINT_SETTINGS_PRINTER_LPI_PRINT_SETTINGS_PRINTER_LPI = "printer-lpi";
var Gtk_PRINT_SETTINGS_PRINT_PAGES_PRINT_SETTINGS_PRINT_PAGES = "print-pages";
var Gtk_PRINT_SETTINGS_QUALITY_PRINT_SETTINGS_QUALITY = "quality";
var Gtk_PRINT_SETTINGS_RESOLUTION_PRINT_SETTINGS_RESOLUTION = "resolution";
var Gtk_PRINT_SETTINGS_RESOLUTION_X_PRINT_SETTINGS_RESOLUTION_X = "resolution-x";
var Gtk_PRINT_SETTINGS_RESOLUTION_Y_PRINT_SETTINGS_RESOLUTION_Y = "resolution-y";
var Gtk_PRINT_SETTINGS_REVERSE_PRINT_SETTINGS_REVERSE = "reverse";
var Gtk_PRINT_SETTINGS_SCALE_PRINT_SETTINGS_SCALE = "scale";
var Gtk_PRINT_SETTINGS_USE_COLOR_PRINT_SETTINGS_USE_COLOR = "use-color";
var Gtk_PRINT_SETTINGS_WIN32_DRIVER_EXTRA_PRINT_SETTINGS_WIN32_DRIVER_EXTRA = "win32-driver-extra";
var Gtk_PRINT_SETTINGS_WIN32_DRIVER_VERSION_PRINT_SETTINGS_WIN32_DRIVER_VERSION = "win32-driver-version";
var Gtk_PRIORITY_RESIZE_PRIORITY_RESIZE = 110;

var Gtk_STYLE_PROVIDER_PRIORITY_APPLICATION_STYLE_PROVIDER_PRIORITY_APPLICATION = 600;

var Gtk_STYLE_PROVIDER_PRIORITY_FALLBACK_STYLE_PROVIDER_PRIORITY_FALLBACK = 1;

var Gtk_STYLE_PROVIDER_PRIORITY_SETTINGS_STYLE_PROVIDER_PRIORITY_SETTINGS = 400;

var Gtk_STYLE_PROVIDER_PRIORITY_THEME_STYLE_PROVIDER_PRIORITY_THEME = 200;

var Gtk_STYLE_PROVIDER_PRIORITY_USER_STYLE_PROVIDER_PRIORITY_USER = 800;

var Gtk_TEXT_VIEW_PRIORITY_VALIDATE_TEXT_VIEW_PRIORITY_VALIDATE = 125;

var Gtk_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID = -1;

var Gtk_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID = -2;


extern callback void GtkATContext_signal_state_change(ptr, ptr);
extern callback int GtkAboutDialog_signal_activate_link(ptr, str, ptr);
extern callback void GtkAdjustment_signal_changed(ptr, ptr);
extern callback void GtkAdjustment_signal_value_changed(ptr, ptr);
extern callback void GtkAppChooserButton_signal_activate(ptr, ptr);
extern callback void GtkAppChooserButton_signal_changed(ptr, ptr);
extern callback void GtkAppChooserButton_signal_custom_item_activated(ptr, str, ptr);
extern callback void GtkAppChooserWidget_signal_application_activated(ptr, ptr, ptr);
extern callback void GtkAppChooserWidget_signal_application_selected(ptr, ptr, ptr);
extern callback void GtkApplication_signal_query_end(ptr, ptr);
extern callback void GtkApplication_signal_window_added(ptr, ptr, ptr);
extern callback void GtkApplication_signal_window_removed(ptr, ptr, ptr);
extern callback void GtkAssistant_signal_apply(ptr, ptr);
extern callback void GtkAssistant_signal_cancel(ptr, ptr);
extern callback void GtkAssistant_signal_close(ptr, ptr);
extern callback void GtkAssistant_signal_escape(ptr, ptr);
extern callback void GtkAssistant_signal_prepare(ptr, ptr, ptr);
extern callback void GtkButton_signal_activate(ptr, ptr);
extern callback void GtkButton_signal_clicked(ptr, ptr);
extern callback void GtkCalendar_signal_day_selected(ptr, ptr);
extern callback void GtkCalendar_signal_next_month(ptr, ptr);
extern callback void GtkCalendar_signal_next_year(ptr, ptr);
extern callback void GtkCalendar_signal_prev_month(ptr, ptr);
extern callback void GtkCalendar_signal_prev_year(ptr, ptr);
extern callback void GtkCellArea_signal_add_editable(ptr, ptr, ptr, ptr, str, ptr);
extern callback void GtkCellArea_signal_apply_attributes(ptr, ptr, ptr, int, int, ptr);
extern callback void GtkCellArea_signal_focus_changed(ptr, ptr, str, ptr);
extern callback void GtkCellArea_signal_remove_editable(ptr, ptr, ptr, ptr);
extern callback void GtkCellRenderer_signal_editing_canceled(ptr, ptr);
extern callback void GtkCellRenderer_signal_editing_started(ptr, ptr, str, ptr);
extern callback void GtkCellRendererAccel_signal_accel_cleared(ptr, str, ptr);
extern callback void GtkCellRendererAccel_signal_accel_edited(ptr, str, uint, int, uint, ptr);
extern callback void GtkCellRendererCombo_signal_changed(ptr, str, ptr, ptr);
extern callback void GtkCellRendererText_signal_edited(ptr, str, str, ptr);
extern callback void GtkCellRendererToggle_signal_toggled(ptr, str, ptr);
extern callback void GtkCheckButton_signal_activate(ptr, ptr);
extern callback void GtkCheckButton_signal_toggled(ptr, ptr);
extern callback void GtkColorButton_signal_activate(ptr, ptr);
extern callback void GtkColorButton_signal_color_set(ptr, ptr);
extern callback void GtkColumnView_signal_activate(ptr, uint, ptr);
extern callback void GtkComboBox_signal_activate(ptr, ptr);
extern callback void GtkComboBox_signal_changed(ptr, ptr);
extern callback ptr GtkComboBox_signal_format_entry_text(ptr, str, ptr);
extern callback void GtkComboBox_signal_move_active(ptr, int, ptr);
extern callback int GtkComboBox_signal_popdown(ptr, ptr);
extern callback void GtkComboBox_signal_popup(ptr, ptr);
extern callback void GtkCssProvider_signal_parsing_error(ptr, ptr, ptr, ptr);
extern callback void GtkDialog_signal_close(ptr, ptr);
extern callback void GtkDialog_signal_response(ptr, int, ptr);
extern callback void GtkDragSource_signal_drag_begin(ptr, ptr, ptr);
extern callback int GtkDragSource_signal_drag_cancel(ptr, ptr, int, ptr);
extern callback void GtkDragSource_signal_drag_end(ptr, ptr, int, ptr);
extern callback ptr GtkDragSource_signal_prepare(ptr, double, double, ptr);
extern callback void GtkDrawingArea_signal_resize(ptr, int, int, ptr);
extern callback void GtkDropControllerMotion_signal_enter(ptr, double, double, ptr);
extern callback void GtkDropControllerMotion_signal_leave(ptr, ptr);
extern callback void GtkDropControllerMotion_signal_motion(ptr, double, double, ptr);
extern callback void GtkDropDown_signal_activate(ptr, ptr);
extern callback int GtkDropTarget_signal_accept(ptr, ptr, ptr);
extern callback int GtkDropTarget_signal_drop(ptr, ptr, double, double, ptr);
extern callback int GtkDropTarget_signal_enter(ptr, double, double, ptr);
extern callback void GtkDropTarget_signal_leave(ptr, ptr);
extern callback int GtkDropTarget_signal_motion(ptr, double, double, ptr);
extern callback int GtkDropTargetAsync_signal_accept(ptr, ptr, ptr);
extern callback int GtkDropTargetAsync_signal_drag_enter(ptr, ptr, double, double, ptr);
extern callback void GtkDropTargetAsync_signal_drag_leave(ptr, ptr, ptr);
extern callback int GtkDropTargetAsync_signal_drag_motion(ptr, ptr, double, double, ptr);
extern callback int GtkDropTargetAsync_signal_drop(ptr, ptr, double, double, ptr);
extern callback void GtkEmojiChooser_signal_emoji_picked(ptr, str, ptr);
extern callback void GtkEntry_signal_activate(ptr, ptr);
extern callback void GtkEntry_signal_icon_press(ptr, int, ptr);
extern callback void GtkEntry_signal_icon_release(ptr, int, ptr);
extern callback void GtkEntryBuffer_signal_deleted_text(ptr, uint, uint, ptr);
extern callback void GtkEntryBuffer_signal_inserted_text(ptr, uint, str, uint, ptr);
extern callback int GtkEntryCompletion_signal_cursor_on_match(ptr, ptr, ptr, ptr);
extern callback int GtkEntryCompletion_signal_insert_prefix(ptr, str, ptr);
extern callback int GtkEntryCompletion_signal_match_selected(ptr, ptr, ptr, ptr);
extern callback void GtkEntryCompletion_signal_no_matches(ptr, ptr);
extern callback void GtkEventControllerFocus_signal_enter(ptr, ptr);
extern callback void GtkEventControllerFocus_signal_leave(ptr, ptr);
extern callback void GtkEventControllerKey_signal_im_update(ptr, ptr);
extern callback int GtkEventControllerKey_signal_key_pressed(ptr, uint, uint, int, ptr);
extern callback void GtkEventControllerKey_signal_key_released(ptr, uint, uint, int, ptr);
extern callback int GtkEventControllerKey_signal_modifiers(ptr, int, ptr);
extern callback int GtkEventControllerLegacy_signal_event(ptr, ptr, ptr);
extern callback void GtkEventControllerMotion_signal_enter(ptr, double, double, ptr);
extern callback void GtkEventControllerMotion_signal_leave(ptr, ptr);
extern callback void GtkEventControllerMotion_signal_motion(ptr, double, double, ptr);
extern callback void GtkEventControllerScroll_signal_decelerate(ptr, double, double, ptr);
extern callback int GtkEventControllerScroll_signal_scroll(ptr, double, double, ptr);
extern callback void GtkEventControllerScroll_signal_scroll_begin(ptr, ptr);
extern callback void GtkEventControllerScroll_signal_scroll_end(ptr, ptr);
extern callback void GtkExpander_signal_activate(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_desktop_folder(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_down_folder(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_home_folder(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_location_popup(ptr, str, ptr);
extern callback void GtkFileChooserWidget_signal_location_popup_on_paste(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_location_toggle_popup(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_places_shortcut(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_quick_bookmark(ptr, int, ptr);
extern callback void GtkFileChooserWidget_signal_recent_shortcut(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_search_shortcut(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_show_hidden(ptr, ptr);
extern callback void GtkFileChooserWidget_signal_up_folder(ptr, ptr);
extern callback void GtkFilter_signal_changed(ptr, int, ptr);
extern callback void GtkFlowBox_signal_activate_cursor_child(ptr, ptr);
extern callback void GtkFlowBox_signal_child_activated(ptr, ptr, ptr);
extern callback int GtkFlowBox_signal_move_cursor(ptr, int, int, int, int, ptr);
extern callback void GtkFlowBox_signal_select_all(ptr, ptr);
extern callback void GtkFlowBox_signal_selected_children_changed(ptr, ptr);
extern callback void GtkFlowBox_signal_toggle_cursor_child(ptr, ptr);
extern callback void GtkFlowBox_signal_unselect_all(ptr, ptr);
extern callback void GtkFlowBoxChild_signal_activate(ptr, ptr);
extern callback void GtkFontButton_signal_activate(ptr, ptr);
extern callback void GtkFontButton_signal_font_set(ptr, ptr);
extern callback ptr GtkGLArea_signal_create_context(ptr, ptr);
extern callback int GtkGLArea_signal_render(ptr, ptr, ptr);
extern callback void GtkGLArea_signal_resize(ptr, int, int, ptr);
extern callback void GtkGesture_signal_begin(ptr, ptr, ptr);
extern callback void GtkGesture_signal_cancel(ptr, ptr, ptr);
extern callback void GtkGesture_signal_end(ptr, ptr, ptr);
extern callback void GtkGesture_signal_sequence_state_changed(ptr, ptr, int, ptr);
extern callback void GtkGesture_signal_update(ptr, ptr, ptr);
extern callback void GtkGestureClick_signal_pressed(ptr, int, double, double, ptr);
extern callback void GtkGestureClick_signal_released(ptr, int, double, double, ptr);
extern callback void GtkGestureClick_signal_stopped(ptr, ptr);
extern callback void GtkGestureClick_signal_unpaired_release(ptr, double, double, uint, ptr, ptr);
extern callback void GtkGestureDrag_signal_drag_begin(ptr, double, double, ptr);
extern callback void GtkGestureDrag_signal_drag_end(ptr, double, double, ptr);
extern callback void GtkGestureDrag_signal_drag_update(ptr, double, double, ptr);
extern callback void GtkGestureLongPress_signal_cancelled(ptr, ptr);
extern callback void GtkGestureLongPress_signal_pressed(ptr, double, double, ptr);
extern callback void GtkGesturePan_signal_pan(ptr, int, double, ptr);
extern callback void GtkGestureRotate_signal_angle_changed(ptr, double, double, ptr);
extern callback void GtkGestureStylus_signal_down(ptr, double, double, ptr);
extern callback void GtkGestureStylus_signal_motion(ptr, double, double, ptr);
extern callback void GtkGestureStylus_signal_proximity(ptr, double, double, ptr);
extern callback void GtkGestureStylus_signal_up(ptr, double, double, ptr);
extern callback void GtkGestureSwipe_signal_swipe(ptr, double, double, ptr);
extern callback void GtkGestureZoom_signal_scale_changed(ptr, double, ptr);
extern callback void GtkGridView_signal_activate(ptr, uint, ptr);
extern callback void GtkIMContext_signal_commit(ptr, str, ptr);
extern callback int GtkIMContext_signal_delete_surrounding(ptr, int, int, ptr);
extern callback void GtkIMContext_signal_preedit_changed(ptr, ptr);
extern callback void GtkIMContext_signal_preedit_end(ptr, ptr);
extern callback void GtkIMContext_signal_preedit_start(ptr, ptr);
extern callback int GtkIMContext_signal_retrieve_surrounding(ptr, ptr);
extern callback void GtkIconTheme_signal_changed(ptr, ptr);
extern callback int GtkIconView_signal_activate_cursor_item(ptr, ptr);
extern callback void GtkIconView_signal_item_activated(ptr, ptr, ptr);
extern callback int GtkIconView_signal_move_cursor(ptr, int, int, int, int, ptr);
extern callback void GtkIconView_signal_select_all(ptr, ptr);
extern callback void GtkIconView_signal_select_cursor_item(ptr, ptr);
extern callback void GtkIconView_signal_selection_changed(ptr, ptr);
extern callback void GtkIconView_signal_toggle_cursor_item(ptr, ptr);
extern callback void GtkIconView_signal_unselect_all(ptr, ptr);
extern callback void GtkInfoBar_signal_close(ptr, ptr);
extern callback void GtkInfoBar_signal_response(ptr, int, ptr);
extern callback void GtkLabel_signal_activate_current_link(ptr, ptr);
extern callback int GtkLabel_signal_activate_link(ptr, str, ptr);
extern callback void GtkLabel_signal_copy_clipboard(ptr, ptr);
extern callback void GtkLabel_signal_move_cursor(ptr, int, int, int, ptr);
extern callback void GtkLevelBar_signal_offset_changed(ptr, str, ptr);
extern callback int GtkLinkButton_signal_activate_link(ptr, ptr);
extern callback void GtkListBox_signal_activate_cursor_row(ptr, ptr);
extern callback void GtkListBox_signal_move_cursor(ptr, int, int, int, int, ptr);
extern callback void GtkListBox_signal_row_activated(ptr, ptr, ptr);
extern callback void GtkListBox_signal_row_selected(ptr, ptr, ptr);
extern callback void GtkListBox_signal_select_all(ptr, ptr);
extern callback void GtkListBox_signal_selected_rows_changed(ptr, ptr);
extern callback void GtkListBox_signal_toggle_cursor_row(ptr, ptr);
extern callback void GtkListBox_signal_unselect_all(ptr, ptr);
extern callback void GtkListBoxRow_signal_activate(ptr, ptr);
extern callback void GtkListView_signal_activate(ptr, uint, ptr);
extern callback void GtkMenuButton_signal_activate(ptr, ptr);
extern callback void GtkNativeDialog_signal_response(ptr, int, ptr);
extern callback int GtkNotebook_signal_change_current_page(ptr, int, ptr);
extern callback ptr GtkNotebook_signal_create_window(ptr, ptr, ptr);
extern callback int GtkNotebook_signal_focus_tab(ptr, int, ptr);
extern callback void GtkNotebook_signal_move_focus_out(ptr, int, ptr);
extern callback void GtkNotebook_signal_page_added(ptr, ptr, uint, ptr);
extern callback void GtkNotebook_signal_page_removed(ptr, ptr, uint, ptr);
extern callback void GtkNotebook_signal_page_reordered(ptr, ptr, uint, ptr);
extern callback int GtkNotebook_signal_reorder_tab(ptr, int, int, ptr);
extern callback int GtkNotebook_signal_select_page(ptr, int, ptr);
extern callback void GtkNotebook_signal_switch_page(ptr, ptr, uint, ptr);
extern callback int GtkOverlay_signal_get_child_position(ptr, ptr, ptr, ptr);
extern callback int GtkPaned_signal_accept_position(ptr, ptr);
extern callback int GtkPaned_signal_cancel_position(ptr, ptr);
extern callback int GtkPaned_signal_cycle_child_focus(ptr, int, ptr);
extern callback int GtkPaned_signal_cycle_handle_focus(ptr, int, ptr);
extern callback int GtkPaned_signal_move_handle(ptr, int, ptr);
extern callback int GtkPaned_signal_toggle_handle_focus(ptr, ptr);
extern callback void GtkPasswordEntry_signal_activate(ptr, ptr);
extern callback void GtkPopover_signal_activate_default(ptr, ptr);
extern callback void GtkPopover_signal_closed(ptr, ptr);
extern callback void GtkPrintJob_signal_status_changed(ptr, ptr);
extern callback void GtkPrintOperation_signal_begin_print(ptr, ptr, ptr);
extern callback ptr GtkPrintOperation_signal_create_custom_widget(ptr, ptr);
extern callback void GtkPrintOperation_signal_custom_widget_apply(ptr, ptr, ptr);
extern callback void GtkPrintOperation_signal_done(ptr, int, ptr);
extern callback void GtkPrintOperation_signal_draw_page(ptr, ptr, int, ptr);
extern callback void GtkPrintOperation_signal_end_print(ptr, ptr, ptr);
extern callback int GtkPrintOperation_signal_paginate(ptr, ptr, ptr);
extern callback int GtkPrintOperation_signal_preview(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkPrintOperation_signal_request_page_setup(ptr, ptr, int, ptr, ptr);
extern callback void GtkPrintOperation_signal_status_changed(ptr, ptr);
extern callback void GtkPrintOperation_signal_update_custom_widget(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkPrinter_signal_details_acquired(ptr, int, ptr);
extern callback void GtkRange_signal_adjust_bounds(ptr, double, ptr);
extern callback int GtkRange_signal_change_value(ptr, int, double, ptr);
extern callback void GtkRange_signal_move_slider(ptr, int, ptr);
extern callback void GtkRange_signal_value_changed(ptr, ptr);
extern callback void GtkRecentManager_signal_changed(ptr, ptr);
extern callback void GtkScaleButton_signal_popdown(ptr, ptr);
extern callback void GtkScaleButton_signal_popup(ptr, ptr);
extern callback void GtkScaleButton_signal_value_changed(ptr, double, ptr);
extern callback void GtkScrolledWindow_signal_edge_overshot(ptr, int, ptr);
extern callback void GtkScrolledWindow_signal_edge_reached(ptr, int, ptr);
extern callback void GtkScrolledWindow_signal_move_focus_out(ptr, int, ptr);
extern callback int GtkScrolledWindow_signal_scroll_child(ptr, int, int, ptr);
extern callback void GtkSearchEntry_signal_activate(ptr, ptr);
extern callback void GtkSearchEntry_signal_next_match(ptr, ptr);
extern callback void GtkSearchEntry_signal_previous_match(ptr, ptr);
extern callback void GtkSearchEntry_signal_search_changed(ptr, ptr);
extern callback void GtkSearchEntry_signal_search_started(ptr, ptr);
extern callback void GtkSearchEntry_signal_stop_search(ptr, ptr);
extern callback int GtkShortcutsSection_signal_change_current_page(ptr, int, ptr);
extern callback void GtkShortcutsWindow_signal_close(ptr, ptr);
extern callback void GtkShortcutsWindow_signal_search(ptr, ptr);
extern callback void GtkSignalListItemFactory_signal_bind(ptr, ptr, ptr);
extern callback void GtkSignalListItemFactory_signal_setup(ptr, ptr, ptr);
extern callback void GtkSignalListItemFactory_signal_teardown(ptr, ptr, ptr);
extern callback void GtkSignalListItemFactory_signal_unbind(ptr, ptr, ptr);
extern callback void GtkSorter_signal_changed(ptr, int, ptr);
extern callback void GtkSpinButton_signal_change_value(ptr, int, ptr);
extern callback int GtkSpinButton_signal_input(ptr, ptr, ptr);
extern callback int GtkSpinButton_signal_output(ptr, ptr);
extern callback void GtkSpinButton_signal_value_changed(ptr, ptr);
extern callback void GtkSpinButton_signal_wrapped(ptr, ptr);
extern callback void GtkStatusbar_signal_text_popped(ptr, uint, str, ptr);
extern callback void GtkStatusbar_signal_text_pushed(ptr, uint, str, ptr);
extern callback void GtkSwitch_signal_activate(ptr, ptr);
extern callback int GtkSwitch_signal_state_set(ptr, int, ptr);
extern callback void GtkText_signal_activate(ptr, ptr);
extern callback void GtkText_signal_backspace(ptr, ptr);
extern callback void GtkText_signal_copy_clipboard(ptr, ptr);
extern callback void GtkText_signal_cut_clipboard(ptr, ptr);
extern callback void GtkText_signal_delete_from_cursor(ptr, int, int, ptr);
extern callback void GtkText_signal_insert_at_cursor(ptr, str, ptr);
extern callback void GtkText_signal_insert_emoji(ptr, ptr);
extern callback void GtkText_signal_move_cursor(ptr, int, int, int, ptr);
extern callback void GtkText_signal_paste_clipboard(ptr, ptr);
extern callback void GtkText_signal_preedit_changed(ptr, str, ptr);
extern callback void GtkText_signal_toggle_overwrite(ptr, ptr);
extern callback void GtkTextBuffer_signal_apply_tag(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_begin_user_action(ptr, ptr);
extern callback void GtkTextBuffer_signal_changed(ptr, ptr);
extern callback void GtkTextBuffer_signal_delete_range(ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_end_user_action(ptr, ptr);
extern callback void GtkTextBuffer_signal_insert_child_anchor(ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_insert_paintable(ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_insert_text(ptr, ptr, str, int, ptr);
extern callback void GtkTextBuffer_signal_mark_deleted(ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_mark_set(ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_modified_changed(ptr, ptr);
extern callback void GtkTextBuffer_signal_paste_done(ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_redo(ptr, ptr);
extern callback void GtkTextBuffer_signal_remove_tag(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_signal_undo(ptr, ptr);
extern callback void GtkTextTagTable_signal_tag_added(ptr, ptr, ptr);
extern callback void GtkTextTagTable_signal_tag_changed(ptr, ptr, int, ptr);
extern callback void GtkTextTagTable_signal_tag_removed(ptr, ptr, ptr);
extern callback void GtkTextView_signal_backspace(ptr, ptr);
extern callback void GtkTextView_signal_copy_clipboard(ptr, ptr);
extern callback void GtkTextView_signal_cut_clipboard(ptr, ptr);
extern callback void GtkTextView_signal_delete_from_cursor(ptr, int, int, ptr);
extern callback int GtkTextView_signal_extend_selection(ptr, int, ptr, ptr, ptr, ptr);
extern callback void GtkTextView_signal_insert_at_cursor(ptr, str, ptr);
extern callback void GtkTextView_signal_insert_emoji(ptr, ptr);
extern callback void GtkTextView_signal_move_cursor(ptr, int, int, int, ptr);
extern callback void GtkTextView_signal_move_viewport(ptr, int, int, ptr);
extern callback void GtkTextView_signal_paste_clipboard(ptr, ptr);
extern callback void GtkTextView_signal_preedit_changed(ptr, str, ptr);
extern callback void GtkTextView_signal_select_all(ptr, int, ptr);
extern callback void GtkTextView_signal_set_anchor(ptr, ptr);
extern callback void GtkTextView_signal_toggle_cursor_visible(ptr, ptr);
extern callback void GtkTextView_signal_toggle_overwrite(ptr, ptr);
extern callback void GtkToggleButton_signal_toggled(ptr, ptr);
extern callback void GtkTreeSelection_signal_changed(ptr, ptr);
extern callback void GtkTreeView_signal_columns_changed(ptr, ptr);
extern callback void GtkTreeView_signal_cursor_changed(ptr, ptr);
extern callback int GtkTreeView_signal_expand_collapse_cursor_row(ptr, int, int, int, ptr);
extern callback int GtkTreeView_signal_move_cursor(ptr, int, int, int, int, ptr);
extern callback void GtkTreeView_signal_row_activated(ptr, ptr, ptr, ptr);
extern callback void GtkTreeView_signal_row_collapsed(ptr, ptr, ptr, ptr);
extern callback void GtkTreeView_signal_row_expanded(ptr, ptr, ptr, ptr);
extern callback int GtkTreeView_signal_select_all(ptr, ptr);
extern callback int GtkTreeView_signal_select_cursor_parent(ptr, ptr);
extern callback int GtkTreeView_signal_select_cursor_row(ptr, int, ptr);
extern callback int GtkTreeView_signal_start_interactive_search(ptr, ptr);
extern callback int GtkTreeView_signal_test_collapse_row(ptr, ptr, ptr, ptr);
extern callback int GtkTreeView_signal_test_expand_row(ptr, ptr, ptr, ptr);
extern callback int GtkTreeView_signal_toggle_cursor_row(ptr, ptr);
extern callback int GtkTreeView_signal_unselect_all(ptr, ptr);
extern callback void GtkTreeViewColumn_signal_clicked(ptr, ptr);
extern callback void GtkWidget_signal_destroy(ptr, ptr);
extern callback void GtkWidget_signal_direction_changed(ptr, int, ptr);
extern callback void GtkWidget_signal_hide(ptr, ptr);
extern callback int GtkWidget_signal_keynav_failed(ptr, int, ptr);
extern callback void GtkWidget_signal_map(ptr, ptr);
extern callback int GtkWidget_signal_mnemonic_activate(ptr, int, ptr);
extern callback void GtkWidget_signal_move_focus(ptr, int, ptr);
extern callback int GtkWidget_signal_query_tooltip(ptr, int, int, int, ptr, ptr);
extern callback void GtkWidget_signal_realize(ptr, ptr);
extern callback void GtkWidget_signal_show(ptr, ptr);
extern callback void GtkWidget_signal_state_flags_changed(ptr, int, ptr);
extern callback void GtkWidget_signal_unmap(ptr, ptr);
extern callback void GtkWidget_signal_unrealize(ptr, ptr);
extern callback void GtkWindow_signal_activate_default(ptr, ptr);
extern callback void GtkWindow_signal_activate_focus(ptr, ptr);
extern callback int GtkWindow_signal_close_request(ptr, ptr);
extern callback int GtkWindow_signal_enable_debugging(ptr, int, ptr);
extern callback void GtkWindow_signal_keys_changed(ptr, ptr);
////////////////////////
extern callback void GtkAdjustment_virtual_changed(ptr);
extern callback void GtkAdjustment_virtual_value_changed(ptr);
extern callback void GtkApplication_virtual_window_added(ptr, ptr);
extern callback void GtkApplication_virtual_window_removed(ptr, ptr);
extern callback void GtkButton_virtual_activate(ptr);
extern callback void GtkButton_virtual_clicked(ptr);
extern callback int GtkCellArea_virtual_activate(ptr, ptr, ptr, ptr, int, int);
extern callback void GtkCellArea_virtual_add(ptr, ptr);
extern callback void GtkCellArea_virtual_apply_attributes(ptr, ptr, ptr, int, int);
extern callback ptr GtkCellArea_virtual_copy_context(ptr, ptr);
extern callback ptr GtkCellArea_virtual_create_context(ptr);
extern callback int GtkCellArea_virtual_event(ptr, ptr, ptr, ptr, ptr, int);
extern callback int GtkCellArea_virtual_focus(ptr, int);
extern callback void GtkCellArea_virtual_foreach(ptr, ptr, ptr);
extern callback void GtkCellArea_virtual_foreach_alloc(ptr, ptr, ptr, ptr, ptr, ptr, ptr);
extern callback void GtkCellArea_virtual_get_cell_property(ptr, ptr, uint, ptr, ptr);
extern callback void GtkCellArea_virtual_get_preferred_height(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkCellArea_virtual_get_preferred_height_for_width(ptr, ptr, ptr, int, ptr, ptr);
extern callback void GtkCellArea_virtual_get_preferred_width(ptr, ptr, ptr, ptr, ptr);
extern callback void GtkCellArea_virtual_get_preferred_width_for_height(ptr, ptr, ptr, int, ptr, ptr);
extern callback int GtkCellArea_virtual_get_request_mode(ptr);
extern callback int GtkCellArea_virtual_is_activatable(ptr);
extern callback void GtkCellArea_virtual_remove(ptr, ptr);
extern callback void GtkCellArea_virtual_set_cell_property(ptr, ptr, uint, ptr, ptr);
extern callback void GtkCellArea_virtual_snapshot(ptr, ptr, ptr, ptr, ptr, ptr, int, int);
extern callback void GtkCellAreaContext_virtual_allocate(ptr, int, int);
extern callback void GtkCellAreaContext_virtual_get_preferred_height_for_width(ptr, int, ptr, ptr);
extern callback void GtkCellAreaContext_virtual_get_preferred_width_for_height(ptr, int, ptr, ptr);
extern callback void GtkCellAreaContext_virtual_reset(ptr);
extern callback int GtkCellRenderer_virtual_activate(ptr, ptr, ptr, str, ptr, ptr, int);
extern callback void GtkCellRenderer_virtual_editing_canceled(ptr);
extern callback void GtkCellRenderer_virtual_editing_started(ptr, ptr, str);
extern callback void GtkCellRenderer_virtual_get_aligned_area(ptr, ptr, int, ptr, ptr);
extern callback void GtkCellRenderer_virtual_get_preferred_height(ptr, ptr, ptr, ptr);
extern callback void GtkCellRenderer_virtual_get_preferred_height_for_width(ptr, ptr, int, ptr, ptr);
extern callback void GtkCellRenderer_virtual_get_preferred_width(ptr, ptr, ptr, ptr);
extern callback void GtkCellRenderer_virtual_get_preferred_width_for_height(ptr, ptr, int, ptr, ptr);
extern callback int GtkCellRenderer_virtual_get_request_mode(ptr);
extern callback void GtkCellRenderer_virtual_snapshot(ptr, ptr, ptr, ptr, ptr, int);
extern callback ptr GtkCellRenderer_virtual_start_editing(ptr, ptr, ptr, str, ptr, ptr, int);
extern callback void GtkCellRendererText_virtual_edited(ptr, str, str);
extern callback void GtkCheckButton_virtual_activate(ptr);
extern callback void GtkCheckButton_virtual_toggled(ptr);
extern callback void GtkComboBox_virtual_activate(ptr);
extern callback void GtkComboBox_virtual_changed(ptr);
extern callback ptr GtkComboBox_virtual_format_entry_text(ptr, str);
extern callback void GtkDialog_virtual_close(ptr);
extern callback void GtkDialog_virtual_response(ptr, int);
extern callback void GtkDrawingArea_virtual_resize(ptr, int, int);
extern callback void GtkEntry_virtual_activate(ptr);
extern callback uint GtkEntryBuffer_virtual_delete_text(ptr, uint, uint);
extern callback void GtkEntryBuffer_virtual_deleted_text(ptr, uint, uint);
extern callback uint GtkEntryBuffer_virtual_get_length(ptr);
extern callback str GtkEntryBuffer_virtual_get_text(ptr, ptr);
extern callback uint GtkEntryBuffer_virtual_insert_text(ptr, uint, str, uint);
extern callback void GtkEntryBuffer_virtual_inserted_text(ptr, uint, str, uint);
extern callback int GtkFilter_virtual_get_strictness(ptr);
extern callback int GtkFilter_virtual_match(ptr, ptr);
extern callback void GtkFlowBoxChild_virtual_activate(ptr);
extern callback void GtkFrame_virtual_compute_child_allocation(ptr, ptr);
extern callback int GtkGLArea_virtual_render(ptr, ptr);
extern callback void GtkGLArea_virtual_resize(ptr, int, int);
extern callback void GtkIMContext_virtual_commit(ptr, str);
extern callback int GtkIMContext_virtual_delete_surrounding(ptr, int, int);
extern callback int GtkIMContext_virtual_filter_keypress(ptr, ptr);
extern callback void GtkIMContext_virtual_focus_in(ptr);
extern callback void GtkIMContext_virtual_focus_out(ptr);
extern callback void GtkIMContext_virtual_get_preedit_string(ptr, ptr, ptr, ptr);
extern callback int GtkIMContext_virtual_get_surrounding(ptr, ptr, ptr);
extern callback int GtkIMContext_virtual_get_surrounding_with_selection(ptr, ptr, ptr, ptr);
extern callback void GtkIMContext_virtual_preedit_changed(ptr);
extern callback void GtkIMContext_virtual_preedit_end(ptr);
extern callback void GtkIMContext_virtual_preedit_start(ptr);
extern callback void GtkIMContext_virtual_reset(ptr);
extern callback int GtkIMContext_virtual_retrieve_surrounding(ptr);
extern callback void GtkIMContext_virtual_set_client_widget(ptr, ptr);
extern callback void GtkIMContext_virtual_set_cursor_location(ptr, ptr);
extern callback void GtkIMContext_virtual_set_surrounding(ptr, str, int, int);
extern callback void GtkIMContext_virtual_set_surrounding_with_selection(ptr, str, int, int, int);
extern callback void GtkIMContext_virtual_set_use_preedit(ptr, int);
extern callback void GtkLayoutManager_virtual_allocate(ptr, ptr, int, int, int);
extern callback ptr GtkLayoutManager_virtual_create_layout_child(ptr, ptr, ptr);
extern callback int GtkLayoutManager_virtual_get_request_mode(ptr, ptr);
extern callback void GtkLayoutManager_virtual_measure(ptr, ptr, int, int, ptr, ptr, ptr, ptr);
extern callback void GtkLayoutManager_virtual_root(ptr);
extern callback void GtkLayoutManager_virtual_unroot(ptr);
extern callback void GtkListBoxRow_virtual_activate(ptr);
extern callback void GtkMediaFile_virtual_close(ptr);
extern callback void GtkMediaFile_virtual_open(ptr);
extern callback void GtkMediaStream_virtual_pause(ptr);
extern callback int GtkMediaStream_virtual_play(ptr);
extern callback void GtkMediaStream_virtual_realize(ptr, ptr);
extern callback void GtkMediaStream_virtual_seek(ptr, long);
extern callback void GtkMediaStream_virtual_unrealize(ptr, ptr);
extern callback void GtkMediaStream_virtual_update_audio(ptr, int, double);
extern callback void GtkNativeDialog_virtual_hide(ptr);
extern callback void GtkNativeDialog_virtual_response(ptr, int);
extern callback void GtkNativeDialog_virtual_show(ptr);
extern callback void GtkPopover_virtual_activate_default(ptr);
extern callback void GtkPopover_virtual_closed(ptr);
extern callback void GtkPrintOperation_virtual_begin_print(ptr, ptr);
extern callback void GtkPrintOperation_virtual_custom_widget_apply(ptr, ptr);
extern callback void GtkPrintOperation_virtual_done(ptr, int);
extern callback void GtkPrintOperation_virtual_draw_page(ptr, ptr, int);
extern callback void GtkPrintOperation_virtual_end_print(ptr, ptr);
extern callback int GtkPrintOperation_virtual_paginate(ptr, ptr);
extern callback int GtkPrintOperation_virtual_preview(ptr, ptr, ptr, ptr);
extern callback void GtkPrintOperation_virtual_request_page_setup(ptr, ptr, int, ptr);
extern callback void GtkPrintOperation_virtual_status_changed(ptr);
extern callback void GtkPrintOperation_virtual_update_custom_widget(ptr, ptr, ptr, ptr);
extern callback void GtkRange_virtual_adjust_bounds(ptr, double);
extern callback int GtkRange_virtual_change_value(ptr, int, double);
extern callback void GtkRange_virtual_get_range_border(ptr, ptr);
extern callback void GtkRange_virtual_move_slider(ptr, int);
extern callback void GtkRange_virtual_value_changed(ptr);
extern callback void GtkRecentManager_virtual_changed(ptr);
extern callback void GtkScale_virtual_get_layout_offsets(ptr, ptr, ptr);
extern callback void GtkScaleButton_virtual_value_changed(ptr, double);
extern callback int GtkSorter_virtual_compare(ptr, ptr, ptr);
extern callback int GtkSorter_virtual_get_order(ptr);
extern callback void GtkStyleContext_virtual_changed(ptr);
extern callback void GtkTextBuffer_virtual_apply_tag(ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_virtual_begin_user_action(ptr);
extern callback void GtkTextBuffer_virtual_changed(ptr);
extern callback void GtkTextBuffer_virtual_delete_range(ptr, ptr, ptr);
extern callback void GtkTextBuffer_virtual_end_user_action(ptr);
extern callback void GtkTextBuffer_virtual_insert_child_anchor(ptr, ptr, ptr);
extern callback void GtkTextBuffer_virtual_insert_paintable(ptr, ptr, ptr);
extern callback void GtkTextBuffer_virtual_insert_text(ptr, ptr, str, int);
extern callback void GtkTextBuffer_virtual_mark_deleted(ptr, ptr);
extern callback void GtkTextBuffer_virtual_mark_set(ptr, ptr, ptr);
extern callback void GtkTextBuffer_virtual_modified_changed(ptr);
extern callback void GtkTextBuffer_virtual_paste_done(ptr, ptr);
extern callback void GtkTextBuffer_virtual_redo(ptr);
extern callback void GtkTextBuffer_virtual_remove_tag(ptr, ptr, ptr, ptr);
extern callback void GtkTextBuffer_virtual_undo(ptr);
extern callback void GtkTextView_virtual_backspace(ptr);
extern callback void GtkTextView_virtual_copy_clipboard(ptr);
extern callback void GtkTextView_virtual_cut_clipboard(ptr);
extern callback void GtkTextView_virtual_delete_from_cursor(ptr, int, int);
extern callback int GtkTextView_virtual_extend_selection(ptr, int, ptr, ptr, ptr);
extern callback void GtkTextView_virtual_insert_at_cursor(ptr, str);
extern callback void GtkTextView_virtual_insert_emoji(ptr);
extern callback void GtkTextView_virtual_move_cursor(ptr, int, int, int);
extern callback void GtkTextView_virtual_paste_clipboard(ptr);
extern callback void GtkTextView_virtual_set_anchor(ptr);
extern callback void GtkTextView_virtual_snapshot_layer(ptr, int, ptr);
extern callback void GtkTextView_virtual_toggle_overwrite(ptr);
extern callback void GtkToggleButton_virtual_toggled(ptr);
extern callback void GtkTreeModelFilter_virtual_modify(ptr, ptr, ptr, ptr, int);
extern callback int GtkTreeModelFilter_virtual_visible(ptr, ptr, ptr);
extern callback void GtkTreeView_virtual_columns_changed(ptr);
extern callback void GtkTreeView_virtual_cursor_changed(ptr);
extern callback int GtkTreeView_virtual_expand_collapse_cursor_row(ptr, int, int, int);
extern callback int GtkTreeView_virtual_move_cursor(ptr, int, int, int, int);
extern callback void GtkTreeView_virtual_row_activated(ptr, ptr, ptr);
extern callback void GtkTreeView_virtual_row_collapsed(ptr, ptr, ptr);
extern callback void GtkTreeView_virtual_row_expanded(ptr, ptr, ptr);
extern callback int GtkTreeView_virtual_select_all(ptr);
extern callback int GtkTreeView_virtual_select_cursor_parent(ptr);
extern callback int GtkTreeView_virtual_select_cursor_row(ptr, int);
extern callback int GtkTreeView_virtual_start_interactive_search(ptr);
extern callback int GtkTreeView_virtual_test_collapse_row(ptr, ptr, ptr);
extern callback int GtkTreeView_virtual_test_expand_row(ptr, ptr, ptr);
extern callback int GtkTreeView_virtual_toggle_cursor_row(ptr);
extern callback int GtkTreeView_virtual_unselect_all(ptr);
extern callback void GtkWidget_virtual_compute_expand(ptr, ptr, ptr);
extern callback int GtkWidget_virtual_contains(ptr, double, double);
extern callback void GtkWidget_virtual_css_changed(ptr, ptr);
extern callback void GtkWidget_virtual_direction_changed(ptr, int);
extern callback int GtkWidget_virtual_focus(ptr, int);
extern callback int GtkWidget_virtual_get_request_mode(ptr);
extern callback int GtkWidget_virtual_grab_focus(ptr);
extern callback void GtkWidget_virtual_hide(ptr);
extern callback int GtkWidget_virtual_keynav_failed(ptr, int);
extern callback void GtkWidget_virtual_map(ptr);
extern callback void GtkWidget_virtual_measure(ptr, int, int, ptr, ptr, ptr, ptr);
extern callback int GtkWidget_virtual_mnemonic_activate(ptr, int);
extern callback void GtkWidget_virtual_move_focus(ptr, int);
extern callback int GtkWidget_virtual_query_tooltip(ptr, int, int, int, ptr);
extern callback void GtkWidget_virtual_realize(ptr);
extern callback void GtkWidget_virtual_root(ptr);
extern callback void GtkWidget_virtual_set_focus_child(ptr, ptr);
extern callback void GtkWidget_virtual_show(ptr);
extern callback void GtkWidget_virtual_size_allocate(ptr, int, int, int);
extern callback void GtkWidget_virtual_snapshot(ptr, ptr);
extern callback void GtkWidget_virtual_state_flags_changed(ptr, int);
extern callback void GtkWidget_virtual_system_setting_changed(ptr, int);
extern callback void GtkWidget_virtual_unmap(ptr);
extern callback void GtkWidget_virtual_unrealize(ptr);
extern callback void GtkWidget_virtual_unroot(ptr);
extern callback void GtkWindow_virtual_activate_default(ptr);
extern callback void GtkWindow_virtual_activate_focus(ptr);
extern callback int GtkWindow_virtual_close_request(ptr);
extern callback int GtkWindow_virtual_enable_debugging(ptr, int);
extern callback void GtkWindow_virtual_keys_changed(ptr);

